                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Fri Dec 12 18:25:13 2014
                              5 ;--------------------------------------------------------
                              6 	.module lcd
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _RST
                             13 	.globl _CS2
                             14 	.globl _CS1
                             15 	.globl _RS
                             16 	.globl _CY
                             17 	.globl _AC
                             18 	.globl _F0
                             19 	.globl _RS1
                             20 	.globl _RS0
                             21 	.globl _OV
                             22 	.globl _F1
                             23 	.globl _P
                             24 	.globl _PS
                             25 	.globl _PT1
                             26 	.globl _PX1
                             27 	.globl _PT0
                             28 	.globl _PX0
                             29 	.globl _RD
                             30 	.globl _WR
                             31 	.globl _T1
                             32 	.globl _T0
                             33 	.globl _INT1
                             34 	.globl _INT0
                             35 	.globl _TXD
                             36 	.globl _RXD
                             37 	.globl _P3_7
                             38 	.globl _P3_6
                             39 	.globl _P3_5
                             40 	.globl _P3_4
                             41 	.globl _P3_3
                             42 	.globl _P3_2
                             43 	.globl _P3_1
                             44 	.globl _P3_0
                             45 	.globl _EA
                             46 	.globl _ES
                             47 	.globl _ET1
                             48 	.globl _EX1
                             49 	.globl _ET0
                             50 	.globl _EX0
                             51 	.globl _P2_7
                             52 	.globl _P2_6
                             53 	.globl _P2_5
                             54 	.globl _P2_4
                             55 	.globl _P2_3
                             56 	.globl _P2_2
                             57 	.globl _P2_1
                             58 	.globl _P2_0
                             59 	.globl _SM0
                             60 	.globl _SM1
                             61 	.globl _SM2
                             62 	.globl _REN
                             63 	.globl _TB8
                             64 	.globl _RB8
                             65 	.globl _TI
                             66 	.globl _RI
                             67 	.globl _P1_7
                             68 	.globl _P1_6
                             69 	.globl _P1_5
                             70 	.globl _P1_4
                             71 	.globl _P1_3
                             72 	.globl _P1_2
                             73 	.globl _P1_1
                             74 	.globl _P1_0
                             75 	.globl _TF1
                             76 	.globl _TR1
                             77 	.globl _TF0
                             78 	.globl _TR0
                             79 	.globl _IE1
                             80 	.globl _IT1
                             81 	.globl _IE0
                             82 	.globl _IT0
                             83 	.globl _P0_7
                             84 	.globl _P0_6
                             85 	.globl _P0_5
                             86 	.globl _P0_4
                             87 	.globl _P0_3
                             88 	.globl _P0_2
                             89 	.globl _P0_1
                             90 	.globl _P0_0
                             91 	.globl _TF2
                             92 	.globl _EXF2
                             93 	.globl _RCLK
                             94 	.globl _TCLK
                             95 	.globl _EXEN2
                             96 	.globl _TR2
                             97 	.globl _C_T2
                             98 	.globl _CP_RL2
                             99 	.globl _T2CON_7
                            100 	.globl _T2CON_6
                            101 	.globl _T2CON_5
                            102 	.globl _T2CON_4
                            103 	.globl _T2CON_3
                            104 	.globl _T2CON_2
                            105 	.globl _T2CON_1
                            106 	.globl _T2CON_0
                            107 	.globl _PT2
                            108 	.globl _ET2
                            109 	.globl _TXD0
                            110 	.globl _RXD0
                            111 	.globl _BREG_F7
                            112 	.globl _BREG_F6
                            113 	.globl _BREG_F5
                            114 	.globl _BREG_F4
                            115 	.globl _BREG_F3
                            116 	.globl _BREG_F2
                            117 	.globl _BREG_F1
                            118 	.globl _BREG_F0
                            119 	.globl _P5_7
                            120 	.globl _P5_6
                            121 	.globl _P5_5
                            122 	.globl _P5_4
                            123 	.globl _P5_3
                            124 	.globl _P5_2
                            125 	.globl _P5_1
                            126 	.globl _P5_0
                            127 	.globl _P4_7
                            128 	.globl _P4_6
                            129 	.globl _P4_5
                            130 	.globl _P4_4
                            131 	.globl _P4_3
                            132 	.globl _P4_2
                            133 	.globl _P4_1
                            134 	.globl _P4_0
                            135 	.globl _PX0L
                            136 	.globl _PT0L
                            137 	.globl _PX1L
                            138 	.globl _PT1L
                            139 	.globl _PLS
                            140 	.globl _PT2L
                            141 	.globl _PPCL
                            142 	.globl _EC
                            143 	.globl _CCF0
                            144 	.globl _CCF1
                            145 	.globl _CCF2
                            146 	.globl _CCF3
                            147 	.globl _CCF4
                            148 	.globl _CR
                            149 	.globl _CF
                            150 	.globl _B
                            151 	.globl _ACC
                            152 	.globl _PSW
                            153 	.globl _IP
                            154 	.globl _P3
                            155 	.globl _IE
                            156 	.globl _P2
                            157 	.globl _SBUF
                            158 	.globl _SCON
                            159 	.globl _P1
                            160 	.globl _TH1
                            161 	.globl _TH0
                            162 	.globl _TL1
                            163 	.globl _TL0
                            164 	.globl _TMOD
                            165 	.globl _TCON
                            166 	.globl _PCON
                            167 	.globl _DPH
                            168 	.globl _DPL
                            169 	.globl _SP
                            170 	.globl _P0
                            171 	.globl _TH2
                            172 	.globl _TL2
                            173 	.globl _RCAP2H
                            174 	.globl _RCAP2L
                            175 	.globl _T2CON
                            176 	.globl _SBUF0
                            177 	.globl _DP0L
                            178 	.globl _DP0H
                            179 	.globl _EECON
                            180 	.globl _KBF
                            181 	.globl _KBE
                            182 	.globl _KBLS
                            183 	.globl _BRL
                            184 	.globl _BDRCON
                            185 	.globl _T2MOD
                            186 	.globl _SPDAT
                            187 	.globl _SPSTA
                            188 	.globl _SPCON
                            189 	.globl _SADEN
                            190 	.globl _SADDR
                            191 	.globl _WDTPRG
                            192 	.globl _WDTRST
                            193 	.globl _P5
                            194 	.globl _P4
                            195 	.globl _IPH1
                            196 	.globl _IPL1
                            197 	.globl _IPH0
                            198 	.globl _IPL0
                            199 	.globl _IEN1
                            200 	.globl _IEN0
                            201 	.globl _CMOD
                            202 	.globl _CL
                            203 	.globl _CH
                            204 	.globl _CCON
                            205 	.globl _CCAPM4
                            206 	.globl _CCAPM3
                            207 	.globl _CCAPM2
                            208 	.globl _CCAPM1
                            209 	.globl _CCAPM0
                            210 	.globl _CCAP4L
                            211 	.globl _CCAP3L
                            212 	.globl _CCAP2L
                            213 	.globl _CCAP1L
                            214 	.globl _CCAP0L
                            215 	.globl _CCAP4H
                            216 	.globl _CCAP3H
                            217 	.globl _CCAP2H
                            218 	.globl _CCAP1H
                            219 	.globl _CCAP0H
                            220 	.globl _CKCKON1
                            221 	.globl _CKCKON0
                            222 	.globl _CKRL
                            223 	.globl _AUXR1
                            224 	.globl _AUXR
                            225 	.globl _rand_PARM_2
                            226 	.globl _draw_pillar_PARM_4
                            227 	.globl _draw_pillar_PARM_3
                            228 	.globl _draw_pillar_PARM_2
                            229 	.globl _GLCD_WriteString_PARM_4
                            230 	.globl _GLCD_WriteString_PARM_3
                            231 	.globl _GLCD_WriteString_PARM_2
                            232 	.globl _GLCD_WriteHeli_PARM_3
                            233 	.globl _GLCD_WriteHeli_PARM_2
                            234 	.globl _GLCD_WriteBrick_PARM_4
                            235 	.globl _GLCD_WriteBrick_PARM_3
                            236 	.globl _GLCD_WriteBrick_PARM_2
                            237 	.globl _GLCD_WriteChar_PARM_4
                            238 	.globl _GLCD_WriteChar_PARM_3
                            239 	.globl _GLCD_WriteChar_PARM_2
                            240 	.globl _lcd_write_wait_PARM_3
                            241 	.globl _lcd_write_wait_PARM_2
                            242 	.globl _lcd_write_PARM_3
                            243 	.globl _lcd_write_PARM_2
                            244 	.globl _lcd_read_PARM_2
                            245 	.globl _LCD_RD
                            246 	.globl _LCD_WR
                            247 	.globl _lcdinit
                            248 	.globl _lcd_read
                            249 	.globl _lcd_write
                            250 	.globl _lcd_wait
                            251 	.globl _lcd_write_wait
                            252 	.globl _lcd_clear
                            253 	.globl _lcd_clear_invert
                            254 	.globl _clear_game_screen
                            255 	.globl _still_screen
                            256 	.globl _next_level_screen
                            257 	.globl _game_over
                            258 	.globl _cheater
                            259 	.globl _creater_screen
                            260 	.globl _game_menu
                            261 	.globl _difficulty_menu
                            262 	.globl _draw_banner
                            263 	.globl _accel_screen
                            264 	.globl _GLCD_WriteChar
                            265 	.globl _GLCD_WriteBrick
                            266 	.globl _GLCD_WriteHeli
                            267 	.globl _GLCD_WriteString
                            268 	.globl _draw_pillar
                            269 	.globl _delay_ms
                            270 	.globl _rand
                            271 ;--------------------------------------------------------
                            272 ; special function registers
                            273 ;--------------------------------------------------------
                            274 	.area RSEG    (DATA)
                    008E    275 _AUXR	=	0x008e
                    00A2    276 _AUXR1	=	0x00a2
                    0097    277 _CKRL	=	0x0097
                    008F    278 _CKCKON0	=	0x008f
                    008F    279 _CKCKON1	=	0x008f
                    00FA    280 _CCAP0H	=	0x00fa
                    00FB    281 _CCAP1H	=	0x00fb
                    00FC    282 _CCAP2H	=	0x00fc
                    00FD    283 _CCAP3H	=	0x00fd
                    00FE    284 _CCAP4H	=	0x00fe
                    00EA    285 _CCAP0L	=	0x00ea
                    00EB    286 _CCAP1L	=	0x00eb
                    00EC    287 _CCAP2L	=	0x00ec
                    00ED    288 _CCAP3L	=	0x00ed
                    00EE    289 _CCAP4L	=	0x00ee
                    00DA    290 _CCAPM0	=	0x00da
                    00DB    291 _CCAPM1	=	0x00db
                    00DC    292 _CCAPM2	=	0x00dc
                    00DD    293 _CCAPM3	=	0x00dd
                    00DE    294 _CCAPM4	=	0x00de
                    00D8    295 _CCON	=	0x00d8
                    00F9    296 _CH	=	0x00f9
                    00E9    297 _CL	=	0x00e9
                    00D9    298 _CMOD	=	0x00d9
                    00A8    299 _IEN0	=	0x00a8
                    00B1    300 _IEN1	=	0x00b1
                    00B8    301 _IPL0	=	0x00b8
                    00B7    302 _IPH0	=	0x00b7
                    00B2    303 _IPL1	=	0x00b2
                    00B3    304 _IPH1	=	0x00b3
                    00C0    305 _P4	=	0x00c0
                    00D8    306 _P5	=	0x00d8
                    00A6    307 _WDTRST	=	0x00a6
                    00A7    308 _WDTPRG	=	0x00a7
                    00A9    309 _SADDR	=	0x00a9
                    00B9    310 _SADEN	=	0x00b9
                    00C3    311 _SPCON	=	0x00c3
                    00C4    312 _SPSTA	=	0x00c4
                    00C5    313 _SPDAT	=	0x00c5
                    00C9    314 _T2MOD	=	0x00c9
                    009B    315 _BDRCON	=	0x009b
                    009A    316 _BRL	=	0x009a
                    009C    317 _KBLS	=	0x009c
                    009D    318 _KBE	=	0x009d
                    009E    319 _KBF	=	0x009e
                    00D2    320 _EECON	=	0x00d2
                    0083    321 _DP0H	=	0x0083
                    0082    322 _DP0L	=	0x0082
                    0099    323 _SBUF0	=	0x0099
                    00C8    324 _T2CON	=	0x00c8
                    00CA    325 _RCAP2L	=	0x00ca
                    00CB    326 _RCAP2H	=	0x00cb
                    00CC    327 _TL2	=	0x00cc
                    00CD    328 _TH2	=	0x00cd
                    0080    329 _P0	=	0x0080
                    0081    330 _SP	=	0x0081
                    0082    331 _DPL	=	0x0082
                    0083    332 _DPH	=	0x0083
                    0087    333 _PCON	=	0x0087
                    0088    334 _TCON	=	0x0088
                    0089    335 _TMOD	=	0x0089
                    008A    336 _TL0	=	0x008a
                    008B    337 _TL1	=	0x008b
                    008C    338 _TH0	=	0x008c
                    008D    339 _TH1	=	0x008d
                    0090    340 _P1	=	0x0090
                    0098    341 _SCON	=	0x0098
                    0099    342 _SBUF	=	0x0099
                    00A0    343 _P2	=	0x00a0
                    00A8    344 _IE	=	0x00a8
                    00B0    345 _P3	=	0x00b0
                    00B8    346 _IP	=	0x00b8
                    00D0    347 _PSW	=	0x00d0
                    00E0    348 _ACC	=	0x00e0
                    00F0    349 _B	=	0x00f0
                            350 ;--------------------------------------------------------
                            351 ; special function bits
                            352 ;--------------------------------------------------------
                            353 	.area RSEG    (DATA)
                    00DF    354 _CF	=	0x00df
                    00DE    355 _CR	=	0x00de
                    00DC    356 _CCF4	=	0x00dc
                    00DB    357 _CCF3	=	0x00db
                    00DA    358 _CCF2	=	0x00da
                    00D9    359 _CCF1	=	0x00d9
                    00D8    360 _CCF0	=	0x00d8
                    00AE    361 _EC	=	0x00ae
                    00BE    362 _PPCL	=	0x00be
                    00BD    363 _PT2L	=	0x00bd
                    00BC    364 _PLS	=	0x00bc
                    00BB    365 _PT1L	=	0x00bb
                    00BA    366 _PX1L	=	0x00ba
                    00B9    367 _PT0L	=	0x00b9
                    00B8    368 _PX0L	=	0x00b8
                    00C0    369 _P4_0	=	0x00c0
                    00C1    370 _P4_1	=	0x00c1
                    00C2    371 _P4_2	=	0x00c2
                    00C3    372 _P4_3	=	0x00c3
                    00C4    373 _P4_4	=	0x00c4
                    00C5    374 _P4_5	=	0x00c5
                    00C6    375 _P4_6	=	0x00c6
                    00C7    376 _P4_7	=	0x00c7
                    00D8    377 _P5_0	=	0x00d8
                    00D9    378 _P5_1	=	0x00d9
                    00DA    379 _P5_2	=	0x00da
                    00DB    380 _P5_3	=	0x00db
                    00DC    381 _P5_4	=	0x00dc
                    00DD    382 _P5_5	=	0x00dd
                    00DE    383 _P5_6	=	0x00de
                    00DF    384 _P5_7	=	0x00df
                    00F0    385 _BREG_F0	=	0x00f0
                    00F1    386 _BREG_F1	=	0x00f1
                    00F2    387 _BREG_F2	=	0x00f2
                    00F3    388 _BREG_F3	=	0x00f3
                    00F4    389 _BREG_F4	=	0x00f4
                    00F5    390 _BREG_F5	=	0x00f5
                    00F6    391 _BREG_F6	=	0x00f6
                    00F7    392 _BREG_F7	=	0x00f7
                    00B0    393 _RXD0	=	0x00b0
                    00B1    394 _TXD0	=	0x00b1
                    00AD    395 _ET2	=	0x00ad
                    00BD    396 _PT2	=	0x00bd
                    00C8    397 _T2CON_0	=	0x00c8
                    00C9    398 _T2CON_1	=	0x00c9
                    00CA    399 _T2CON_2	=	0x00ca
                    00CB    400 _T2CON_3	=	0x00cb
                    00CC    401 _T2CON_4	=	0x00cc
                    00CD    402 _T2CON_5	=	0x00cd
                    00CE    403 _T2CON_6	=	0x00ce
                    00CF    404 _T2CON_7	=	0x00cf
                    00C8    405 _CP_RL2	=	0x00c8
                    00C9    406 _C_T2	=	0x00c9
                    00CA    407 _TR2	=	0x00ca
                    00CB    408 _EXEN2	=	0x00cb
                    00CC    409 _TCLK	=	0x00cc
                    00CD    410 _RCLK	=	0x00cd
                    00CE    411 _EXF2	=	0x00ce
                    00CF    412 _TF2	=	0x00cf
                    0080    413 _P0_0	=	0x0080
                    0081    414 _P0_1	=	0x0081
                    0082    415 _P0_2	=	0x0082
                    0083    416 _P0_3	=	0x0083
                    0084    417 _P0_4	=	0x0084
                    0085    418 _P0_5	=	0x0085
                    0086    419 _P0_6	=	0x0086
                    0087    420 _P0_7	=	0x0087
                    0088    421 _IT0	=	0x0088
                    0089    422 _IE0	=	0x0089
                    008A    423 _IT1	=	0x008a
                    008B    424 _IE1	=	0x008b
                    008C    425 _TR0	=	0x008c
                    008D    426 _TF0	=	0x008d
                    008E    427 _TR1	=	0x008e
                    008F    428 _TF1	=	0x008f
                    0090    429 _P1_0	=	0x0090
                    0091    430 _P1_1	=	0x0091
                    0092    431 _P1_2	=	0x0092
                    0093    432 _P1_3	=	0x0093
                    0094    433 _P1_4	=	0x0094
                    0095    434 _P1_5	=	0x0095
                    0096    435 _P1_6	=	0x0096
                    0097    436 _P1_7	=	0x0097
                    0098    437 _RI	=	0x0098
                    0099    438 _TI	=	0x0099
                    009A    439 _RB8	=	0x009a
                    009B    440 _TB8	=	0x009b
                    009C    441 _REN	=	0x009c
                    009D    442 _SM2	=	0x009d
                    009E    443 _SM1	=	0x009e
                    009F    444 _SM0	=	0x009f
                    00A0    445 _P2_0	=	0x00a0
                    00A1    446 _P2_1	=	0x00a1
                    00A2    447 _P2_2	=	0x00a2
                    00A3    448 _P2_3	=	0x00a3
                    00A4    449 _P2_4	=	0x00a4
                    00A5    450 _P2_5	=	0x00a5
                    00A6    451 _P2_6	=	0x00a6
                    00A7    452 _P2_7	=	0x00a7
                    00A8    453 _EX0	=	0x00a8
                    00A9    454 _ET0	=	0x00a9
                    00AA    455 _EX1	=	0x00aa
                    00AB    456 _ET1	=	0x00ab
                    00AC    457 _ES	=	0x00ac
                    00AF    458 _EA	=	0x00af
                    00B0    459 _P3_0	=	0x00b0
                    00B1    460 _P3_1	=	0x00b1
                    00B2    461 _P3_2	=	0x00b2
                    00B3    462 _P3_3	=	0x00b3
                    00B4    463 _P3_4	=	0x00b4
                    00B5    464 _P3_5	=	0x00b5
                    00B6    465 _P3_6	=	0x00b6
                    00B7    466 _P3_7	=	0x00b7
                    00B0    467 _RXD	=	0x00b0
                    00B1    468 _TXD	=	0x00b1
                    00B2    469 _INT0	=	0x00b2
                    00B3    470 _INT1	=	0x00b3
                    00B4    471 _T0	=	0x00b4
                    00B5    472 _T1	=	0x00b5
                    00B6    473 _WR	=	0x00b6
                    00B7    474 _RD	=	0x00b7
                    00B8    475 _PX0	=	0x00b8
                    00B9    476 _PT0	=	0x00b9
                    00BA    477 _PX1	=	0x00ba
                    00BB    478 _PT1	=	0x00bb
                    00BC    479 _PS	=	0x00bc
                    00D0    480 _P	=	0x00d0
                    00D1    481 _F1	=	0x00d1
                    00D2    482 _OV	=	0x00d2
                    00D3    483 _RS0	=	0x00d3
                    00D4    484 _RS1	=	0x00d4
                    00D5    485 _F0	=	0x00d5
                    00D6    486 _AC	=	0x00d6
                    00D7    487 _CY	=	0x00d7
                    0093    488 _RS	=	0x0093
                    0091    489 _CS1	=	0x0091
                    0090    490 _CS2	=	0x0090
                    0096    491 _RST	=	0x0096
                            492 ;--------------------------------------------------------
                            493 ; overlayable register banks
                            494 ;--------------------------------------------------------
                            495 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     496 	.ds 8
                            497 ;--------------------------------------------------------
                            498 ; internal ram data
                            499 ;--------------------------------------------------------
                            500 	.area DSEG    (DATA)
   0000                     501 _GLCD_WriteChar_sloc1_1_0:
   0000                     502 	.ds 2
   0002                     503 _GLCD_WriteBrick_sloc0_1_0:
   0002                     504 	.ds 1
                            505 ;--------------------------------------------------------
                            506 ; overlayable items in internal ram 
                            507 ;--------------------------------------------------------
                            508 	.area OSEG    (OVR,DATA)
                            509 ;--------------------------------------------------------
                            510 ; indirectly addressable internal ram data
                            511 ;--------------------------------------------------------
                            512 	.area ISEG    (DATA)
                            513 ;--------------------------------------------------------
                            514 ; bit data
                            515 ;--------------------------------------------------------
                            516 	.area BSEG    (BIT)
                            517 ;--------------------------------------------------------
                            518 ; paged external ram data
                            519 ;--------------------------------------------------------
                            520 	.area PSEG    (PAG,XDATA)
                            521 ;--------------------------------------------------------
                            522 ; external ram data
                            523 ;--------------------------------------------------------
                            524 	.area XSEG    (XDATA)
                    F000    525 _LCD_WR	=	0xf000
                    F100    526 _LCD_RD	=	0xf100
   0000                     527 _lcd_read_PARM_2:
   0000                     528 	.ds 2
   0002                     529 _lcd_read_chip_1_1:
   0002                     530 	.ds 2
   0004                     531 _lcd_write_PARM_2:
   0004                     532 	.ds 1
   0005                     533 _lcd_write_PARM_3:
   0005                     534 	.ds 1
   0006                     535 _lcd_write_chip_1_1:
   0006                     536 	.ds 1
   0007                     537 _lcd_wait_chip_1_1:
   0007                     538 	.ds 1
   0008                     539 _lcd_write_wait_PARM_2:
   0008                     540 	.ds 1
   0009                     541 _lcd_write_wait_PARM_3:
   0009                     542 	.ds 1
   000A                     543 _lcd_write_wait_chip_1_1:
   000A                     544 	.ds 1
   000B                     545 _still_screen_score_1_1:
   000B                     546 	.ds 10
   0015                     547 _still_screen_title_1_1:
   0015                     548 	.ds 10
   001F                     549 _next_level_screen_level_1_1:
   001F                     550 	.ds 1
   0020                     551 _next_level_screen_level_complete_1_1:
   0020                     552 	.ds 17
   0031                     553 _next_level_screen_level_begin_1_1:
   0031                     554 	.ds 13
   003E                     555 _next_level_screen_level_end_1_1:
   003E                     556 	.ds 17
   004F                     557 _next_level_screen_clear_line_1_1:
   004F                     558 	.ds 10
   0059                     559 _game_over_game_finished_1_1:
   0059                     560 	.ds 13
   0066                     561 _cheater_game_finished_1_1:
   0066                     562 	.ds 13
   0073                     563 _creater_screen_creater_1_1:
   0073                     564 	.ds 16
   0083                     565 _creater_screen_presents_1_1:
   0083                     566 	.ds 9
   008C                     567 _creater_screen_smurf_cat_1_1:
   008C                     568 	.ds 11
   0097                     569 _creater_screen_production_1_1:
   0097                     570 	.ds 11
   00A2                     571 _creater_screen_heli_tilt_1_1:
   00A2                     572 	.ds 10
   00AC                     573 _game_menu_play_game_1_1:
   00AC                     574 	.ds 10
   00B6                     575 _game_menu_high_scores_1_1:
   00B6                     576 	.ds 12
   00C2                     577 _game_menu_calibrate_1_1:
   00C2                     578 	.ds 10
   00CC                     579 _game_menu_heli_tilt_1_1:
   00CC                     580 	.ds 10
   00D6                     581 _game_menu_diffculty_1_1:
   00D6                     582 	.ds 15
   00E5                     583 _game_menu_choice_page_1_1:
   00E5                     584 	.ds 2
   00E7                     585 _difficulty_menu_easy_1_1:
   00E7                     586 	.ds 9
   00F0                     587 _difficulty_menu_medium_1_1:
   00F0                     588 	.ds 11
   00FB                     589 _difficulty_menu_smash_cat_1_1:
   00FB                     590 	.ds 13
   0108                     591 _difficulty_menu_heli_tilt_1_1:
   0108                     592 	.ds 10
   0112                     593 _difficulty_menu_choice_page_1_1:
   0112                     594 	.ds 2
   0114                     595 _accel_screen_title_1_1:
   0114                     596 	.ds 20
   0128                     597 _accel_screen_x_axis_1_1:
   0128                     598 	.ds 10
   0132                     599 _accel_screen_y_axis_1_1:
   0132                     600 	.ds 10
   013C                     601 _accel_screen_z_axis_1_1:
   013C                     602 	.ds 10
   0146                     603 _accel_screen_clear_line_1_1:
   0146                     604 	.ds 10
   0150                     605 _accel_screen_print_x_1_1:
   0150                     606 	.ds 10
   015A                     607 _accel_screen_print_y_1_1:
   015A                     608 	.ds 10
   0164                     609 _accel_screen_print_z_1_1:
   0164                     610 	.ds 10
   016E                     611 _accel_screen_x_1_1:
   016E                     612 	.ds 2
   0170                     613 _GLCD_WriteChar_PARM_2:
   0170                     614 	.ds 1
   0171                     615 _GLCD_WriteChar_PARM_3:
   0171                     616 	.ds 1
   0172                     617 _GLCD_WriteChar_PARM_4:
   0172                     618 	.ds 1
   0173                     619 _GLCD_WriteChar_charToWrite_1_1:
   0173                     620 	.ds 1
   0174                     621 _GLCD_WriteChar_lcd_chip_1_1:
   0174                     622 	.ds 1
   0175                     623 _GLCD_WriteChar_lcd_y_1_1:
   0175                     624 	.ds 1
   0176                     625 _GLCD_WriteBrick_PARM_2:
   0176                     626 	.ds 1
   0177                     627 _GLCD_WriteBrick_PARM_3:
   0177                     628 	.ds 2
   0179                     629 _GLCD_WriteBrick_PARM_4:
   0179                     630 	.ds 1
   017A                     631 _GLCD_WriteBrick_charToWrite_1_1:
   017A                     632 	.ds 2
   017C                     633 _GLCD_WriteBrick_lcd_chip_1_1:
   017C                     634 	.ds 1
   017D                     635 _GLCD_WriteBrick_lcd_y_1_1:
   017D                     636 	.ds 1
   017E                     637 _GLCD_WriteBrick_char_lines_1_1:
   017E                     638 	.ds 1
   017F                     639 _GLCD_WriteHeli_PARM_2:
   017F                     640 	.ds 1
   0180                     641 _GLCD_WriteHeli_PARM_3:
   0180                     642 	.ds 1
   0181                     643 _GLCD_WriteHeli_charToWrite_1_1:
   0181                     644 	.ds 1
   0182                     645 _GLCD_WriteHeli_lcd_chip_1_1:
   0182                     646 	.ds 1
   0183                     647 _GLCD_WriteHeli_lcd_y_1_1:
   0183                     648 	.ds 1
   0184                     649 _GLCD_WriteString_PARM_2:
   0184                     650 	.ds 1
   0185                     651 _GLCD_WriteString_PARM_3:
   0185                     652 	.ds 1
   0186                     653 _GLCD_WriteString_PARM_4:
   0186                     654 	.ds 1
   0187                     655 _GLCD_WriteString_stringToWrite_1_1:
   0187                     656 	.ds 3
   018A                     657 _GLCD_WriteString_i_1_1:
   018A                     658 	.ds 2
   018C                     659 _draw_pillar_PARM_2:
   018C                     660 	.ds 1
   018D                     661 _draw_pillar_PARM_3:
   018D                     662 	.ds 2
   018F                     663 _draw_pillar_PARM_4:
   018F                     664 	.ds 1
   0190                     665 _draw_pillar_len_1_1:
   0190                     666 	.ds 1
   0191                     667 _delay_ms_num_ms_1_1:
   0191                     668 	.ds 2
   0193                     669 _delay_ms_k_1_1:
   0193                     670 	.ds 2
   0195                     671 _rand_PARM_2:
   0195                     672 	.ds 2
   0197                     673 _rand_min_num_1_1:
   0197                     674 	.ds 2
   0199                     675 _rand_LFSR_1_1:
   0199                     676 	.ds 2
                            677 ;--------------------------------------------------------
                            678 ; external initialized ram data
                            679 ;--------------------------------------------------------
                            680 	.area XISEG   (XDATA)
                            681 	.area HOME    (CODE)
                            682 	.area GSINIT0 (CODE)
                            683 	.area GSINIT1 (CODE)
                            684 	.area GSINIT2 (CODE)
                            685 	.area GSINIT3 (CODE)
                            686 	.area GSINIT4 (CODE)
                            687 	.area GSINIT5 (CODE)
                            688 	.area GSINIT  (CODE)
                            689 	.area GSFINAL (CODE)
                            690 	.area CSEG    (CODE)
                            691 ;--------------------------------------------------------
                            692 ; global & static initialisations
                            693 ;--------------------------------------------------------
                            694 	.area HOME    (CODE)
                            695 	.area GSINIT  (CODE)
                            696 	.area GSFINAL (CODE)
                            697 	.area GSINIT  (CODE)
                            698 ;------------------------------------------------------------
                            699 ;Allocation info for local variables in function 'rand'
                            700 ;------------------------------------------------------------
                            701 ;max_num                   Allocated with name '_rand_PARM_2'
                            702 ;min_num                   Allocated with name '_rand_min_num_1_1'
                            703 ;bits                      Allocated with name '_rand_bits_1_1'
                            704 ;LFSR                      Allocated with name '_rand_LFSR_1_1'
                            705 ;------------------------------------------------------------
                            706 ;	lcd.c:813: static unsigned int LFSR = 0xACE1;
                            707 ;	genAssign
   0000 90s01r99            708 	mov	dptr,#_rand_LFSR_1_1
   0003 74 E1               709 	mov	a,#0xE1
   0005 F0                  710 	movx	@dptr,a
   0006 A3                  711 	inc	dptr
   0007 74 AC               712 	mov	a,#0xAC
   0009 F0                  713 	movx	@dptr,a
                            714 ;--------------------------------------------------------
                            715 ; Home
                            716 ;--------------------------------------------------------
                            717 	.area HOME    (CODE)
                            718 	.area CSEG    (CODE)
                            719 ;--------------------------------------------------------
                            720 ; code
                            721 ;--------------------------------------------------------
                            722 	.area CSEG    (CODE)
                            723 ;------------------------------------------------------------
                            724 ;Allocation info for local variables in function 'lcdinit'
                            725 ;------------------------------------------------------------
                            726 ;------------------------------------------------------------
                            727 ;	lcd.c:24: void lcdinit()
                            728 ;	-----------------------------------------
                            729 ;	 function lcdinit
                            730 ;	-----------------------------------------
   0000                     731 _lcdinit:
                    0002    732 	ar2 = 0x02
                    0003    733 	ar3 = 0x03
                    0004    734 	ar4 = 0x04
                    0005    735 	ar5 = 0x05
                    0006    736 	ar6 = 0x06
                    0007    737 	ar7 = 0x07
                    0000    738 	ar0 = 0x00
                    0001    739 	ar1 = 0x01
                            740 ;	lcd.c:27: RS = 0;
                            741 ;	genAssign
   0000 C2 93               742 	clr	_RS
                            743 ;	lcd.c:28: CS1 = 1;
                            744 ;	genAssign
   0002 D2 91               745 	setb	_CS1
                            746 ;	lcd.c:29: CS2 = 1;
                            747 ;	genAssign
   0004 D2 90               748 	setb	_CS2
                            749 ;	lcd.c:31: delay_ms(10);
                            750 ;	genCall
                            751 ;	Peephole 182.b	used 16 bit load of dptr
   0006 90 00 0A            752 	mov	dptr,#0x000A
   0009 12s1Cr7C            753 	lcall	_delay_ms
                            754 ;	lcd.c:33: lcd_wait(0);
                            755 ;	genCall
   000C 75 82 00            756 	mov	dpl,#0x00
   000F 12s00rC5            757 	lcall	_lcd_wait
                            758 ;	lcd.c:34: lcd_wait(1);
                            759 ;	genCall
   0012 75 82 01            760 	mov	dpl,#0x01
   0015 12s00rC5            761 	lcall	_lcd_wait
                            762 ;	lcd.c:36: lcd_write_wait(0, LCD_INST, LCD_POWERON(1));
                            763 ;	genAssign
   0018 90s00r08            764 	mov	dptr,#_lcd_write_wait_PARM_2
                            765 ;	Peephole 181	changed mov to clr
   001B E4                  766 	clr	a
   001C F0                  767 	movx	@dptr,a
                            768 ;	genAssign
   001D 90s00r09            769 	mov	dptr,#_lcd_write_wait_PARM_3
   0020 74 3F               770 	mov	a,#0x3F
   0022 F0                  771 	movx	@dptr,a
                            772 ;	genCall
   0023 75 82 00            773 	mov	dpl,#0x00
   0026 12s00rEF            774 	lcall	_lcd_write_wait
                            775 ;	lcd.c:37: lcd_write_wait(1, LCD_INST, LCD_POWERON(1));
                            776 ;	genAssign
   0029 90s00r08            777 	mov	dptr,#_lcd_write_wait_PARM_2
                            778 ;	Peephole 181	changed mov to clr
   002C E4                  779 	clr	a
   002D F0                  780 	movx	@dptr,a
                            781 ;	genAssign
   002E 90s00r09            782 	mov	dptr,#_lcd_write_wait_PARM_3
   0031 74 3F               783 	mov	a,#0x3F
   0033 F0                  784 	movx	@dptr,a
                            785 ;	genCall
   0034 75 82 01            786 	mov	dpl,#0x01
   0037 12s00rEF            787 	lcall	_lcd_write_wait
                            788 ;	lcd.c:38: lcd_write_wait(0, LCD_INST, LCD_STARTLINE(0));
                            789 ;	genAssign
   003A 90s00r08            790 	mov	dptr,#_lcd_write_wait_PARM_2
                            791 ;	Peephole 181	changed mov to clr
   003D E4                  792 	clr	a
   003E F0                  793 	movx	@dptr,a
                            794 ;	genAssign
   003F 90s00r09            795 	mov	dptr,#_lcd_write_wait_PARM_3
   0042 74 C0               796 	mov	a,#0xC0
   0044 F0                  797 	movx	@dptr,a
                            798 ;	genCall
   0045 75 82 00            799 	mov	dpl,#0x00
   0048 12s00rEF            800 	lcall	_lcd_write_wait
                            801 ;	lcd.c:39: lcd_write_wait(1, LCD_INST, LCD_STARTLINE(0));
                            802 ;	genAssign
   004B 90s00r08            803 	mov	dptr,#_lcd_write_wait_PARM_2
                            804 ;	Peephole 181	changed mov to clr
   004E E4                  805 	clr	a
   004F F0                  806 	movx	@dptr,a
                            807 ;	genAssign
   0050 90s00r09            808 	mov	dptr,#_lcd_write_wait_PARM_3
   0053 74 C0               809 	mov	a,#0xC0
   0055 F0                  810 	movx	@dptr,a
                            811 ;	genCall
   0056 75 82 01            812 	mov	dpl,#0x01
   0059 12s00rEF            813 	lcall	_lcd_write_wait
                            814 ;	lcd.c:41: lcd_clear();
                            815 ;	genCall
                            816 ;	Peephole 253.b	replaced lcall/ret with ljmp
   005C 02s01r1C            817 	ljmp	_lcd_clear
                            818 ;
                            819 ;------------------------------------------------------------
                            820 ;Allocation info for local variables in function 'lcd_read'
                            821 ;------------------------------------------------------------
                            822 ;reg                       Allocated with name '_lcd_read_PARM_2'
                            823 ;chip                      Allocated with name '_lcd_read_chip_1_1'
                            824 ;val                       Allocated with name '_lcd_read_val_1_1'
                            825 ;------------------------------------------------------------
                            826 ;	lcd.c:51: unsigned char lcd_read(unsigned chip, unsigned reg)
                            827 ;	-----------------------------------------
                            828 ;	 function lcd_read
                            829 ;	-----------------------------------------
   005F                     830 _lcd_read:
                            831 ;	genReceive
   005F AA 83               832 	mov	r2,dph
   0061 E5 82               833 	mov	a,dpl
   0063 90s00r02            834 	mov	dptr,#_lcd_read_chip_1_1
   0066 F0                  835 	movx	@dptr,a
   0067 A3                  836 	inc	dptr
   0068 EA                  837 	mov	a,r2
   0069 F0                  838 	movx	@dptr,a
                            839 ;	lcd.c:57: LCD_SELECT_CHIP(chip)
                            840 ;	genAssign
   006A 90s00r02            841 	mov	dptr,#_lcd_read_chip_1_1
   006D E0                  842 	movx	a,@dptr
   006E FA                  843 	mov	r2,a
   006F A3                  844 	inc	dptr
   0070 E0                  845 	movx	a,@dptr
                            846 ;	genIfx
   0071 FB                  847 	mov	r3,a
                            848 ;	Peephole 135	removed redundant mov
   0072 4A                  849 	orl	a,r2
                            850 ;	genIfxJump
                            851 ;	Peephole 108.c	removed ljmp by inverse jump logic
   0073 60 06               852 	jz	00103$
                            853 ;	Peephole 300	removed redundant label 00109$
                            854 ;	genAssign
   0075 C2 90               855 	clr	_CS2
                            856 ;	genAssign
   0077 D2 91               857 	setb	_CS1
                            858 ;	Peephole 112.b	changed ljmp to sjmp
   0079 80 04               859 	sjmp	00104$
   007B                     860 00103$:
                            861 ;	genAssign
   007B C2 91               862 	clr	_CS1
                            863 ;	genAssign
   007D D2 90               864 	setb	_CS2
   007F                     865 00104$:
                            866 ;	lcd.c:58: LCD_SELECT_REG(reg)
                            867 ;	genAssign
   007F 90s00r00            868 	mov	dptr,#_lcd_read_PARM_2
   0082 E0                  869 	movx	a,@dptr
   0083 FA                  870 	mov	r2,a
   0084 A3                  871 	inc	dptr
   0085 E0                  872 	movx	a,@dptr
                            873 ;	genIfx
   0086 FB                  874 	mov	r3,a
                            875 ;	Peephole 135	removed redundant mov
   0087 4A                  876 	orl	a,r2
                            877 ;	genIfxJump
                            878 ;	Peephole 108.c	removed ljmp by inverse jump logic
   0088 60 04               879 	jz	00105$
                            880 ;	Peephole 300	removed redundant label 00110$
                            881 ;	genAssign
   008A D2 93               882 	setb	_RS
                            883 ;	Peephole 112.b	changed ljmp to sjmp
   008C 80 02               884 	sjmp	00106$
   008E                     885 00105$:
                            886 ;	genAssign
   008E C2 93               887 	clr	_RS
   0090                     888 00106$:
                            889 ;	lcd.c:59: val = LCD_RD;
                            890 ;	genAssign
   0090 90 F1 00            891 	mov	dptr,#_LCD_RD
   0093 E0                  892 	movx	a,@dptr
                            893 ;	lcd.c:61: return val;
                            894 ;	genRet
                            895 ;	Peephole 234.a	loading dpl directly from a(ccumulator), r2 not set
   0094 F5 82               896 	mov	dpl,a
                            897 ;	Peephole 300	removed redundant label 00101$
   0096 22                  898 	ret
                            899 ;------------------------------------------------------------
                            900 ;Allocation info for local variables in function 'lcd_write'
                            901 ;------------------------------------------------------------
                            902 ;reg                       Allocated with name '_lcd_write_PARM_2'
                            903 ;data_in                   Allocated with name '_lcd_write_PARM_3'
                            904 ;chip                      Allocated with name '_lcd_write_chip_1_1'
                            905 ;------------------------------------------------------------
                            906 ;	lcd.c:70: void lcd_write(unsigned char chip, unsigned char reg, unsigned char data_in)
                            907 ;	-----------------------------------------
                            908 ;	 function lcd_write
                            909 ;	-----------------------------------------
   0097                     910 _lcd_write:
                            911 ;	genReceive
   0097 E5 82               912 	mov	a,dpl
   0099 90s00r06            913 	mov	dptr,#_lcd_write_chip_1_1
   009C F0                  914 	movx	@dptr,a
                            915 ;	lcd.c:74: LCD_SELECT_CHIP(chip);
                            916 ;	genAssign
   009D 90s00r06            917 	mov	dptr,#_lcd_write_chip_1_1
   00A0 E0                  918 	movx	a,@dptr
                            919 ;	genIfx
   00A1 FA                  920 	mov	r2,a
                            921 ;	Peephole 105	removed redundant mov
                            922 ;	genIfxJump
                            923 ;	Peephole 108.c	removed ljmp by inverse jump logic
   00A2 60 06               924 	jz	00103$
                            925 ;	Peephole 300	removed redundant label 00109$
                            926 ;	genAssign
   00A4 C2 90               927 	clr	_CS2
                            928 ;	genAssign
   00A6 D2 91               929 	setb	_CS1
                            930 ;	Peephole 112.b	changed ljmp to sjmp
   00A8 80 04               931 	sjmp	00104$
   00AA                     932 00103$:
                            933 ;	genAssign
   00AA C2 91               934 	clr	_CS1
                            935 ;	genAssign
   00AC D2 90               936 	setb	_CS2
   00AE                     937 00104$:
                            938 ;	lcd.c:75: LCD_SELECT_REG(reg);
                            939 ;	genAssign
   00AE 90s00r04            940 	mov	dptr,#_lcd_write_PARM_2
   00B1 E0                  941 	movx	a,@dptr
                            942 ;	genIfx
   00B2 FA                  943 	mov	r2,a
                            944 ;	Peephole 105	removed redundant mov
                            945 ;	genIfxJump
                            946 ;	Peephole 108.c	removed ljmp by inverse jump logic
   00B3 60 04               947 	jz	00105$
                            948 ;	Peephole 300	removed redundant label 00110$
                            949 ;	genAssign
   00B5 D2 93               950 	setb	_RS
                            951 ;	Peephole 112.b	changed ljmp to sjmp
   00B7 80 02               952 	sjmp	00106$
   00B9                     953 00105$:
                            954 ;	genAssign
   00B9 C2 93               955 	clr	_RS
   00BB                     956 00106$:
                            957 ;	lcd.c:76: LCD_WR = data_in;
                            958 ;	genAssign
   00BB 90s00r05            959 	mov	dptr,#_lcd_write_PARM_3
   00BE E0                  960 	movx	a,@dptr
                            961 ;	genAssign
   00BF FA                  962 	mov	r2,a
   00C0 90 F0 00            963 	mov	dptr,#_LCD_WR
                            964 ;	Peephole 100	removed redundant mov
   00C3 F0                  965 	movx	@dptr,a
                            966 ;	Peephole 300	removed redundant label 00101$
   00C4 22                  967 	ret
                            968 ;------------------------------------------------------------
                            969 ;Allocation info for local variables in function 'lcd_wait'
                            970 ;------------------------------------------------------------
                            971 ;chip                      Allocated with name '_lcd_wait_chip_1_1'
                            972 ;------------------------------------------------------------
                            973 ;	lcd.c:83: void lcd_wait(unsigned char chip)
                            974 ;	-----------------------------------------
                            975 ;	 function lcd_wait
                            976 ;	-----------------------------------------
   00C5                     977 _lcd_wait:
                            978 ;	genReceive
   00C5 E5 82               979 	mov	a,dpl
   00C7 90s00r07            980 	mov	dptr,#_lcd_wait_chip_1_1
   00CA F0                  981 	movx	@dptr,a
                            982 ;	lcd.c:86: while(lcd_read(chip, LCD_INST) & (LCD_BUSY | LCD_RESET)) { };
                            983 ;	genAssign
   00CB 90s00r07            984 	mov	dptr,#_lcd_wait_chip_1_1
   00CE E0                  985 	movx	a,@dptr
   00CF FA                  986 	mov	r2,a
   00D0                     987 00101$:
                            988 ;	genCast
   00D0 8A 03               989 	mov	ar3,r2
   00D2 7C 00               990 	mov	r4,#0x00
                            991 ;	genAssign
   00D4 90s00r00            992 	mov	dptr,#_lcd_read_PARM_2
   00D7 E4                  993 	clr	a
   00D8 F0                  994 	movx	@dptr,a
   00D9 A3                  995 	inc	dptr
   00DA F0                  996 	movx	@dptr,a
                            997 ;	genCall
   00DB 8B 82               998 	mov	dpl,r3
   00DD 8C 83               999 	mov	dph,r4
   00DF C0 02              1000 	push	ar2
   00E1 12s00r5F           1001 	lcall	_lcd_read
   00E4 E5 82              1002 	mov	a,dpl
   00E6 D0 02              1003 	pop	ar2
                           1004 ;	genAnd
   00E8 54 90              1005 	anl	a,#0x90
                           1006 ;	Peephole 160.c	removed sjmp by inverse jump logic
   00EA 60 02              1007 	jz	00108$
                           1008 ;	Peephole 300	removed redundant label 00107$
                           1009 ;	Peephole 112.b	changed ljmp to sjmp
   00EC 80 E2              1010 	sjmp	00101$
   00EE                    1011 00108$:
                           1012 ;	Peephole 300	removed redundant label 00104$
   00EE 22                 1013 	ret
                           1014 ;------------------------------------------------------------
                           1015 ;Allocation info for local variables in function 'lcd_write_wait'
                           1016 ;------------------------------------------------------------
                           1017 ;reg                       Allocated with name '_lcd_write_wait_PARM_2'
                           1018 ;data_in                   Allocated with name '_lcd_write_wait_PARM_3'
                           1019 ;chip                      Allocated with name '_lcd_write_wait_chip_1_1'
                           1020 ;------------------------------------------------------------
                           1021 ;	lcd.c:93: void lcd_write_wait(unsigned char chip, unsigned char reg, unsigned char data_in)
                           1022 ;	-----------------------------------------
                           1023 ;	 function lcd_write_wait
                           1024 ;	-----------------------------------------
   00EF                    1025 _lcd_write_wait:
                           1026 ;	genReceive
   00EF E5 82              1027 	mov	a,dpl
   00F1 90s00r0A           1028 	mov	dptr,#_lcd_write_wait_chip_1_1
   00F4 F0                 1029 	movx	@dptr,a
                           1030 ;	lcd.c:95: lcd_wait(chip);
                           1031 ;	genAssign
   00F5 90s00r0A           1032 	mov	dptr,#_lcd_write_wait_chip_1_1
   00F8 E0                 1033 	movx	a,@dptr
                           1034 ;	genCall
   00F9 FA                 1035 	mov	r2,a
                           1036 ;	Peephole 244.c	loading dpl from a instead of r2
   00FA F5 82              1037 	mov	dpl,a
   00FC C0 02              1038 	push	ar2
   00FE 12s00rC5           1039 	lcall	_lcd_wait
   0101 D0 02              1040 	pop	ar2
                           1041 ;	lcd.c:96: lcd_write(chip, reg, data_in);
                           1042 ;	genAssign
   0103 90s00r08           1043 	mov	dptr,#_lcd_write_wait_PARM_2
   0106 E0                 1044 	movx	a,@dptr
   0107 FB                 1045 	mov	r3,a
                           1046 ;	genAssign
   0108 90s00r09           1047 	mov	dptr,#_lcd_write_wait_PARM_3
   010B E0                 1048 	movx	a,@dptr
   010C FC                 1049 	mov	r4,a
                           1050 ;	genAssign
   010D 90s00r04           1051 	mov	dptr,#_lcd_write_PARM_2
   0110 EB                 1052 	mov	a,r3
   0111 F0                 1053 	movx	@dptr,a
                           1054 ;	genAssign
   0112 90s00r05           1055 	mov	dptr,#_lcd_write_PARM_3
   0115 EC                 1056 	mov	a,r4
   0116 F0                 1057 	movx	@dptr,a
                           1058 ;	genCall
   0117 8A 82              1059 	mov	dpl,r2
                           1060 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0119 02s00r97           1061 	ljmp	_lcd_write
                           1062 ;
                           1063 ;------------------------------------------------------------
                           1064 ;Allocation info for local variables in function 'lcd_clear'
                           1065 ;------------------------------------------------------------
                           1066 ;x                         Allocated with name '_lcd_clear_x_1_1'
                           1067 ;y                         Allocated with name '_lcd_clear_y_1_1'
                           1068 ;------------------------------------------------------------
                           1069 ;	lcd.c:102: void lcd_clear()
                           1070 ;	-----------------------------------------
                           1071 ;	 function lcd_clear
                           1072 ;	-----------------------------------------
   011C                    1073 _lcd_clear:
                           1074 ;	lcd.c:109: for(x = 0; x < 8; ++x)
                           1075 ;	genAssign
   011C 7A 00              1076 	mov	r2,#0x00
   011E                    1077 00104$:
                           1078 ;	genCmpLt
                           1079 ;	genCmp
   011E BA 08 00           1080 	cjne	r2,#0x08,00129$
   0121                    1081 00129$:
                           1082 ;	genIfxJump
                           1083 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0121 50 4F              1084 	jnc	00107$
                           1085 ;	Peephole 300	removed redundant label 00130$
                           1086 ;	lcd.c:112: lcd_write_wait(0, LCD_INST, LCD_YADDR(0));
                           1087 ;	genAssign
   0123 90s00r08           1088 	mov	dptr,#_lcd_write_wait_PARM_2
                           1089 ;	Peephole 181	changed mov to clr
   0126 E4                 1090 	clr	a
   0127 F0                 1091 	movx	@dptr,a
                           1092 ;	genAssign
   0128 90s00r09           1093 	mov	dptr,#_lcd_write_wait_PARM_3
   012B 74 40              1094 	mov	a,#0x40
   012D F0                 1095 	movx	@dptr,a
                           1096 ;	genCall
   012E 75 82 00           1097 	mov	dpl,#0x00
   0131 C0 02              1098 	push	ar2
   0133 12s00rEF           1099 	lcall	_lcd_write_wait
   0136 D0 02              1100 	pop	ar2
                           1101 ;	lcd.c:113: lcd_write_wait(0, LCD_INST, LCD_XADDR(x));
                           1102 ;	genAnd
   0138 74 07              1103 	mov	a,#0x07
   013A 5A                 1104 	anl	a,r2
                           1105 ;	genOr
   013B 44 B8              1106 	orl	a,#0xB8
   013D FB                 1107 	mov	r3,a
                           1108 ;	genAssign
   013E 90s00r08           1109 	mov	dptr,#_lcd_write_wait_PARM_2
                           1110 ;	Peephole 181	changed mov to clr
   0141 E4                 1111 	clr	a
   0142 F0                 1112 	movx	@dptr,a
                           1113 ;	genAssign
   0143 90s00r09           1114 	mov	dptr,#_lcd_write_wait_PARM_3
   0146 EB                 1115 	mov	a,r3
   0147 F0                 1116 	movx	@dptr,a
                           1117 ;	genCall
   0148 75 82 00           1118 	mov	dpl,#0x00
   014B C0 02              1119 	push	ar2
   014D 12s00rEF           1120 	lcall	_lcd_write_wait
   0150 D0 02              1121 	pop	ar2
                           1122 ;	lcd.c:115: for(y = 0; y < 64; ++y)
                           1123 ;	genAssign
   0152 7B 40              1124 	mov	r3,#0x40
   0154                    1125 00103$:
                           1126 ;	lcd.c:118: lcd_write_wait(0, LCD_DATA, 0);
                           1127 ;	genAssign
   0154 90s00r08           1128 	mov	dptr,#_lcd_write_wait_PARM_2
   0157 74 01              1129 	mov	a,#0x01
   0159 F0                 1130 	movx	@dptr,a
                           1131 ;	genAssign
   015A 90s00r09           1132 	mov	dptr,#_lcd_write_wait_PARM_3
                           1133 ;	Peephole 181	changed mov to clr
   015D E4                 1134 	clr	a
   015E F0                 1135 	movx	@dptr,a
                           1136 ;	genCall
   015F 75 82 00           1137 	mov	dpl,#0x00
   0162 C0 02              1138 	push	ar2
   0164 C0 03              1139 	push	ar3
   0166 12s00rEF           1140 	lcall	_lcd_write_wait
   0169 D0 03              1141 	pop	ar3
   016B D0 02              1142 	pop	ar2
                           1143 ;	genDjnz
                           1144 ;	Peephole 112.b	changed ljmp to sjmp
                           1145 ;	Peephole 205	optimized misc jump sequence
   016D DB E5              1146 	djnz	r3,00103$
                           1147 ;	Peephole 300	removed redundant label 00131$
                           1148 ;	Peephole 300	removed redundant label 00132$
                           1149 ;	lcd.c:115: for(y = 0; y < 64; ++y)
                           1150 ;	lcd.c:109: for(x = 0; x < 8; ++x)
                           1151 ;	genPlus
                           1152 ;     genPlusIncr
   016F 0A                 1153 	inc	r2
                           1154 ;	Peephole 112.b	changed ljmp to sjmp
   0170 80 AC              1155 	sjmp	00104$
   0172                    1156 00107$:
                           1157 ;	lcd.c:123: for(x = 0; x < 8; ++x)
                           1158 ;	genAssign
   0172 7A 00              1159 	mov	r2,#0x00
   0174                    1160 00111$:
                           1161 ;	genCmpLt
                           1162 ;	genCmp
   0174 BA 08 00           1163 	cjne	r2,#0x08,00133$
   0177                    1164 00133$:
                           1165 ;	genIfxJump
                           1166 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0177 50 4F              1167 	jnc	00115$
                           1168 ;	Peephole 300	removed redundant label 00134$
                           1169 ;	lcd.c:126: lcd_write_wait(1, LCD_INST, LCD_YADDR(0));
                           1170 ;	genAssign
   0179 90s00r08           1171 	mov	dptr,#_lcd_write_wait_PARM_2
                           1172 ;	Peephole 181	changed mov to clr
   017C E4                 1173 	clr	a
   017D F0                 1174 	movx	@dptr,a
                           1175 ;	genAssign
   017E 90s00r09           1176 	mov	dptr,#_lcd_write_wait_PARM_3
   0181 74 40              1177 	mov	a,#0x40
   0183 F0                 1178 	movx	@dptr,a
                           1179 ;	genCall
   0184 75 82 01           1180 	mov	dpl,#0x01
   0187 C0 02              1181 	push	ar2
   0189 12s00rEF           1182 	lcall	_lcd_write_wait
   018C D0 02              1183 	pop	ar2
                           1184 ;	lcd.c:127: lcd_write_wait(1, LCD_INST, LCD_XADDR(x));
                           1185 ;	genAnd
   018E 74 07              1186 	mov	a,#0x07
   0190 5A                 1187 	anl	a,r2
                           1188 ;	genOr
   0191 44 B8              1189 	orl	a,#0xB8
   0193 FB                 1190 	mov	r3,a
                           1191 ;	genAssign
   0194 90s00r08           1192 	mov	dptr,#_lcd_write_wait_PARM_2
                           1193 ;	Peephole 181	changed mov to clr
   0197 E4                 1194 	clr	a
   0198 F0                 1195 	movx	@dptr,a
                           1196 ;	genAssign
   0199 90s00r09           1197 	mov	dptr,#_lcd_write_wait_PARM_3
   019C EB                 1198 	mov	a,r3
   019D F0                 1199 	movx	@dptr,a
                           1200 ;	genCall
   019E 75 82 01           1201 	mov	dpl,#0x01
   01A1 C0 02              1202 	push	ar2
   01A3 12s00rEF           1203 	lcall	_lcd_write_wait
   01A6 D0 02              1204 	pop	ar2
                           1205 ;	lcd.c:129: for(y = 0; y < 64; ++y)
                           1206 ;	genAssign
   01A8 7B 40              1207 	mov	r3,#0x40
   01AA                    1208 00110$:
                           1209 ;	lcd.c:132: lcd_write_wait(1, LCD_DATA, 0);
                           1210 ;	genAssign
   01AA 90s00r08           1211 	mov	dptr,#_lcd_write_wait_PARM_2
   01AD 74 01              1212 	mov	a,#0x01
   01AF F0                 1213 	movx	@dptr,a
                           1214 ;	genAssign
   01B0 90s00r09           1215 	mov	dptr,#_lcd_write_wait_PARM_3
                           1216 ;	Peephole 181	changed mov to clr
   01B3 E4                 1217 	clr	a
   01B4 F0                 1218 	movx	@dptr,a
                           1219 ;	genCall
   01B5 75 82 01           1220 	mov	dpl,#0x01
   01B8 C0 02              1221 	push	ar2
   01BA C0 03              1222 	push	ar3
   01BC 12s00rEF           1223 	lcall	_lcd_write_wait
   01BF D0 03              1224 	pop	ar3
   01C1 D0 02              1225 	pop	ar2
                           1226 ;	genDjnz
                           1227 ;	Peephole 112.b	changed ljmp to sjmp
                           1228 ;	Peephole 205	optimized misc jump sequence
   01C3 DB E5              1229 	djnz	r3,00110$
                           1230 ;	Peephole 300	removed redundant label 00135$
                           1231 ;	Peephole 300	removed redundant label 00136$
                           1232 ;	lcd.c:129: for(y = 0; y < 64; ++y)
                           1233 ;	lcd.c:123: for(x = 0; x < 8; ++x)
                           1234 ;	genPlus
                           1235 ;     genPlusIncr
   01C5 0A                 1236 	inc	r2
                           1237 ;	Peephole 112.b	changed ljmp to sjmp
   01C6 80 AC              1238 	sjmp	00111$
   01C8                    1239 00115$:
   01C8 22                 1240 	ret
                           1241 ;------------------------------------------------------------
                           1242 ;Allocation info for local variables in function 'lcd_clear_invert'
                           1243 ;------------------------------------------------------------
                           1244 ;x                         Allocated with name '_lcd_clear_invert_x_1_1'
                           1245 ;y                         Allocated with name '_lcd_clear_invert_y_1_1'
                           1246 ;------------------------------------------------------------
                           1247 ;	lcd.c:140: void lcd_clear_invert()
                           1248 ;	-----------------------------------------
                           1249 ;	 function lcd_clear_invert
                           1250 ;	-----------------------------------------
   01C9                    1251 _lcd_clear_invert:
                           1252 ;	lcd.c:147: for(x = 0; x < 8; ++x)
                           1253 ;	genAssign
   01C9 7A 00              1254 	mov	r2,#0x00
   01CB                    1255 00104$:
                           1256 ;	genCmpLt
                           1257 ;	genCmp
   01CB BA 08 00           1258 	cjne	r2,#0x08,00129$
   01CE                    1259 00129$:
                           1260 ;	genIfxJump
                           1261 ;	Peephole 108.a	removed ljmp by inverse jump logic
   01CE 50 50              1262 	jnc	00107$
                           1263 ;	Peephole 300	removed redundant label 00130$
                           1264 ;	lcd.c:150: lcd_write_wait(0, LCD_INST, LCD_YADDR(0));
                           1265 ;	genAssign
   01D0 90s00r08           1266 	mov	dptr,#_lcd_write_wait_PARM_2
                           1267 ;	Peephole 181	changed mov to clr
   01D3 E4                 1268 	clr	a
   01D4 F0                 1269 	movx	@dptr,a
                           1270 ;	genAssign
   01D5 90s00r09           1271 	mov	dptr,#_lcd_write_wait_PARM_3
   01D8 74 40              1272 	mov	a,#0x40
   01DA F0                 1273 	movx	@dptr,a
                           1274 ;	genCall
   01DB 75 82 00           1275 	mov	dpl,#0x00
   01DE C0 02              1276 	push	ar2
   01E0 12s00rEF           1277 	lcall	_lcd_write_wait
   01E3 D0 02              1278 	pop	ar2
                           1279 ;	lcd.c:151: lcd_write_wait(0, LCD_INST, LCD_XADDR(x));
                           1280 ;	genAnd
   01E5 74 07              1281 	mov	a,#0x07
   01E7 5A                 1282 	anl	a,r2
                           1283 ;	genOr
   01E8 44 B8              1284 	orl	a,#0xB8
   01EA FB                 1285 	mov	r3,a
                           1286 ;	genAssign
   01EB 90s00r08           1287 	mov	dptr,#_lcd_write_wait_PARM_2
                           1288 ;	Peephole 181	changed mov to clr
   01EE E4                 1289 	clr	a
   01EF F0                 1290 	movx	@dptr,a
                           1291 ;	genAssign
   01F0 90s00r09           1292 	mov	dptr,#_lcd_write_wait_PARM_3
   01F3 EB                 1293 	mov	a,r3
   01F4 F0                 1294 	movx	@dptr,a
                           1295 ;	genCall
   01F5 75 82 00           1296 	mov	dpl,#0x00
   01F8 C0 02              1297 	push	ar2
   01FA 12s00rEF           1298 	lcall	_lcd_write_wait
   01FD D0 02              1299 	pop	ar2
                           1300 ;	lcd.c:153: for(y = 0; y < 64; ++y)
                           1301 ;	genAssign
   01FF 7B 40              1302 	mov	r3,#0x40
   0201                    1303 00103$:
                           1304 ;	lcd.c:156: lcd_write_wait(0, LCD_DATA, 0xff);
                           1305 ;	genAssign
   0201 90s00r08           1306 	mov	dptr,#_lcd_write_wait_PARM_2
   0204 74 01              1307 	mov	a,#0x01
   0206 F0                 1308 	movx	@dptr,a
                           1309 ;	genAssign
   0207 90s00r09           1310 	mov	dptr,#_lcd_write_wait_PARM_3
   020A 74 FF              1311 	mov	a,#0xFF
   020C F0                 1312 	movx	@dptr,a
                           1313 ;	genCall
   020D 75 82 00           1314 	mov	dpl,#0x00
   0210 C0 02              1315 	push	ar2
   0212 C0 03              1316 	push	ar3
   0214 12s00rEF           1317 	lcall	_lcd_write_wait
   0217 D0 03              1318 	pop	ar3
   0219 D0 02              1319 	pop	ar2
                           1320 ;	genDjnz
                           1321 ;	Peephole 112.b	changed ljmp to sjmp
                           1322 ;	Peephole 205	optimized misc jump sequence
   021B DB E4              1323 	djnz	r3,00103$
                           1324 ;	Peephole 300	removed redundant label 00131$
                           1325 ;	Peephole 300	removed redundant label 00132$
                           1326 ;	lcd.c:153: for(y = 0; y < 64; ++y)
                           1327 ;	lcd.c:147: for(x = 0; x < 8; ++x)
                           1328 ;	genPlus
                           1329 ;     genPlusIncr
   021D 0A                 1330 	inc	r2
                           1331 ;	Peephole 112.b	changed ljmp to sjmp
   021E 80 AB              1332 	sjmp	00104$
   0220                    1333 00107$:
                           1334 ;	lcd.c:161: for(x = 0; x < 8; ++x)
                           1335 ;	genAssign
   0220 7A 00              1336 	mov	r2,#0x00
   0222                    1337 00111$:
                           1338 ;	genCmpLt
                           1339 ;	genCmp
   0222 BA 08 00           1340 	cjne	r2,#0x08,00133$
   0225                    1341 00133$:
                           1342 ;	genIfxJump
                           1343 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0225 50 50              1344 	jnc	00115$
                           1345 ;	Peephole 300	removed redundant label 00134$
                           1346 ;	lcd.c:164: lcd_write_wait(1, LCD_INST, LCD_YADDR(0));
                           1347 ;	genAssign
   0227 90s00r08           1348 	mov	dptr,#_lcd_write_wait_PARM_2
                           1349 ;	Peephole 181	changed mov to clr
   022A E4                 1350 	clr	a
   022B F0                 1351 	movx	@dptr,a
                           1352 ;	genAssign
   022C 90s00r09           1353 	mov	dptr,#_lcd_write_wait_PARM_3
   022F 74 40              1354 	mov	a,#0x40
   0231 F0                 1355 	movx	@dptr,a
                           1356 ;	genCall
   0232 75 82 01           1357 	mov	dpl,#0x01
   0235 C0 02              1358 	push	ar2
   0237 12s00rEF           1359 	lcall	_lcd_write_wait
   023A D0 02              1360 	pop	ar2
                           1361 ;	lcd.c:165: lcd_write_wait(1, LCD_INST, LCD_XADDR(x));
                           1362 ;	genAnd
   023C 74 07              1363 	mov	a,#0x07
   023E 5A                 1364 	anl	a,r2
                           1365 ;	genOr
   023F 44 B8              1366 	orl	a,#0xB8
   0241 FB                 1367 	mov	r3,a
                           1368 ;	genAssign
   0242 90s00r08           1369 	mov	dptr,#_lcd_write_wait_PARM_2
                           1370 ;	Peephole 181	changed mov to clr
   0245 E4                 1371 	clr	a
   0246 F0                 1372 	movx	@dptr,a
                           1373 ;	genAssign
   0247 90s00r09           1374 	mov	dptr,#_lcd_write_wait_PARM_3
   024A EB                 1375 	mov	a,r3
   024B F0                 1376 	movx	@dptr,a
                           1377 ;	genCall
   024C 75 82 01           1378 	mov	dpl,#0x01
   024F C0 02              1379 	push	ar2
   0251 12s00rEF           1380 	lcall	_lcd_write_wait
   0254 D0 02              1381 	pop	ar2
                           1382 ;	lcd.c:167: for(y = 0; y < 64; ++y)
                           1383 ;	genAssign
   0256 7B 40              1384 	mov	r3,#0x40
   0258                    1385 00110$:
                           1386 ;	lcd.c:170: lcd_write_wait(1, LCD_DATA, 0xff);
                           1387 ;	genAssign
   0258 90s00r08           1388 	mov	dptr,#_lcd_write_wait_PARM_2
   025B 74 01              1389 	mov	a,#0x01
   025D F0                 1390 	movx	@dptr,a
                           1391 ;	genAssign
   025E 90s00r09           1392 	mov	dptr,#_lcd_write_wait_PARM_3
   0261 74 FF              1393 	mov	a,#0xFF
   0263 F0                 1394 	movx	@dptr,a
                           1395 ;	genCall
   0264 75 82 01           1396 	mov	dpl,#0x01
   0267 C0 02              1397 	push	ar2
   0269 C0 03              1398 	push	ar3
   026B 12s00rEF           1399 	lcall	_lcd_write_wait
   026E D0 03              1400 	pop	ar3
   0270 D0 02              1401 	pop	ar2
                           1402 ;	genDjnz
                           1403 ;	Peephole 112.b	changed ljmp to sjmp
                           1404 ;	Peephole 205	optimized misc jump sequence
   0272 DB E4              1405 	djnz	r3,00110$
                           1406 ;	Peephole 300	removed redundant label 00135$
                           1407 ;	Peephole 300	removed redundant label 00136$
                           1408 ;	lcd.c:167: for(y = 0; y < 64; ++y)
                           1409 ;	lcd.c:161: for(x = 0; x < 8; ++x)
                           1410 ;	genPlus
                           1411 ;     genPlusIncr
   0274 0A                 1412 	inc	r2
                           1413 ;	Peephole 112.b	changed ljmp to sjmp
   0275 80 AB              1414 	sjmp	00111$
   0277                    1415 00115$:
   0277 22                 1416 	ret
                           1417 ;------------------------------------------------------------
                           1418 ;Allocation info for local variables in function 'clear_game_screen'
                           1419 ;------------------------------------------------------------
                           1420 ;x                         Allocated with name '_clear_game_screen_x_1_1'
                           1421 ;y                         Allocated with name '_clear_game_screen_y_1_1'
                           1422 ;------------------------------------------------------------
                           1423 ;	lcd.c:178: void clear_game_screen()
                           1424 ;	-----------------------------------------
                           1425 ;	 function clear_game_screen
                           1426 ;	-----------------------------------------
   0278                    1427 _clear_game_screen:
                           1428 ;	lcd.c:184: for(x = 1; x < 7; ++x)
                           1429 ;	genAssign
   0278 7A 01              1430 	mov	r2,#0x01
   027A                    1431 00104$:
                           1432 ;	genCmpLt
                           1433 ;	genCmp
   027A BA 07 00           1434 	cjne	r2,#0x07,00129$
   027D                    1435 00129$:
                           1436 ;	genIfxJump
                           1437 ;	Peephole 108.a	removed ljmp by inverse jump logic
   027D 50 4F              1438 	jnc	00107$
                           1439 ;	Peephole 300	removed redundant label 00130$
                           1440 ;	lcd.c:187: lcd_write_wait(0, LCD_INST, LCD_YADDR(0));
                           1441 ;	genAssign
   027F 90s00r08           1442 	mov	dptr,#_lcd_write_wait_PARM_2
                           1443 ;	Peephole 181	changed mov to clr
   0282 E4                 1444 	clr	a
   0283 F0                 1445 	movx	@dptr,a
                           1446 ;	genAssign
   0284 90s00r09           1447 	mov	dptr,#_lcd_write_wait_PARM_3
   0287 74 40              1448 	mov	a,#0x40
   0289 F0                 1449 	movx	@dptr,a
                           1450 ;	genCall
   028A 75 82 00           1451 	mov	dpl,#0x00
   028D C0 02              1452 	push	ar2
   028F 12s00rEF           1453 	lcall	_lcd_write_wait
   0292 D0 02              1454 	pop	ar2
                           1455 ;	lcd.c:188: lcd_write_wait(0, LCD_INST, LCD_XADDR(x));
                           1456 ;	genAnd
   0294 74 07              1457 	mov	a,#0x07
   0296 5A                 1458 	anl	a,r2
                           1459 ;	genOr
   0297 44 B8              1460 	orl	a,#0xB8
   0299 FB                 1461 	mov	r3,a
                           1462 ;	genAssign
   029A 90s00r08           1463 	mov	dptr,#_lcd_write_wait_PARM_2
                           1464 ;	Peephole 181	changed mov to clr
   029D E4                 1465 	clr	a
   029E F0                 1466 	movx	@dptr,a
                           1467 ;	genAssign
   029F 90s00r09           1468 	mov	dptr,#_lcd_write_wait_PARM_3
   02A2 EB                 1469 	mov	a,r3
   02A3 F0                 1470 	movx	@dptr,a
                           1471 ;	genCall
   02A4 75 82 00           1472 	mov	dpl,#0x00
   02A7 C0 02              1473 	push	ar2
   02A9 12s00rEF           1474 	lcall	_lcd_write_wait
   02AC D0 02              1475 	pop	ar2
                           1476 ;	lcd.c:190: for(y = 0; y < 64; ++y)
                           1477 ;	genAssign
   02AE 7B 40              1478 	mov	r3,#0x40
   02B0                    1479 00103$:
                           1480 ;	lcd.c:193: lcd_write_wait(0, LCD_DATA, 0x00);
                           1481 ;	genAssign
   02B0 90s00r08           1482 	mov	dptr,#_lcd_write_wait_PARM_2
   02B3 74 01              1483 	mov	a,#0x01
   02B5 F0                 1484 	movx	@dptr,a
                           1485 ;	genAssign
   02B6 90s00r09           1486 	mov	dptr,#_lcd_write_wait_PARM_3
                           1487 ;	Peephole 181	changed mov to clr
   02B9 E4                 1488 	clr	a
   02BA F0                 1489 	movx	@dptr,a
                           1490 ;	genCall
   02BB 75 82 00           1491 	mov	dpl,#0x00
   02BE C0 02              1492 	push	ar2
   02C0 C0 03              1493 	push	ar3
   02C2 12s00rEF           1494 	lcall	_lcd_write_wait
   02C5 D0 03              1495 	pop	ar3
   02C7 D0 02              1496 	pop	ar2
                           1497 ;	genDjnz
                           1498 ;	Peephole 112.b	changed ljmp to sjmp
                           1499 ;	Peephole 205	optimized misc jump sequence
   02C9 DB E5              1500 	djnz	r3,00103$
                           1501 ;	Peephole 300	removed redundant label 00131$
                           1502 ;	Peephole 300	removed redundant label 00132$
                           1503 ;	lcd.c:190: for(y = 0; y < 64; ++y)
                           1504 ;	lcd.c:184: for(x = 1; x < 7; ++x)
                           1505 ;	genPlus
                           1506 ;     genPlusIncr
   02CB 0A                 1507 	inc	r2
                           1508 ;	Peephole 112.b	changed ljmp to sjmp
   02CC 80 AC              1509 	sjmp	00104$
   02CE                    1510 00107$:
                           1511 ;	lcd.c:198: for(x = 1; x < 7; ++x)
                           1512 ;	genAssign
   02CE 7A 01              1513 	mov	r2,#0x01
   02D0                    1514 00111$:
                           1515 ;	genCmpLt
                           1516 ;	genCmp
   02D0 BA 07 00           1517 	cjne	r2,#0x07,00133$
   02D3                    1518 00133$:
                           1519 ;	genIfxJump
                           1520 ;	Peephole 108.a	removed ljmp by inverse jump logic
   02D3 50 4F              1521 	jnc	00115$
                           1522 ;	Peephole 300	removed redundant label 00134$
                           1523 ;	lcd.c:201: lcd_write_wait(1, LCD_INST, LCD_YADDR(0));
                           1524 ;	genAssign
   02D5 90s00r08           1525 	mov	dptr,#_lcd_write_wait_PARM_2
                           1526 ;	Peephole 181	changed mov to clr
   02D8 E4                 1527 	clr	a
   02D9 F0                 1528 	movx	@dptr,a
                           1529 ;	genAssign
   02DA 90s00r09           1530 	mov	dptr,#_lcd_write_wait_PARM_3
   02DD 74 40              1531 	mov	a,#0x40
   02DF F0                 1532 	movx	@dptr,a
                           1533 ;	genCall
   02E0 75 82 01           1534 	mov	dpl,#0x01
   02E3 C0 02              1535 	push	ar2
   02E5 12s00rEF           1536 	lcall	_lcd_write_wait
   02E8 D0 02              1537 	pop	ar2
                           1538 ;	lcd.c:202: lcd_write_wait(1, LCD_INST, LCD_XADDR(x));
                           1539 ;	genAnd
   02EA 74 07              1540 	mov	a,#0x07
   02EC 5A                 1541 	anl	a,r2
                           1542 ;	genOr
   02ED 44 B8              1543 	orl	a,#0xB8
   02EF FB                 1544 	mov	r3,a
                           1545 ;	genAssign
   02F0 90s00r08           1546 	mov	dptr,#_lcd_write_wait_PARM_2
                           1547 ;	Peephole 181	changed mov to clr
   02F3 E4                 1548 	clr	a
   02F4 F0                 1549 	movx	@dptr,a
                           1550 ;	genAssign
   02F5 90s00r09           1551 	mov	dptr,#_lcd_write_wait_PARM_3
   02F8 EB                 1552 	mov	a,r3
   02F9 F0                 1553 	movx	@dptr,a
                           1554 ;	genCall
   02FA 75 82 01           1555 	mov	dpl,#0x01
   02FD C0 02              1556 	push	ar2
   02FF 12s00rEF           1557 	lcall	_lcd_write_wait
   0302 D0 02              1558 	pop	ar2
                           1559 ;	lcd.c:204: for(y = 0; y < 64; ++y)
                           1560 ;	genAssign
   0304 7B 40              1561 	mov	r3,#0x40
   0306                    1562 00110$:
                           1563 ;	lcd.c:207: lcd_write_wait(1, LCD_DATA, 0x00);
                           1564 ;	genAssign
   0306 90s00r08           1565 	mov	dptr,#_lcd_write_wait_PARM_2
   0309 74 01              1566 	mov	a,#0x01
   030B F0                 1567 	movx	@dptr,a
                           1568 ;	genAssign
   030C 90s00r09           1569 	mov	dptr,#_lcd_write_wait_PARM_3
                           1570 ;	Peephole 181	changed mov to clr
   030F E4                 1571 	clr	a
   0310 F0                 1572 	movx	@dptr,a
                           1573 ;	genCall
   0311 75 82 01           1574 	mov	dpl,#0x01
   0314 C0 02              1575 	push	ar2
   0316 C0 03              1576 	push	ar3
   0318 12s00rEF           1577 	lcall	_lcd_write_wait
   031B D0 03              1578 	pop	ar3
   031D D0 02              1579 	pop	ar2
                           1580 ;	genDjnz
                           1581 ;	Peephole 112.b	changed ljmp to sjmp
                           1582 ;	Peephole 205	optimized misc jump sequence
   031F DB E5              1583 	djnz	r3,00110$
                           1584 ;	Peephole 300	removed redundant label 00135$
                           1585 ;	Peephole 300	removed redundant label 00136$
                           1586 ;	lcd.c:204: for(y = 0; y < 64; ++y)
                           1587 ;	lcd.c:198: for(x = 1; x < 7; ++x)
                           1588 ;	genPlus
                           1589 ;     genPlusIncr
   0321 0A                 1590 	inc	r2
                           1591 ;	Peephole 112.b	changed ljmp to sjmp
   0322 80 AC              1592 	sjmp	00111$
   0324                    1593 00115$:
   0324 22                 1594 	ret
                           1595 ;------------------------------------------------------------
                           1596 ;Allocation info for local variables in function 'still_screen'
                           1597 ;------------------------------------------------------------
                           1598 ;score                     Allocated with name '_still_screen_score_1_1'
                           1599 ;title                     Allocated with name '_still_screen_title_1_1'
                           1600 ;------------------------------------------------------------
                           1601 ;	lcd.c:213: void still_screen()
                           1602 ;	-----------------------------------------
                           1603 ;	 function still_screen
                           1604 ;	-----------------------------------------
   0325                    1605 _still_screen:
                           1606 ;	lcd.c:216: unsigned char score[10] = {"SCORE: "};
                           1607 ;	genPointerSet
                           1608 ;     genFarPointerSet
   0325 90s00r0B           1609 	mov	dptr,#_still_screen_score_1_1
   0328 74 53              1610 	mov	a,#0x53
   032A F0                 1611 	movx	@dptr,a
                           1612 ;	genPointerSet
                           1613 ;     genFarPointerSet
   032B 90s00r0C           1614 	mov	dptr,#(_still_screen_score_1_1 + 0x0001)
   032E 74 43              1615 	mov	a,#0x43
   0330 F0                 1616 	movx	@dptr,a
                           1617 ;	genPointerSet
                           1618 ;     genFarPointerSet
   0331 90s00r0D           1619 	mov	dptr,#(_still_screen_score_1_1 + 0x0002)
   0334 74 4F              1620 	mov	a,#0x4F
   0336 F0                 1621 	movx	@dptr,a
                           1622 ;	genPointerSet
                           1623 ;     genFarPointerSet
   0337 90s00r0E           1624 	mov	dptr,#(_still_screen_score_1_1 + 0x0003)
   033A 74 52              1625 	mov	a,#0x52
   033C F0                 1626 	movx	@dptr,a
                           1627 ;	genPointerSet
                           1628 ;     genFarPointerSet
   033D 90s00r0F           1629 	mov	dptr,#(_still_screen_score_1_1 + 0x0004)
   0340 74 45              1630 	mov	a,#0x45
   0342 F0                 1631 	movx	@dptr,a
                           1632 ;	genPointerSet
                           1633 ;     genFarPointerSet
   0343 90s00r10           1634 	mov	dptr,#(_still_screen_score_1_1 + 0x0005)
   0346 74 3A              1635 	mov	a,#0x3A
   0348 F0                 1636 	movx	@dptr,a
                           1637 ;	genPointerSet
                           1638 ;     genFarPointerSet
   0349 90s00r11           1639 	mov	dptr,#(_still_screen_score_1_1 + 0x0006)
   034C 74 20              1640 	mov	a,#0x20
   034E F0                 1641 	movx	@dptr,a
                           1642 ;	genPointerSet
                           1643 ;     genFarPointerSet
   034F 90s00r12           1644 	mov	dptr,#(_still_screen_score_1_1 + 0x0007)
                           1645 ;	Peephole 181	changed mov to clr
   0352 E4                 1646 	clr	a
   0353 F0                 1647 	movx	@dptr,a
                           1648 ;	lcd.c:217: unsigned char title[10] = {"HELI_TILT"};
                           1649 ;	genPointerSet
                           1650 ;     genFarPointerSet
   0354 90s00r15           1651 	mov	dptr,#_still_screen_title_1_1
   0357 74 48              1652 	mov	a,#0x48
   0359 F0                 1653 	movx	@dptr,a
                           1654 ;	genPointerSet
                           1655 ;     genFarPointerSet
   035A 90s00r16           1656 	mov	dptr,#(_still_screen_title_1_1 + 0x0001)
   035D 74 45              1657 	mov	a,#0x45
   035F F0                 1658 	movx	@dptr,a
                           1659 ;	genPointerSet
                           1660 ;     genFarPointerSet
   0360 90s00r17           1661 	mov	dptr,#(_still_screen_title_1_1 + 0x0002)
   0363 74 4C              1662 	mov	a,#0x4C
   0365 F0                 1663 	movx	@dptr,a
                           1664 ;	genPointerSet
                           1665 ;     genFarPointerSet
   0366 90s00r18           1666 	mov	dptr,#(_still_screen_title_1_1 + 0x0003)
   0369 74 49              1667 	mov	a,#0x49
   036B F0                 1668 	movx	@dptr,a
                           1669 ;	genPointerSet
                           1670 ;     genFarPointerSet
   036C 90s00r19           1671 	mov	dptr,#(_still_screen_title_1_1 + 0x0004)
   036F 74 5F              1672 	mov	a,#0x5F
   0371 F0                 1673 	movx	@dptr,a
                           1674 ;	genPointerSet
                           1675 ;     genFarPointerSet
   0372 90s00r1A           1676 	mov	dptr,#(_still_screen_title_1_1 + 0x0005)
   0375 74 54              1677 	mov	a,#0x54
   0377 F0                 1678 	movx	@dptr,a
                           1679 ;	genPointerSet
                           1680 ;     genFarPointerSet
   0378 90s00r1B           1681 	mov	dptr,#(_still_screen_title_1_1 + 0x0006)
   037B 74 49              1682 	mov	a,#0x49
   037D F0                 1683 	movx	@dptr,a
                           1684 ;	genPointerSet
                           1685 ;     genFarPointerSet
   037E 90s00r1C           1686 	mov	dptr,#(_still_screen_title_1_1 + 0x0007)
   0381 74 4C              1687 	mov	a,#0x4C
   0383 F0                 1688 	movx	@dptr,a
                           1689 ;	genPointerSet
                           1690 ;     genFarPointerSet
   0384 90s00r1D           1691 	mov	dptr,#(_still_screen_title_1_1 + 0x0008)
   0387 74 54              1692 	mov	a,#0x54
   0389 F0                 1693 	movx	@dptr,a
                           1694 ;	genPointerSet
                           1695 ;     genFarPointerSet
   038A 90s00r1E           1696 	mov	dptr,#(_still_screen_title_1_1 + 0x0009)
                           1697 ;	Peephole 181	changed mov to clr
   038D E4                 1698 	clr	a
   038E F0                 1699 	movx	@dptr,a
                           1700 ;	lcd.c:221: draw_banner();
                           1701 ;	genCall
   038F 12s10r08           1702 	lcall	_draw_banner
                           1703 ;	lcd.c:224: GLCD_WriteString(score,0,3, INVERT);
                           1704 ;	genAssign
   0392 90s01r84           1705 	mov	dptr,#_GLCD_WriteString_PARM_2
                           1706 ;	Peephole 181	changed mov to clr
   0395 E4                 1707 	clr	a
   0396 F0                 1708 	movx	@dptr,a
                           1709 ;	genAssign
   0397 90s01r85           1710 	mov	dptr,#_GLCD_WriteString_PARM_3
   039A 74 03              1711 	mov	a,#0x03
   039C F0                 1712 	movx	@dptr,a
                           1713 ;	genAssign
   039D 90s01r86           1714 	mov	dptr,#_GLCD_WriteString_PARM_4
   03A0 74 01              1715 	mov	a,#0x01
   03A2 F0                 1716 	movx	@dptr,a
                           1717 ;	genCall
                           1718 ;	Peephole 182.a	used 16 bit load of DPTR
   03A3 90s00r0B           1719 	mov	dptr,#_still_screen_score_1_1
   03A6 75 F0 00           1720 	mov	b,#0x00
   03A9 12s19rFD           1721 	lcall	_GLCD_WriteString
                           1722 ;	lcd.c:225: GLCD_WriteString(title,7,40, INVERT);
                           1723 ;	genAssign
   03AC 90s01r84           1724 	mov	dptr,#_GLCD_WriteString_PARM_2
   03AF 74 07              1725 	mov	a,#0x07
   03B1 F0                 1726 	movx	@dptr,a
                           1727 ;	genAssign
   03B2 90s01r85           1728 	mov	dptr,#_GLCD_WriteString_PARM_3
   03B5 74 28              1729 	mov	a,#0x28
   03B7 F0                 1730 	movx	@dptr,a
                           1731 ;	genAssign
   03B8 90s01r86           1732 	mov	dptr,#_GLCD_WriteString_PARM_4
   03BB 74 01              1733 	mov	a,#0x01
   03BD F0                 1734 	movx	@dptr,a
                           1735 ;	genCall
                           1736 ;	Peephole 182.a	used 16 bit load of DPTR
   03BE 90s00r15           1737 	mov	dptr,#_still_screen_title_1_1
   03C1 75 F0 00           1738 	mov	b,#0x00
                           1739 ;	Peephole 253.b	replaced lcall/ret with ljmp
   03C4 02s19rFD           1740 	ljmp	_GLCD_WriteString
                           1741 ;
                           1742 ;------------------------------------------------------------
                           1743 ;Allocation info for local variables in function 'next_level_screen'
                           1744 ;------------------------------------------------------------
                           1745 ;level                     Allocated with name '_next_level_screen_level_1_1'
                           1746 ;level_complete            Allocated with name '_next_level_screen_level_complete_1_1'
                           1747 ;level_begin               Allocated with name '_next_level_screen_level_begin_1_1'
                           1748 ;level_end                 Allocated with name '_next_level_screen_level_end_1_1'
                           1749 ;clear_line                Allocated with name '_next_level_screen_clear_line_1_1'
                           1750 ;level_on                  Allocated with name '_next_level_screen_level_on_1_1'
                           1751 ;level_start               Allocated with name '_next_level_screen_level_start_1_1'
                           1752 ;------------------------------------------------------------
                           1753 ;	lcd.c:231: void next_level_screen(unsigned char level)
                           1754 ;	-----------------------------------------
                           1755 ;	 function next_level_screen
                           1756 ;	-----------------------------------------
   03C7                    1757 _next_level_screen:
                           1758 ;	genReceive
   03C7 E5 82              1759 	mov	a,dpl
   03C9 90s00r1F           1760 	mov	dptr,#_next_level_screen_level_1_1
   03CC F0                 1761 	movx	@dptr,a
                           1762 ;	lcd.c:234: unsigned char level_complete[] = {"COMPLETED LEVEL "};
                           1763 ;	genPointerSet
                           1764 ;     genFarPointerSet
   03CD 90s00r20           1765 	mov	dptr,#_next_level_screen_level_complete_1_1
   03D0 74 43              1766 	mov	a,#0x43
   03D2 F0                 1767 	movx	@dptr,a
                           1768 ;	genPointerSet
                           1769 ;     genFarPointerSet
   03D3 90s00r21           1770 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0001)
   03D6 74 4F              1771 	mov	a,#0x4F
   03D8 F0                 1772 	movx	@dptr,a
                           1773 ;	genPointerSet
                           1774 ;     genFarPointerSet
   03D9 90s00r22           1775 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0002)
   03DC 74 4D              1776 	mov	a,#0x4D
   03DE F0                 1777 	movx	@dptr,a
                           1778 ;	genPointerSet
                           1779 ;     genFarPointerSet
   03DF 90s00r23           1780 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0003)
   03E2 74 50              1781 	mov	a,#0x50
   03E4 F0                 1782 	movx	@dptr,a
                           1783 ;	genPointerSet
                           1784 ;     genFarPointerSet
   03E5 90s00r24           1785 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0004)
   03E8 74 4C              1786 	mov	a,#0x4C
   03EA F0                 1787 	movx	@dptr,a
                           1788 ;	genPointerSet
                           1789 ;     genFarPointerSet
   03EB 90s00r25           1790 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0005)
   03EE 74 45              1791 	mov	a,#0x45
   03F0 F0                 1792 	movx	@dptr,a
                           1793 ;	genPointerSet
                           1794 ;     genFarPointerSet
   03F1 90s00r26           1795 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0006)
   03F4 74 54              1796 	mov	a,#0x54
   03F6 F0                 1797 	movx	@dptr,a
                           1798 ;	genPointerSet
                           1799 ;     genFarPointerSet
   03F7 90s00r27           1800 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0007)
   03FA 74 45              1801 	mov	a,#0x45
   03FC F0                 1802 	movx	@dptr,a
                           1803 ;	genPointerSet
                           1804 ;     genFarPointerSet
   03FD 90s00r28           1805 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0008)
   0400 74 44              1806 	mov	a,#0x44
   0402 F0                 1807 	movx	@dptr,a
                           1808 ;	genPointerSet
                           1809 ;     genFarPointerSet
   0403 90s00r29           1810 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0009)
   0406 74 20              1811 	mov	a,#0x20
   0408 F0                 1812 	movx	@dptr,a
                           1813 ;	genPointerSet
                           1814 ;     genFarPointerSet
   0409 90s00r2A           1815 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x000a)
   040C 74 4C              1816 	mov	a,#0x4C
   040E F0                 1817 	movx	@dptr,a
                           1818 ;	genPointerSet
                           1819 ;     genFarPointerSet
   040F 90s00r2B           1820 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x000b)
   0412 74 45              1821 	mov	a,#0x45
   0414 F0                 1822 	movx	@dptr,a
                           1823 ;	genPointerSet
                           1824 ;     genFarPointerSet
   0415 90s00r2C           1825 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x000c)
   0418 74 56              1826 	mov	a,#0x56
   041A F0                 1827 	movx	@dptr,a
                           1828 ;	genPointerSet
                           1829 ;     genFarPointerSet
   041B 90s00r2D           1830 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x000d)
   041E 74 45              1831 	mov	a,#0x45
   0420 F0                 1832 	movx	@dptr,a
                           1833 ;	genPointerSet
                           1834 ;     genFarPointerSet
   0421 90s00r2E           1835 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x000e)
   0424 74 4C              1836 	mov	a,#0x4C
   0426 F0                 1837 	movx	@dptr,a
                           1838 ;	genPointerSet
                           1839 ;     genFarPointerSet
   0427 90s00r2F           1840 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x000f)
   042A 74 20              1841 	mov	a,#0x20
   042C F0                 1842 	movx	@dptr,a
                           1843 ;	genPointerSet
                           1844 ;     genFarPointerSet
   042D 90s00r30           1845 	mov	dptr,#(_next_level_screen_level_complete_1_1 + 0x0010)
                           1846 ;	Peephole 181	changed mov to clr
   0430 E4                 1847 	clr	a
   0431 F0                 1848 	movx	@dptr,a
                           1849 ;	lcd.c:235: unsigned char level_begin[] = {"START LEVEL "};
                           1850 ;	genPointerSet
                           1851 ;     genFarPointerSet
   0432 90s00r31           1852 	mov	dptr,#_next_level_screen_level_begin_1_1
   0435 74 53              1853 	mov	a,#0x53
   0437 F0                 1854 	movx	@dptr,a
                           1855 ;	genPointerSet
                           1856 ;     genFarPointerSet
   0438 90s00r32           1857 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0001)
   043B 74 54              1858 	mov	a,#0x54
   043D F0                 1859 	movx	@dptr,a
                           1860 ;	genPointerSet
                           1861 ;     genFarPointerSet
   043E 90s00r33           1862 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0002)
   0441 74 41              1863 	mov	a,#0x41
   0443 F0                 1864 	movx	@dptr,a
                           1865 ;	genPointerSet
                           1866 ;     genFarPointerSet
   0444 90s00r34           1867 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0003)
   0447 74 52              1868 	mov	a,#0x52
   0449 F0                 1869 	movx	@dptr,a
                           1870 ;	genPointerSet
                           1871 ;     genFarPointerSet
   044A 90s00r35           1872 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0004)
   044D 74 54              1873 	mov	a,#0x54
   044F F0                 1874 	movx	@dptr,a
                           1875 ;	genPointerSet
                           1876 ;     genFarPointerSet
   0450 90s00r36           1877 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0005)
   0453 74 20              1878 	mov	a,#0x20
   0455 F0                 1879 	movx	@dptr,a
                           1880 ;	genPointerSet
                           1881 ;     genFarPointerSet
   0456 90s00r37           1882 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0006)
   0459 74 4C              1883 	mov	a,#0x4C
   045B F0                 1884 	movx	@dptr,a
                           1885 ;	genPointerSet
                           1886 ;     genFarPointerSet
   045C 90s00r38           1887 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0007)
   045F 74 45              1888 	mov	a,#0x45
   0461 F0                 1889 	movx	@dptr,a
                           1890 ;	genPointerSet
                           1891 ;     genFarPointerSet
   0462 90s00r39           1892 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0008)
   0465 74 56              1893 	mov	a,#0x56
   0467 F0                 1894 	movx	@dptr,a
                           1895 ;	genPointerSet
                           1896 ;     genFarPointerSet
   0468 90s00r3A           1897 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x0009)
   046B 74 45              1898 	mov	a,#0x45
   046D F0                 1899 	movx	@dptr,a
                           1900 ;	genPointerSet
                           1901 ;     genFarPointerSet
   046E 90s00r3B           1902 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x000a)
   0471 74 4C              1903 	mov	a,#0x4C
   0473 F0                 1904 	movx	@dptr,a
                           1905 ;	genPointerSet
                           1906 ;     genFarPointerSet
   0474 90s00r3C           1907 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x000b)
   0477 74 20              1908 	mov	a,#0x20
   0479 F0                 1909 	movx	@dptr,a
                           1910 ;	genPointerSet
                           1911 ;     genFarPointerSet
   047A 90s00r3D           1912 	mov	dptr,#(_next_level_screen_level_begin_1_1 + 0x000c)
                           1913 ;	Peephole 181	changed mov to clr
   047D E4                 1914 	clr	a
   047E F0                 1915 	movx	@dptr,a
                           1916 ;	lcd.c:236: unsigned char level_end[] = {"FINAL LEVEL >:) "};
                           1917 ;	genPointerSet
                           1918 ;     genFarPointerSet
   047F 90s00r3E           1919 	mov	dptr,#_next_level_screen_level_end_1_1
   0482 74 46              1920 	mov	a,#0x46
   0484 F0                 1921 	movx	@dptr,a
                           1922 ;	genPointerSet
                           1923 ;     genFarPointerSet
   0485 90s00r3F           1924 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0001)
   0488 74 49              1925 	mov	a,#0x49
   048A F0                 1926 	movx	@dptr,a
                           1927 ;	genPointerSet
                           1928 ;     genFarPointerSet
   048B 90s00r40           1929 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0002)
   048E 74 4E              1930 	mov	a,#0x4E
   0490 F0                 1931 	movx	@dptr,a
                           1932 ;	genPointerSet
                           1933 ;     genFarPointerSet
   0491 90s00r41           1934 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0003)
   0494 74 41              1935 	mov	a,#0x41
   0496 F0                 1936 	movx	@dptr,a
                           1937 ;	genPointerSet
                           1938 ;     genFarPointerSet
   0497 90s00r42           1939 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0004)
   049A 74 4C              1940 	mov	a,#0x4C
   049C F0                 1941 	movx	@dptr,a
                           1942 ;	genPointerSet
                           1943 ;     genFarPointerSet
   049D 90s00r43           1944 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0005)
   04A0 74 20              1945 	mov	a,#0x20
   04A2 F0                 1946 	movx	@dptr,a
                           1947 ;	genPointerSet
                           1948 ;     genFarPointerSet
   04A3 90s00r44           1949 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0006)
   04A6 74 4C              1950 	mov	a,#0x4C
   04A8 F0                 1951 	movx	@dptr,a
                           1952 ;	genPointerSet
                           1953 ;     genFarPointerSet
   04A9 90s00r45           1954 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0007)
   04AC 74 45              1955 	mov	a,#0x45
   04AE F0                 1956 	movx	@dptr,a
                           1957 ;	genPointerSet
                           1958 ;     genFarPointerSet
   04AF 90s00r46           1959 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0008)
   04B2 74 56              1960 	mov	a,#0x56
   04B4 F0                 1961 	movx	@dptr,a
                           1962 ;	genPointerSet
                           1963 ;     genFarPointerSet
   04B5 90s00r47           1964 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0009)
   04B8 74 45              1965 	mov	a,#0x45
   04BA F0                 1966 	movx	@dptr,a
                           1967 ;	genPointerSet
                           1968 ;     genFarPointerSet
   04BB 90s00r48           1969 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x000a)
   04BE 74 4C              1970 	mov	a,#0x4C
   04C0 F0                 1971 	movx	@dptr,a
                           1972 ;	genPointerSet
                           1973 ;     genFarPointerSet
   04C1 90s00r49           1974 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x000b)
   04C4 74 20              1975 	mov	a,#0x20
   04C6 F0                 1976 	movx	@dptr,a
                           1977 ;	genPointerSet
                           1978 ;     genFarPointerSet
   04C7 90s00r4A           1979 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x000c)
   04CA 74 3E              1980 	mov	a,#0x3E
   04CC F0                 1981 	movx	@dptr,a
                           1982 ;	genPointerSet
                           1983 ;     genFarPointerSet
   04CD 90s00r4B           1984 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x000d)
   04D0 74 3A              1985 	mov	a,#0x3A
   04D2 F0                 1986 	movx	@dptr,a
                           1987 ;	genPointerSet
                           1988 ;     genFarPointerSet
   04D3 90s00r4C           1989 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x000e)
   04D6 74 29              1990 	mov	a,#0x29
   04D8 F0                 1991 	movx	@dptr,a
                           1992 ;	genPointerSet
                           1993 ;     genFarPointerSet
   04D9 90s00r4D           1994 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x000f)
   04DC 74 20              1995 	mov	a,#0x20
   04DE F0                 1996 	movx	@dptr,a
                           1997 ;	genPointerSet
                           1998 ;     genFarPointerSet
   04DF 90s00r4E           1999 	mov	dptr,#(_next_level_screen_level_end_1_1 + 0x0010)
                           2000 ;	Peephole 181	changed mov to clr
   04E2 E4                 2001 	clr	a
   04E3 F0                 2002 	movx	@dptr,a
                           2003 ;	lcd.c:237: unsigned char clear_line[10] = {"        "};
                           2004 ;	genPointerSet
                           2005 ;     genFarPointerSet
   04E4 90s00r4F           2006 	mov	dptr,#_next_level_screen_clear_line_1_1
   04E7 74 20              2007 	mov	a,#0x20
   04E9 F0                 2008 	movx	@dptr,a
                           2009 ;	genPointerSet
                           2010 ;     genFarPointerSet
   04EA 90s00r50           2011 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0001)
   04ED 74 20              2012 	mov	a,#0x20
   04EF F0                 2013 	movx	@dptr,a
                           2014 ;	genPointerSet
                           2015 ;     genFarPointerSet
   04F0 90s00r51           2016 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0002)
   04F3 74 20              2017 	mov	a,#0x20
   04F5 F0                 2018 	movx	@dptr,a
                           2019 ;	genPointerSet
                           2020 ;     genFarPointerSet
   04F6 90s00r52           2021 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0003)
   04F9 74 20              2022 	mov	a,#0x20
   04FB F0                 2023 	movx	@dptr,a
                           2024 ;	genPointerSet
                           2025 ;     genFarPointerSet
   04FC 90s00r53           2026 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0004)
   04FF 74 20              2027 	mov	a,#0x20
   0501 F0                 2028 	movx	@dptr,a
                           2029 ;	genPointerSet
                           2030 ;     genFarPointerSet
   0502 90s00r54           2031 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0005)
   0505 74 20              2032 	mov	a,#0x20
   0507 F0                 2033 	movx	@dptr,a
                           2034 ;	genPointerSet
                           2035 ;     genFarPointerSet
   0508 90s00r55           2036 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0006)
   050B 74 20              2037 	mov	a,#0x20
   050D F0                 2038 	movx	@dptr,a
                           2039 ;	genPointerSet
                           2040 ;     genFarPointerSet
   050E 90s00r56           2041 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0007)
   0511 74 20              2042 	mov	a,#0x20
   0513 F0                 2043 	movx	@dptr,a
                           2044 ;	genPointerSet
                           2045 ;     genFarPointerSet
   0514 90s00r57           2046 	mov	dptr,#(_next_level_screen_clear_line_1_1 + 0x0008)
                           2047 ;	Peephole 181	changed mov to clr
   0517 E4                 2048 	clr	a
   0518 F0                 2049 	movx	@dptr,a
                           2050 ;	lcd.c:242: level_on = level + ASCII_OFFSET;
                           2051 ;	genAssign
   0519 90s00r1F           2052 	mov	dptr,#_next_level_screen_level_1_1
   051C E0                 2053 	movx	a,@dptr
   051D FA                 2054 	mov	r2,a
                           2055 ;	genPlus
                           2056 ;     genPlusIncr
   051E 74 30              2057 	mov	a,#0x30
                           2058 ;	Peephole 236.a	used r2 instead of ar2
   0520 2A                 2059 	add	a,r2
   0521 FB                 2060 	mov	r3,a
                           2061 ;	lcd.c:243: clear_game_screen();
                           2062 ;	genCall
   0522 C0 02              2063 	push	ar2
   0524 C0 03              2064 	push	ar3
   0526 12s02r78           2065 	lcall	_clear_game_screen
   0529 D0 03              2066 	pop	ar3
   052B D0 02              2067 	pop	ar2
                           2068 ;	lcd.c:246: if(level == 9)
                           2069 ;	genCmpEq
                           2070 ;	gencjneshort
                           2071 ;	Peephole 112.b	changed ljmp to sjmp
                           2072 ;	Peephole 198.b	optimized misc jump sequence
   052D BA 09 60           2073 	cjne	r2,#0x09,00105$
                           2074 ;	Peephole 200.b	removed redundant sjmp
                           2075 ;	Peephole 300	removed redundant label 00111$
                           2076 ;	Peephole 300	removed redundant label 00112$
                           2077 ;	lcd.c:249: GLCD_WriteString(level_complete, 3, 12, NORMAL);
                           2078 ;	genAssign
   0530 90s01r84           2079 	mov	dptr,#_GLCD_WriteString_PARM_2
   0533 74 03              2080 	mov	a,#0x03
   0535 F0                 2081 	movx	@dptr,a
                           2082 ;	genAssign
   0536 90s01r85           2083 	mov	dptr,#_GLCD_WriteString_PARM_3
   0539 74 0C              2084 	mov	a,#0x0C
   053B F0                 2085 	movx	@dptr,a
                           2086 ;	genAssign
   053C 90s01r86           2087 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2088 ;	Peephole 181	changed mov to clr
   053F E4                 2089 	clr	a
   0540 F0                 2090 	movx	@dptr,a
                           2091 ;	genCall
                           2092 ;	Peephole 182.a	used 16 bit load of DPTR
   0541 90s00r20           2093 	mov	dptr,#_next_level_screen_level_complete_1_1
   0544 75 F0 00           2094 	mov	b,#0x00
   0547 C0 03              2095 	push	ar3
   0549 12s19rFD           2096 	lcall	_GLCD_WriteString
   054C D0 03              2097 	pop	ar3
                           2098 ;	lcd.c:250: GLCD_WriteChar(level_on, 3, 107, NORMAL);
                           2099 ;	genAssign
   054E 90s01r70           2100 	mov	dptr,#_GLCD_WriteChar_PARM_2
   0551 74 03              2101 	mov	a,#0x03
   0553 F0                 2102 	movx	@dptr,a
                           2103 ;	genAssign
   0554 90s01r71           2104 	mov	dptr,#_GLCD_WriteChar_PARM_3
   0557 74 6B              2105 	mov	a,#0x6B
   0559 F0                 2106 	movx	@dptr,a
                           2107 ;	genAssign
   055A 90s01r72           2108 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           2109 ;	Peephole 181	changed mov to clr
   055D E4                 2110 	clr	a
   055E F0                 2111 	movx	@dptr,a
                           2112 ;	genCall
   055F 8B 82              2113 	mov	dpl,r3
   0561 12s15r3B           2114 	lcall	_GLCD_WriteChar
                           2115 ;	lcd.c:252: delay_ms(6000);
                           2116 ;	genCall
                           2117 ;	Peephole 182.b	used 16 bit load of dptr
   0564 90 17 70           2118 	mov	dptr,#0x1770
   0567 12s1Cr7C           2119 	lcall	_delay_ms
                           2120 ;	lcd.c:253: clear_game_screen();
                           2121 ;	genCall
   056A 12s02r78           2122 	lcall	_clear_game_screen
                           2123 ;	lcd.c:255: GLCD_WriteString(level_end, 3, 20, NORMAL);
                           2124 ;	genAssign
   056D 90s01r84           2125 	mov	dptr,#_GLCD_WriteString_PARM_2
   0570 74 03              2126 	mov	a,#0x03
   0572 F0                 2127 	movx	@dptr,a
                           2128 ;	genAssign
   0573 90s01r85           2129 	mov	dptr,#_GLCD_WriteString_PARM_3
   0576 74 14              2130 	mov	a,#0x14
   0578 F0                 2131 	movx	@dptr,a
                           2132 ;	genAssign
   0579 90s01r86           2133 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2134 ;	Peephole 181	changed mov to clr
   057C E4                 2135 	clr	a
   057D F0                 2136 	movx	@dptr,a
                           2137 ;	genCall
                           2138 ;	Peephole 182.a	used 16 bit load of DPTR
   057E 90s00r3E           2139 	mov	dptr,#_next_level_screen_level_end_1_1
   0581 75 F0 00           2140 	mov	b,#0x00
   0584 12s19rFD           2141 	lcall	_GLCD_WriteString
                           2142 ;	lcd.c:257: delay_ms(6000);
                           2143 ;	genCall
                           2144 ;	Peephole 182.b	used 16 bit load of dptr
   0587 90 17 70           2145 	mov	dptr,#0x1770
   058A 12s1Cr7C           2146 	lcall	_delay_ms
   058D 02s06r5F           2147 	ljmp	00106$
   0590                    2148 00105$:
                           2149 ;	lcd.c:260: else if (level == 0)
                           2150 ;	genIfx
   0590 EA                 2151 	mov	a,r2
                           2152 ;	genIfxJump
                           2153 ;	Peephole 108.b	removed ljmp by inverse jump logic
   0591 70 41              2154 	jnz	00102$
                           2155 ;	Peephole 300	removed redundant label 00113$
                           2156 ;	lcd.c:263: GLCD_WriteString(level_begin, 3, 25, NORMAL);
                           2157 ;	genAssign
   0593 90s01r84           2158 	mov	dptr,#_GLCD_WriteString_PARM_2
   0596 74 03              2159 	mov	a,#0x03
   0598 F0                 2160 	movx	@dptr,a
                           2161 ;	genAssign
   0599 90s01r85           2162 	mov	dptr,#_GLCD_WriteString_PARM_3
   059C 74 19              2163 	mov	a,#0x19
   059E F0                 2164 	movx	@dptr,a
                           2165 ;	genAssign
   059F 90s01r86           2166 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2167 ;	Peephole 181	changed mov to clr
   05A2 E4                 2168 	clr	a
   05A3 F0                 2169 	movx	@dptr,a
                           2170 ;	genCall
                           2171 ;	Peephole 182.a	used 16 bit load of DPTR
   05A4 90s00r31           2172 	mov	dptr,#_next_level_screen_level_begin_1_1
   05A7 75 F0 00           2173 	mov	b,#0x00
   05AA C0 02              2174 	push	ar2
   05AC 12s19rFD           2175 	lcall	_GLCD_WriteString
   05AF D0 02              2176 	pop	ar2
                           2177 ;	lcd.c:264: level_on++;
                           2178 ;	genPlus
                           2179 ;     genPlusIncr
   05B1 74 31              2180 	mov	a,#0x31
                           2181 ;	Peephole 236.a	used r2 instead of ar2
   05B3 2A                 2182 	add	a,r2
   05B4 FC                 2183 	mov	r4,a
                           2184 ;	lcd.c:265: GLCD_WriteChar(level_on, 3, 95, NORMAL);
                           2185 ;	genAssign
   05B5 90s01r70           2186 	mov	dptr,#_GLCD_WriteChar_PARM_2
   05B8 74 03              2187 	mov	a,#0x03
   05BA F0                 2188 	movx	@dptr,a
                           2189 ;	genAssign
   05BB 90s01r71           2190 	mov	dptr,#_GLCD_WriteChar_PARM_3
   05BE 74 5F              2191 	mov	a,#0x5F
   05C0 F0                 2192 	movx	@dptr,a
                           2193 ;	genAssign
   05C1 90s01r72           2194 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           2195 ;	Peephole 181	changed mov to clr
   05C4 E4                 2196 	clr	a
   05C5 F0                 2197 	movx	@dptr,a
                           2198 ;	genCall
   05C6 8C 82              2199 	mov	dpl,r4
   05C8 12s15r3B           2200 	lcall	_GLCD_WriteChar
                           2201 ;	lcd.c:267: delay_ms(6000);
                           2202 ;	genCall
                           2203 ;	Peephole 182.b	used 16 bit load of dptr
   05CB 90 17 70           2204 	mov	dptr,#0x1770
   05CE 12s1Cr7C           2205 	lcall	_delay_ms
   05D1 02s06r5F           2206 	ljmp	00106$
   05D4                    2207 00102$:
                           2208 ;	lcd.c:273: level_start = level + 1 + ASCII_OFFSET;
                           2209 ;	genPlus
                           2210 ;     genPlusIncr
   05D4 74 31              2211 	mov	a,#0x31
                           2212 ;	Peephole 236.a	used r2 instead of ar2
   05D6 2A                 2213 	add	a,r2
   05D7 FA                 2214 	mov	r2,a
                           2215 ;	lcd.c:275: GLCD_WriteString(level_complete, 3, 12, NORMAL);
                           2216 ;	genAssign
   05D8 90s01r84           2217 	mov	dptr,#_GLCD_WriteString_PARM_2
   05DB 74 03              2218 	mov	a,#0x03
   05DD F0                 2219 	movx	@dptr,a
                           2220 ;	genAssign
   05DE 90s01r85           2221 	mov	dptr,#_GLCD_WriteString_PARM_3
   05E1 74 0C              2222 	mov	a,#0x0C
   05E3 F0                 2223 	movx	@dptr,a
                           2224 ;	genAssign
   05E4 90s01r86           2225 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2226 ;	Peephole 181	changed mov to clr
   05E7 E4                 2227 	clr	a
   05E8 F0                 2228 	movx	@dptr,a
                           2229 ;	genCall
                           2230 ;	Peephole 182.a	used 16 bit load of DPTR
   05E9 90s00r20           2231 	mov	dptr,#_next_level_screen_level_complete_1_1
   05EC 75 F0 00           2232 	mov	b,#0x00
   05EF C0 02              2233 	push	ar2
   05F1 C0 03              2234 	push	ar3
   05F3 12s19rFD           2235 	lcall	_GLCD_WriteString
   05F6 D0 03              2236 	pop	ar3
   05F8 D0 02              2237 	pop	ar2
                           2238 ;	lcd.c:276: GLCD_WriteChar(level_on, 3, 107, NORMAL);
                           2239 ;	genAssign
   05FA 90s01r70           2240 	mov	dptr,#_GLCD_WriteChar_PARM_2
   05FD 74 03              2241 	mov	a,#0x03
   05FF F0                 2242 	movx	@dptr,a
                           2243 ;	genAssign
   0600 90s01r71           2244 	mov	dptr,#_GLCD_WriteChar_PARM_3
   0603 74 6B              2245 	mov	a,#0x6B
   0605 F0                 2246 	movx	@dptr,a
                           2247 ;	genAssign
   0606 90s01r72           2248 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           2249 ;	Peephole 181	changed mov to clr
   0609 E4                 2250 	clr	a
   060A F0                 2251 	movx	@dptr,a
                           2252 ;	genCall
   060B 8B 82              2253 	mov	dpl,r3
   060D C0 02              2254 	push	ar2
   060F 12s15r3B           2255 	lcall	_GLCD_WriteChar
   0612 D0 02              2256 	pop	ar2
                           2257 ;	lcd.c:278: delay_ms(6000);
                           2258 ;	genCall
                           2259 ;	Peephole 182.b	used 16 bit load of dptr
   0614 90 17 70           2260 	mov	dptr,#0x1770
   0617 C0 02              2261 	push	ar2
   0619 12s1Cr7C           2262 	lcall	_delay_ms
   061C D0 02              2263 	pop	ar2
                           2264 ;	lcd.c:279: clear_game_screen();
                           2265 ;	genCall
   061E C0 02              2266 	push	ar2
   0620 12s02r78           2267 	lcall	_clear_game_screen
   0623 D0 02              2268 	pop	ar2
                           2269 ;	lcd.c:281: GLCD_WriteString(level_begin, 3, 25, NORMAL);
                           2270 ;	genAssign
   0625 90s01r84           2271 	mov	dptr,#_GLCD_WriteString_PARM_2
   0628 74 03              2272 	mov	a,#0x03
   062A F0                 2273 	movx	@dptr,a
                           2274 ;	genAssign
   062B 90s01r85           2275 	mov	dptr,#_GLCD_WriteString_PARM_3
   062E 74 19              2276 	mov	a,#0x19
   0630 F0                 2277 	movx	@dptr,a
                           2278 ;	genAssign
   0631 90s01r86           2279 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2280 ;	Peephole 181	changed mov to clr
   0634 E4                 2281 	clr	a
   0635 F0                 2282 	movx	@dptr,a
                           2283 ;	genCall
                           2284 ;	Peephole 182.a	used 16 bit load of DPTR
   0636 90s00r31           2285 	mov	dptr,#_next_level_screen_level_begin_1_1
   0639 75 F0 00           2286 	mov	b,#0x00
   063C C0 02              2287 	push	ar2
   063E 12s19rFD           2288 	lcall	_GLCD_WriteString
   0641 D0 02              2289 	pop	ar2
                           2290 ;	lcd.c:282: GLCD_WriteChar(level_start, 3, 95, NORMAL);
                           2291 ;	genAssign
   0643 90s01r70           2292 	mov	dptr,#_GLCD_WriteChar_PARM_2
   0646 74 03              2293 	mov	a,#0x03
   0648 F0                 2294 	movx	@dptr,a
                           2295 ;	genAssign
   0649 90s01r71           2296 	mov	dptr,#_GLCD_WriteChar_PARM_3
   064C 74 5F              2297 	mov	a,#0x5F
   064E F0                 2298 	movx	@dptr,a
                           2299 ;	genAssign
   064F 90s01r72           2300 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           2301 ;	Peephole 181	changed mov to clr
   0652 E4                 2302 	clr	a
   0653 F0                 2303 	movx	@dptr,a
                           2304 ;	genCall
   0654 8A 82              2305 	mov	dpl,r2
   0656 12s15r3B           2306 	lcall	_GLCD_WriteChar
                           2307 ;	lcd.c:284: delay_ms(6000);
                           2308 ;	genCall
                           2309 ;	Peephole 182.b	used 16 bit load of dptr
   0659 90 17 70           2310 	mov	dptr,#0x1770
   065C 12s1Cr7C           2311 	lcall	_delay_ms
   065F                    2312 00106$:
                           2313 ;	lcd.c:286: clear_game_screen();
                           2314 ;	genCall
                           2315 ;	Peephole 253.b	replaced lcall/ret with ljmp
   065F 02s02r78           2316 	ljmp	_clear_game_screen
                           2317 ;
                           2318 ;------------------------------------------------------------
                           2319 ;Allocation info for local variables in function 'game_over'
                           2320 ;------------------------------------------------------------
                           2321 ;game_finished             Allocated with name '_game_over_game_finished_1_1'
                           2322 ;------------------------------------------------------------
                           2323 ;	lcd.c:291: void game_over()
                           2324 ;	-----------------------------------------
                           2325 ;	 function game_over
                           2326 ;	-----------------------------------------
   0662                    2327 _game_over:
                           2328 ;	lcd.c:294: unsigned char game_finished[] = {"GAME OVER :("};
                           2329 ;	genPointerSet
                           2330 ;     genFarPointerSet
   0662 90s00r59           2331 	mov	dptr,#_game_over_game_finished_1_1
   0665 74 47              2332 	mov	a,#0x47
   0667 F0                 2333 	movx	@dptr,a
                           2334 ;	genPointerSet
                           2335 ;     genFarPointerSet
   0668 90s00r5A           2336 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0001)
   066B 74 41              2337 	mov	a,#0x41
   066D F0                 2338 	movx	@dptr,a
                           2339 ;	genPointerSet
                           2340 ;     genFarPointerSet
   066E 90s00r5B           2341 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0002)
   0671 74 4D              2342 	mov	a,#0x4D
   0673 F0                 2343 	movx	@dptr,a
                           2344 ;	genPointerSet
                           2345 ;     genFarPointerSet
   0674 90s00r5C           2346 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0003)
   0677 74 45              2347 	mov	a,#0x45
   0679 F0                 2348 	movx	@dptr,a
                           2349 ;	genPointerSet
                           2350 ;     genFarPointerSet
   067A 90s00r5D           2351 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0004)
   067D 74 20              2352 	mov	a,#0x20
   067F F0                 2353 	movx	@dptr,a
                           2354 ;	genPointerSet
                           2355 ;     genFarPointerSet
   0680 90s00r5E           2356 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0005)
   0683 74 4F              2357 	mov	a,#0x4F
   0685 F0                 2358 	movx	@dptr,a
                           2359 ;	genPointerSet
                           2360 ;     genFarPointerSet
   0686 90s00r5F           2361 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0006)
   0689 74 56              2362 	mov	a,#0x56
   068B F0                 2363 	movx	@dptr,a
                           2364 ;	genPointerSet
                           2365 ;     genFarPointerSet
   068C 90s00r60           2366 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0007)
   068F 74 45              2367 	mov	a,#0x45
   0691 F0                 2368 	movx	@dptr,a
                           2369 ;	genPointerSet
                           2370 ;     genFarPointerSet
   0692 90s00r61           2371 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0008)
   0695 74 52              2372 	mov	a,#0x52
   0697 F0                 2373 	movx	@dptr,a
                           2374 ;	genPointerSet
                           2375 ;     genFarPointerSet
   0698 90s00r62           2376 	mov	dptr,#(_game_over_game_finished_1_1 + 0x0009)
   069B 74 20              2377 	mov	a,#0x20
   069D F0                 2378 	movx	@dptr,a
                           2379 ;	genPointerSet
                           2380 ;     genFarPointerSet
   069E 90s00r63           2381 	mov	dptr,#(_game_over_game_finished_1_1 + 0x000a)
   06A1 74 3A              2382 	mov	a,#0x3A
   06A3 F0                 2383 	movx	@dptr,a
                           2384 ;	genPointerSet
                           2385 ;     genFarPointerSet
   06A4 90s00r64           2386 	mov	dptr,#(_game_over_game_finished_1_1 + 0x000b)
   06A7 74 28              2387 	mov	a,#0x28
   06A9 F0                 2388 	movx	@dptr,a
                           2389 ;	genPointerSet
                           2390 ;     genFarPointerSet
   06AA 90s00r65           2391 	mov	dptr,#(_game_over_game_finished_1_1 + 0x000c)
                           2392 ;	Peephole 181	changed mov to clr
   06AD E4                 2393 	clr	a
   06AE F0                 2394 	movx	@dptr,a
                           2395 ;	lcd.c:295: clear_game_screen();
                           2396 ;	genCall
   06AF 12s02r78           2397 	lcall	_clear_game_screen
                           2398 ;	lcd.c:297: GLCD_WriteString(game_finished, 3, 30, NORMAL);
                           2399 ;	genAssign
   06B2 90s01r84           2400 	mov	dptr,#_GLCD_WriteString_PARM_2
   06B5 74 03              2401 	mov	a,#0x03
   06B7 F0                 2402 	movx	@dptr,a
                           2403 ;	genAssign
   06B8 90s01r85           2404 	mov	dptr,#_GLCD_WriteString_PARM_3
   06BB 74 1E              2405 	mov	a,#0x1E
   06BD F0                 2406 	movx	@dptr,a
                           2407 ;	genAssign
   06BE 90s01r86           2408 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2409 ;	Peephole 181	changed mov to clr
   06C1 E4                 2410 	clr	a
   06C2 F0                 2411 	movx	@dptr,a
                           2412 ;	genCall
                           2413 ;	Peephole 182.a	used 16 bit load of DPTR
   06C3 90s00r59           2414 	mov	dptr,#_game_over_game_finished_1_1
   06C6 75 F0 00           2415 	mov	b,#0x00
   06C9 12s19rFD           2416 	lcall	_GLCD_WriteString
                           2417 ;	lcd.c:299: delay_ms(6000);
                           2418 ;	genCall
                           2419 ;	Peephole 182.b	used 16 bit load of dptr
   06CC 90 17 70           2420 	mov	dptr,#0x1770
   06CF 12s1Cr7C           2421 	lcall	_delay_ms
                           2422 ;	lcd.c:300: clear_game_screen();
                           2423 ;	genCall
                           2424 ;	Peephole 253.b	replaced lcall/ret with ljmp
   06D2 02s02r78           2425 	ljmp	_clear_game_screen
                           2426 ;
                           2427 ;------------------------------------------------------------
                           2428 ;Allocation info for local variables in function 'cheater'
                           2429 ;------------------------------------------------------------
                           2430 ;game_finished             Allocated with name '_cheater_game_finished_1_1'
                           2431 ;------------------------------------------------------------
                           2432 ;	lcd.c:304: void cheater()
                           2433 ;	-----------------------------------------
                           2434 ;	 function cheater
                           2435 ;	-----------------------------------------
   06D5                    2436 _cheater:
                           2437 ;	lcd.c:306: unsigned char game_finished[] = {"CHEATER! >:)"};
                           2438 ;	genPointerSet
                           2439 ;     genFarPointerSet
   06D5 90s00r66           2440 	mov	dptr,#_cheater_game_finished_1_1
   06D8 74 43              2441 	mov	a,#0x43
   06DA F0                 2442 	movx	@dptr,a
                           2443 ;	genPointerSet
                           2444 ;     genFarPointerSet
   06DB 90s00r67           2445 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0001)
   06DE 74 48              2446 	mov	a,#0x48
   06E0 F0                 2447 	movx	@dptr,a
                           2448 ;	genPointerSet
                           2449 ;     genFarPointerSet
   06E1 90s00r68           2450 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0002)
   06E4 74 45              2451 	mov	a,#0x45
   06E6 F0                 2452 	movx	@dptr,a
                           2453 ;	genPointerSet
                           2454 ;     genFarPointerSet
   06E7 90s00r69           2455 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0003)
   06EA 74 41              2456 	mov	a,#0x41
   06EC F0                 2457 	movx	@dptr,a
                           2458 ;	genPointerSet
                           2459 ;     genFarPointerSet
   06ED 90s00r6A           2460 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0004)
   06F0 74 54              2461 	mov	a,#0x54
   06F2 F0                 2462 	movx	@dptr,a
                           2463 ;	genPointerSet
                           2464 ;     genFarPointerSet
   06F3 90s00r6B           2465 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0005)
   06F6 74 45              2466 	mov	a,#0x45
   06F8 F0                 2467 	movx	@dptr,a
                           2468 ;	genPointerSet
                           2469 ;     genFarPointerSet
   06F9 90s00r6C           2470 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0006)
   06FC 74 52              2471 	mov	a,#0x52
   06FE F0                 2472 	movx	@dptr,a
                           2473 ;	genPointerSet
                           2474 ;     genFarPointerSet
   06FF 90s00r6D           2475 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0007)
   0702 74 21              2476 	mov	a,#0x21
   0704 F0                 2477 	movx	@dptr,a
                           2478 ;	genPointerSet
                           2479 ;     genFarPointerSet
   0705 90s00r6E           2480 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0008)
   0708 74 20              2481 	mov	a,#0x20
   070A F0                 2482 	movx	@dptr,a
                           2483 ;	genPointerSet
                           2484 ;     genFarPointerSet
   070B 90s00r6F           2485 	mov	dptr,#(_cheater_game_finished_1_1 + 0x0009)
   070E 74 3E              2486 	mov	a,#0x3E
   0710 F0                 2487 	movx	@dptr,a
                           2488 ;	genPointerSet
                           2489 ;     genFarPointerSet
   0711 90s00r70           2490 	mov	dptr,#(_cheater_game_finished_1_1 + 0x000a)
   0714 74 3A              2491 	mov	a,#0x3A
   0716 F0                 2492 	movx	@dptr,a
                           2493 ;	genPointerSet
                           2494 ;     genFarPointerSet
   0717 90s00r71           2495 	mov	dptr,#(_cheater_game_finished_1_1 + 0x000b)
   071A 74 29              2496 	mov	a,#0x29
   071C F0                 2497 	movx	@dptr,a
                           2498 ;	genPointerSet
                           2499 ;     genFarPointerSet
   071D 90s00r72           2500 	mov	dptr,#(_cheater_game_finished_1_1 + 0x000c)
                           2501 ;	Peephole 181	changed mov to clr
   0720 E4                 2502 	clr	a
   0721 F0                 2503 	movx	@dptr,a
                           2504 ;	lcd.c:307: clear_game_screen();
                           2505 ;	genCall
   0722 12s02r78           2506 	lcall	_clear_game_screen
                           2507 ;	lcd.c:309: GLCD_WriteString(game_finished, 3, 30, NORMAL);
                           2508 ;	genAssign
   0725 90s01r84           2509 	mov	dptr,#_GLCD_WriteString_PARM_2
   0728 74 03              2510 	mov	a,#0x03
   072A F0                 2511 	movx	@dptr,a
                           2512 ;	genAssign
   072B 90s01r85           2513 	mov	dptr,#_GLCD_WriteString_PARM_3
   072E 74 1E              2514 	mov	a,#0x1E
   0730 F0                 2515 	movx	@dptr,a
                           2516 ;	genAssign
   0731 90s01r86           2517 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2518 ;	Peephole 181	changed mov to clr
   0734 E4                 2519 	clr	a
   0735 F0                 2520 	movx	@dptr,a
                           2521 ;	genCall
                           2522 ;	Peephole 182.a	used 16 bit load of DPTR
   0736 90s00r66           2523 	mov	dptr,#_cheater_game_finished_1_1
   0739 75 F0 00           2524 	mov	b,#0x00
   073C 12s19rFD           2525 	lcall	_GLCD_WriteString
                           2526 ;	lcd.c:311: delay_ms(6000);
                           2527 ;	genCall
                           2528 ;	Peephole 182.b	used 16 bit load of dptr
   073F 90 17 70           2529 	mov	dptr,#0x1770
   0742 12s1Cr7C           2530 	lcall	_delay_ms
                           2531 ;	lcd.c:312: clear_game_screen();
                           2532 ;	genCall
                           2533 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0745 02s02r78           2534 	ljmp	_clear_game_screen
                           2535 ;
                           2536 ;------------------------------------------------------------
                           2537 ;Allocation info for local variables in function 'creater_screen'
                           2538 ;------------------------------------------------------------
                           2539 ;creater                   Allocated with name '_creater_screen_creater_1_1'
                           2540 ;presents                  Allocated with name '_creater_screen_presents_1_1'
                           2541 ;smurf_cat                 Allocated with name '_creater_screen_smurf_cat_1_1'
                           2542 ;production                Allocated with name '_creater_screen_production_1_1'
                           2543 ;heli_tilt                 Allocated with name '_creater_screen_heli_tilt_1_1'
                           2544 ;x                         Allocated with name '_creater_screen_x_1_1'
                           2545 ;------------------------------------------------------------
                           2546 ;	lcd.c:316: void creater_screen()
                           2547 ;	-----------------------------------------
                           2548 ;	 function creater_screen
                           2549 ;	-----------------------------------------
   0748                    2550 _creater_screen:
                           2551 ;	lcd.c:319: unsigned char creater[] = {"ALI KILLUMINATI"};
                           2552 ;	genPointerSet
                           2553 ;     genFarPointerSet
   0748 90s00r73           2554 	mov	dptr,#_creater_screen_creater_1_1
   074B 74 41              2555 	mov	a,#0x41
   074D F0                 2556 	movx	@dptr,a
                           2557 ;	genPointerSet
                           2558 ;     genFarPointerSet
   074E 90s00r74           2559 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0001)
   0751 74 4C              2560 	mov	a,#0x4C
   0753 F0                 2561 	movx	@dptr,a
                           2562 ;	genPointerSet
                           2563 ;     genFarPointerSet
   0754 90s00r75           2564 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0002)
   0757 74 49              2565 	mov	a,#0x49
   0759 F0                 2566 	movx	@dptr,a
                           2567 ;	genPointerSet
                           2568 ;     genFarPointerSet
   075A 90s00r76           2569 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0003)
   075D 74 20              2570 	mov	a,#0x20
   075F F0                 2571 	movx	@dptr,a
                           2572 ;	genPointerSet
                           2573 ;     genFarPointerSet
   0760 90s00r77           2574 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0004)
   0763 74 4B              2575 	mov	a,#0x4B
   0765 F0                 2576 	movx	@dptr,a
                           2577 ;	genPointerSet
                           2578 ;     genFarPointerSet
   0766 90s00r78           2579 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0005)
   0769 74 49              2580 	mov	a,#0x49
   076B F0                 2581 	movx	@dptr,a
                           2582 ;	genPointerSet
                           2583 ;     genFarPointerSet
   076C 90s00r79           2584 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0006)
   076F 74 4C              2585 	mov	a,#0x4C
   0771 F0                 2586 	movx	@dptr,a
                           2587 ;	genPointerSet
                           2588 ;     genFarPointerSet
   0772 90s00r7A           2589 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0007)
   0775 74 4C              2590 	mov	a,#0x4C
   0777 F0                 2591 	movx	@dptr,a
                           2592 ;	genPointerSet
                           2593 ;     genFarPointerSet
   0778 90s00r7B           2594 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0008)
   077B 74 55              2595 	mov	a,#0x55
   077D F0                 2596 	movx	@dptr,a
                           2597 ;	genPointerSet
                           2598 ;     genFarPointerSet
   077E 90s00r7C           2599 	mov	dptr,#(_creater_screen_creater_1_1 + 0x0009)
   0781 74 4D              2600 	mov	a,#0x4D
   0783 F0                 2601 	movx	@dptr,a
                           2602 ;	genPointerSet
                           2603 ;     genFarPointerSet
   0784 90s00r7D           2604 	mov	dptr,#(_creater_screen_creater_1_1 + 0x000a)
   0787 74 49              2605 	mov	a,#0x49
   0789 F0                 2606 	movx	@dptr,a
                           2607 ;	genPointerSet
                           2608 ;     genFarPointerSet
   078A 90s00r7E           2609 	mov	dptr,#(_creater_screen_creater_1_1 + 0x000b)
   078D 74 4E              2610 	mov	a,#0x4E
   078F F0                 2611 	movx	@dptr,a
                           2612 ;	genPointerSet
                           2613 ;     genFarPointerSet
   0790 90s00r7F           2614 	mov	dptr,#(_creater_screen_creater_1_1 + 0x000c)
   0793 74 41              2615 	mov	a,#0x41
   0795 F0                 2616 	movx	@dptr,a
                           2617 ;	genPointerSet
                           2618 ;     genFarPointerSet
   0796 90s00r80           2619 	mov	dptr,#(_creater_screen_creater_1_1 + 0x000d)
   0799 74 54              2620 	mov	a,#0x54
   079B F0                 2621 	movx	@dptr,a
                           2622 ;	genPointerSet
                           2623 ;     genFarPointerSet
   079C 90s00r81           2624 	mov	dptr,#(_creater_screen_creater_1_1 + 0x000e)
   079F 74 49              2625 	mov	a,#0x49
   07A1 F0                 2626 	movx	@dptr,a
                           2627 ;	genPointerSet
                           2628 ;     genFarPointerSet
   07A2 90s00r82           2629 	mov	dptr,#(_creater_screen_creater_1_1 + 0x000f)
                           2630 ;	Peephole 181	changed mov to clr
   07A5 E4                 2631 	clr	a
   07A6 F0                 2632 	movx	@dptr,a
                           2633 ;	lcd.c:320: unsigned char presents[] = {"PRESENTS"};
                           2634 ;	genPointerSet
                           2635 ;     genFarPointerSet
   07A7 90s00r83           2636 	mov	dptr,#_creater_screen_presents_1_1
   07AA 74 50              2637 	mov	a,#0x50
   07AC F0                 2638 	movx	@dptr,a
                           2639 ;	genPointerSet
                           2640 ;     genFarPointerSet
   07AD 90s00r84           2641 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0001)
   07B0 74 52              2642 	mov	a,#0x52
   07B2 F0                 2643 	movx	@dptr,a
                           2644 ;	genPointerSet
                           2645 ;     genFarPointerSet
   07B3 90s00r85           2646 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0002)
   07B6 74 45              2647 	mov	a,#0x45
   07B8 F0                 2648 	movx	@dptr,a
                           2649 ;	genPointerSet
                           2650 ;     genFarPointerSet
   07B9 90s00r86           2651 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0003)
   07BC 74 53              2652 	mov	a,#0x53
   07BE F0                 2653 	movx	@dptr,a
                           2654 ;	genPointerSet
                           2655 ;     genFarPointerSet
   07BF 90s00r87           2656 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0004)
   07C2 74 45              2657 	mov	a,#0x45
   07C4 F0                 2658 	movx	@dptr,a
                           2659 ;	genPointerSet
                           2660 ;     genFarPointerSet
   07C5 90s00r88           2661 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0005)
   07C8 74 4E              2662 	mov	a,#0x4E
   07CA F0                 2663 	movx	@dptr,a
                           2664 ;	genPointerSet
                           2665 ;     genFarPointerSet
   07CB 90s00r89           2666 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0006)
   07CE 74 54              2667 	mov	a,#0x54
   07D0 F0                 2668 	movx	@dptr,a
                           2669 ;	genPointerSet
                           2670 ;     genFarPointerSet
   07D1 90s00r8A           2671 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0007)
   07D4 74 53              2672 	mov	a,#0x53
   07D6 F0                 2673 	movx	@dptr,a
                           2674 ;	genPointerSet
                           2675 ;     genFarPointerSet
   07D7 90s00r8B           2676 	mov	dptr,#(_creater_screen_presents_1_1 + 0x0008)
                           2677 ;	Peephole 181	changed mov to clr
   07DA E4                 2678 	clr	a
   07DB F0                 2679 	movx	@dptr,a
                           2680 ;	lcd.c:321: unsigned char smurf_cat[] = {"A SMURFCAT"};
                           2681 ;	genPointerSet
                           2682 ;     genFarPointerSet
   07DC 90s00r8C           2683 	mov	dptr,#_creater_screen_smurf_cat_1_1
   07DF 74 41              2684 	mov	a,#0x41
   07E1 F0                 2685 	movx	@dptr,a
                           2686 ;	genPointerSet
                           2687 ;     genFarPointerSet
   07E2 90s00r8D           2688 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0001)
   07E5 74 20              2689 	mov	a,#0x20
   07E7 F0                 2690 	movx	@dptr,a
                           2691 ;	genPointerSet
                           2692 ;     genFarPointerSet
   07E8 90s00r8E           2693 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0002)
   07EB 74 53              2694 	mov	a,#0x53
   07ED F0                 2695 	movx	@dptr,a
                           2696 ;	genPointerSet
                           2697 ;     genFarPointerSet
   07EE 90s00r8F           2698 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0003)
   07F1 74 4D              2699 	mov	a,#0x4D
   07F3 F0                 2700 	movx	@dptr,a
                           2701 ;	genPointerSet
                           2702 ;     genFarPointerSet
   07F4 90s00r90           2703 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0004)
   07F7 74 55              2704 	mov	a,#0x55
   07F9 F0                 2705 	movx	@dptr,a
                           2706 ;	genPointerSet
                           2707 ;     genFarPointerSet
   07FA 90s00r91           2708 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0005)
   07FD 74 52              2709 	mov	a,#0x52
   07FF F0                 2710 	movx	@dptr,a
                           2711 ;	genPointerSet
                           2712 ;     genFarPointerSet
   0800 90s00r92           2713 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0006)
   0803 74 46              2714 	mov	a,#0x46
   0805 F0                 2715 	movx	@dptr,a
                           2716 ;	genPointerSet
                           2717 ;     genFarPointerSet
   0806 90s00r93           2718 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0007)
   0809 74 43              2719 	mov	a,#0x43
   080B F0                 2720 	movx	@dptr,a
                           2721 ;	genPointerSet
                           2722 ;     genFarPointerSet
   080C 90s00r94           2723 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0008)
   080F 74 41              2724 	mov	a,#0x41
   0811 F0                 2725 	movx	@dptr,a
                           2726 ;	genPointerSet
                           2727 ;     genFarPointerSet
   0812 90s00r95           2728 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x0009)
   0815 74 54              2729 	mov	a,#0x54
   0817 F0                 2730 	movx	@dptr,a
                           2731 ;	genPointerSet
                           2732 ;     genFarPointerSet
   0818 90s00r96           2733 	mov	dptr,#(_creater_screen_smurf_cat_1_1 + 0x000a)
                           2734 ;	Peephole 181	changed mov to clr
   081B E4                 2735 	clr	a
   081C F0                 2736 	movx	@dptr,a
                           2737 ;	lcd.c:322: unsigned char production[] = {"PRODUCTION"};
                           2738 ;	genPointerSet
                           2739 ;     genFarPointerSet
   081D 90s00r97           2740 	mov	dptr,#_creater_screen_production_1_1
   0820 74 50              2741 	mov	a,#0x50
   0822 F0                 2742 	movx	@dptr,a
                           2743 ;	genPointerSet
                           2744 ;     genFarPointerSet
   0823 90s00r98           2745 	mov	dptr,#(_creater_screen_production_1_1 + 0x0001)
   0826 74 52              2746 	mov	a,#0x52
   0828 F0                 2747 	movx	@dptr,a
                           2748 ;	genPointerSet
                           2749 ;     genFarPointerSet
   0829 90s00r99           2750 	mov	dptr,#(_creater_screen_production_1_1 + 0x0002)
   082C 74 4F              2751 	mov	a,#0x4F
   082E F0                 2752 	movx	@dptr,a
                           2753 ;	genPointerSet
                           2754 ;     genFarPointerSet
   082F 90s00r9A           2755 	mov	dptr,#(_creater_screen_production_1_1 + 0x0003)
   0832 74 44              2756 	mov	a,#0x44
   0834 F0                 2757 	movx	@dptr,a
                           2758 ;	genPointerSet
                           2759 ;     genFarPointerSet
   0835 90s00r9B           2760 	mov	dptr,#(_creater_screen_production_1_1 + 0x0004)
   0838 74 55              2761 	mov	a,#0x55
   083A F0                 2762 	movx	@dptr,a
                           2763 ;	genPointerSet
                           2764 ;     genFarPointerSet
   083B 90s00r9C           2765 	mov	dptr,#(_creater_screen_production_1_1 + 0x0005)
   083E 74 43              2766 	mov	a,#0x43
   0840 F0                 2767 	movx	@dptr,a
                           2768 ;	genPointerSet
                           2769 ;     genFarPointerSet
   0841 90s00r9D           2770 	mov	dptr,#(_creater_screen_production_1_1 + 0x0006)
   0844 74 54              2771 	mov	a,#0x54
   0846 F0                 2772 	movx	@dptr,a
                           2773 ;	genPointerSet
                           2774 ;     genFarPointerSet
   0847 90s00r9E           2775 	mov	dptr,#(_creater_screen_production_1_1 + 0x0007)
   084A 74 49              2776 	mov	a,#0x49
   084C F0                 2777 	movx	@dptr,a
                           2778 ;	genPointerSet
                           2779 ;     genFarPointerSet
   084D 90s00r9F           2780 	mov	dptr,#(_creater_screen_production_1_1 + 0x0008)
   0850 74 4F              2781 	mov	a,#0x4F
   0852 F0                 2782 	movx	@dptr,a
                           2783 ;	genPointerSet
                           2784 ;     genFarPointerSet
   0853 90s00rA0           2785 	mov	dptr,#(_creater_screen_production_1_1 + 0x0009)
   0856 74 4E              2786 	mov	a,#0x4E
   0858 F0                 2787 	movx	@dptr,a
                           2788 ;	genPointerSet
                           2789 ;     genFarPointerSet
   0859 90s00rA1           2790 	mov	dptr,#(_creater_screen_production_1_1 + 0x000a)
                           2791 ;	Peephole 181	changed mov to clr
   085C E4                 2792 	clr	a
   085D F0                 2793 	movx	@dptr,a
                           2794 ;	lcd.c:323: unsigned char heli_tilt[] = {"HELI_TILT"};
                           2795 ;	genPointerSet
                           2796 ;     genFarPointerSet
   085E 90s00rA2           2797 	mov	dptr,#_creater_screen_heli_tilt_1_1
   0861 74 48              2798 	mov	a,#0x48
   0863 F0                 2799 	movx	@dptr,a
                           2800 ;	genPointerSet
                           2801 ;     genFarPointerSet
   0864 90s00rA3           2802 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0001)
   0867 74 45              2803 	mov	a,#0x45
   0869 F0                 2804 	movx	@dptr,a
                           2805 ;	genPointerSet
                           2806 ;     genFarPointerSet
   086A 90s00rA4           2807 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0002)
   086D 74 4C              2808 	mov	a,#0x4C
   086F F0                 2809 	movx	@dptr,a
                           2810 ;	genPointerSet
                           2811 ;     genFarPointerSet
   0870 90s00rA5           2812 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0003)
   0873 74 49              2813 	mov	a,#0x49
   0875 F0                 2814 	movx	@dptr,a
                           2815 ;	genPointerSet
                           2816 ;     genFarPointerSet
   0876 90s00rA6           2817 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0004)
   0879 74 5F              2818 	mov	a,#0x5F
   087B F0                 2819 	movx	@dptr,a
                           2820 ;	genPointerSet
                           2821 ;     genFarPointerSet
   087C 90s00rA7           2822 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0005)
   087F 74 54              2823 	mov	a,#0x54
   0881 F0                 2824 	movx	@dptr,a
                           2825 ;	genPointerSet
                           2826 ;     genFarPointerSet
   0882 90s00rA8           2827 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0006)
   0885 74 49              2828 	mov	a,#0x49
   0887 F0                 2829 	movx	@dptr,a
                           2830 ;	genPointerSet
                           2831 ;     genFarPointerSet
   0888 90s00rA9           2832 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0007)
   088B 74 4C              2833 	mov	a,#0x4C
   088D F0                 2834 	movx	@dptr,a
                           2835 ;	genPointerSet
                           2836 ;     genFarPointerSet
   088E 90s00rAA           2837 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0008)
   0891 74 54              2838 	mov	a,#0x54
   0893 F0                 2839 	movx	@dptr,a
                           2840 ;	genPointerSet
                           2841 ;     genFarPointerSet
   0894 90s00rAB           2842 	mov	dptr,#(_creater_screen_heli_tilt_1_1 + 0x0009)
                           2843 ;	Peephole 181	changed mov to clr
   0897 E4                 2844 	clr	a
   0898 F0                 2845 	movx	@dptr,a
                           2846 ;	lcd.c:326: clear_game_screen();
                           2847 ;	genCall
   0899 12s02r78           2848 	lcall	_clear_game_screen
                           2849 ;	lcd.c:330: draw_banner();
                           2850 ;	genCall
   089C 12s10r08           2851 	lcall	_draw_banner
                           2852 ;	lcd.c:333: GLCD_WriteString(heli_tilt,0,40,INVERT);
                           2853 ;	genAssign
   089F 90s01r84           2854 	mov	dptr,#_GLCD_WriteString_PARM_2
                           2855 ;	Peephole 181	changed mov to clr
   08A2 E4                 2856 	clr	a
   08A3 F0                 2857 	movx	@dptr,a
                           2858 ;	genAssign
   08A4 90s01r85           2859 	mov	dptr,#_GLCD_WriteString_PARM_3
   08A7 74 28              2860 	mov	a,#0x28
   08A9 F0                 2861 	movx	@dptr,a
                           2862 ;	genAssign
   08AA 90s01r86           2863 	mov	dptr,#_GLCD_WriteString_PARM_4
   08AD 74 01              2864 	mov	a,#0x01
   08AF F0                 2865 	movx	@dptr,a
                           2866 ;	genCall
                           2867 ;	Peephole 182.a	used 16 bit load of DPTR
   08B0 90s00rA2           2868 	mov	dptr,#_creater_screen_heli_tilt_1_1
   08B3 75 F0 00           2869 	mov	b,#0x00
   08B6 12s19rFD           2870 	lcall	_GLCD_WriteString
                           2871 ;	lcd.c:334: GLCD_WriteString(heli_tilt,7,40,INVERT);
                           2872 ;	genAssign
   08B9 90s01r84           2873 	mov	dptr,#_GLCD_WriteString_PARM_2
   08BC 74 07              2874 	mov	a,#0x07
   08BE F0                 2875 	movx	@dptr,a
                           2876 ;	genAssign
   08BF 90s01r85           2877 	mov	dptr,#_GLCD_WriteString_PARM_3
   08C2 74 28              2878 	mov	a,#0x28
   08C4 F0                 2879 	movx	@dptr,a
                           2880 ;	genAssign
   08C5 90s01r86           2881 	mov	dptr,#_GLCD_WriteString_PARM_4
   08C8 74 01              2882 	mov	a,#0x01
   08CA F0                 2883 	movx	@dptr,a
                           2884 ;	genCall
                           2885 ;	Peephole 182.a	used 16 bit load of DPTR
   08CB 90s00rA2           2886 	mov	dptr,#_creater_screen_heli_tilt_1_1
   08CE 75 F0 00           2887 	mov	b,#0x00
   08D1 12s19rFD           2888 	lcall	_GLCD_WriteString
                           2889 ;	lcd.c:336: GLCD_WriteString(creater, 3, 15, NORMAL);
                           2890 ;	genAssign
   08D4 90s01r84           2891 	mov	dptr,#_GLCD_WriteString_PARM_2
   08D7 74 03              2892 	mov	a,#0x03
   08D9 F0                 2893 	movx	@dptr,a
                           2894 ;	genAssign
   08DA 90s01r85           2895 	mov	dptr,#_GLCD_WriteString_PARM_3
   08DD 74 0F              2896 	mov	a,#0x0F
   08DF F0                 2897 	movx	@dptr,a
                           2898 ;	genAssign
   08E0 90s01r86           2899 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2900 ;	Peephole 181	changed mov to clr
   08E3 E4                 2901 	clr	a
   08E4 F0                 2902 	movx	@dptr,a
                           2903 ;	genCall
                           2904 ;	Peephole 182.a	used 16 bit load of DPTR
   08E5 90s00r73           2905 	mov	dptr,#_creater_screen_creater_1_1
   08E8 75 F0 00           2906 	mov	b,#0x00
   08EB 12s19rFD           2907 	lcall	_GLCD_WriteString
                           2908 ;	lcd.c:337: GLCD_WriteString(presents, 4, 40, NORMAL);
                           2909 ;	genAssign
   08EE 90s01r84           2910 	mov	dptr,#_GLCD_WriteString_PARM_2
   08F1 74 04              2911 	mov	a,#0x04
   08F3 F0                 2912 	movx	@dptr,a
                           2913 ;	genAssign
   08F4 90s01r85           2914 	mov	dptr,#_GLCD_WriteString_PARM_3
   08F7 74 28              2915 	mov	a,#0x28
   08F9 F0                 2916 	movx	@dptr,a
                           2917 ;	genAssign
   08FA 90s01r86           2918 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2919 ;	Peephole 181	changed mov to clr
   08FD E4                 2920 	clr	a
   08FE F0                 2921 	movx	@dptr,a
                           2922 ;	genCall
                           2923 ;	Peephole 182.a	used 16 bit load of DPTR
   08FF 90s00r83           2924 	mov	dptr,#_creater_screen_presents_1_1
   0902 75 F0 00           2925 	mov	b,#0x00
   0905 12s19rFD           2926 	lcall	_GLCD_WriteString
                           2927 ;	lcd.c:339: delay_ms(5000);
                           2928 ;	genCall
                           2929 ;	Peephole 182.b	used 16 bit load of dptr
   0908 90 13 88           2930 	mov	dptr,#0x1388
   090B 12s1Cr7C           2931 	lcall	_delay_ms
                           2932 ;	lcd.c:340: clear_game_screen();
                           2933 ;	genCall
   090E 12s02r78           2934 	lcall	_clear_game_screen
                           2935 ;	lcd.c:342: GLCD_WriteString(smurf_cat, 3, 35, NORMAL);
                           2936 ;	genAssign
   0911 90s01r84           2937 	mov	dptr,#_GLCD_WriteString_PARM_2
   0914 74 03              2938 	mov	a,#0x03
   0916 F0                 2939 	movx	@dptr,a
                           2940 ;	genAssign
   0917 90s01r85           2941 	mov	dptr,#_GLCD_WriteString_PARM_3
   091A 74 23              2942 	mov	a,#0x23
   091C F0                 2943 	movx	@dptr,a
                           2944 ;	genAssign
   091D 90s01r86           2945 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2946 ;	Peephole 181	changed mov to clr
   0920 E4                 2947 	clr	a
   0921 F0                 2948 	movx	@dptr,a
                           2949 ;	genCall
                           2950 ;	Peephole 182.a	used 16 bit load of DPTR
   0922 90s00r8C           2951 	mov	dptr,#_creater_screen_smurf_cat_1_1
   0925 75 F0 00           2952 	mov	b,#0x00
   0928 12s19rFD           2953 	lcall	_GLCD_WriteString
                           2954 ;	lcd.c:343: GLCD_WriteString(production, 4, 35,NORMAL);
                           2955 ;	genAssign
   092B 90s01r84           2956 	mov	dptr,#_GLCD_WriteString_PARM_2
   092E 74 04              2957 	mov	a,#0x04
   0930 F0                 2958 	movx	@dptr,a
                           2959 ;	genAssign
   0931 90s01r85           2960 	mov	dptr,#_GLCD_WriteString_PARM_3
   0934 74 23              2961 	mov	a,#0x23
   0936 F0                 2962 	movx	@dptr,a
                           2963 ;	genAssign
   0937 90s01r86           2964 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2965 ;	Peephole 181	changed mov to clr
   093A E4                 2966 	clr	a
   093B F0                 2967 	movx	@dptr,a
                           2968 ;	genCall
                           2969 ;	Peephole 182.a	used 16 bit load of DPTR
   093C 90s00r97           2970 	mov	dptr,#_creater_screen_production_1_1
   093F 75 F0 00           2971 	mov	b,#0x00
   0942 12s19rFD           2972 	lcall	_GLCD_WriteString
                           2973 ;	lcd.c:345: delay_ms(5000);
                           2974 ;	genCall
                           2975 ;	Peephole 182.b	used 16 bit load of dptr
   0945 90 13 88           2976 	mov	dptr,#0x1388
   0948 12s1Cr7C           2977 	lcall	_delay_ms
                           2978 ;	lcd.c:346: clear_game_screen();
                           2979 ;	genCall
   094B 12s02r78           2980 	lcall	_clear_game_screen
                           2981 ;	lcd.c:348: GLCD_WriteString(heli_tilt, 3, 40, NORMAL);
                           2982 ;	genAssign
   094E 90s01r84           2983 	mov	dptr,#_GLCD_WriteString_PARM_2
   0951 74 03              2984 	mov	a,#0x03
   0953 F0                 2985 	movx	@dptr,a
                           2986 ;	genAssign
   0954 90s01r85           2987 	mov	dptr,#_GLCD_WriteString_PARM_3
   0957 74 28              2988 	mov	a,#0x28
   0959 F0                 2989 	movx	@dptr,a
                           2990 ;	genAssign
   095A 90s01r86           2991 	mov	dptr,#_GLCD_WriteString_PARM_4
                           2992 ;	Peephole 181	changed mov to clr
   095D E4                 2993 	clr	a
   095E F0                 2994 	movx	@dptr,a
                           2995 ;	genCall
                           2996 ;	Peephole 182.a	used 16 bit load of DPTR
   095F 90s00rA2           2997 	mov	dptr,#_creater_screen_heli_tilt_1_1
   0962 75 F0 00           2998 	mov	b,#0x00
   0965 12s19rFD           2999 	lcall	_GLCD_WriteString
                           3000 ;	lcd.c:349: GLCD_WriteHeli(HELI, 3, 64);
                           3001 ;	genAssign
   0968 90s01r7F           3002 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   096B 74 03              3003 	mov	a,#0x03
   096D F0                 3004 	movx	@dptr,a
                           3005 ;	genAssign
   096E 90s01r80           3006 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   0971 74 40              3007 	mov	a,#0x40
   0973 F0                 3008 	movx	@dptr,a
                           3009 ;	genCall
   0974 75 82 80           3010 	mov	dpl,#0x80
   0977 12s18rCF           3011 	lcall	_GLCD_WriteHeli
                           3012 ;	lcd.c:351: delay_ms(5000);
                           3013 ;	genCall
                           3014 ;	Peephole 182.b	used 16 bit load of dptr
   097A 90 13 88           3015 	mov	dptr,#0x1388
   097D 12s1Cr7C           3016 	lcall	_delay_ms
                           3017 ;	lcd.c:353: MOTOR_ON;
                           3018 ;	genAssign
   0980 D2 97              3019 	setb	_P1_7
                           3020 ;	lcd.c:355: for(x = 0; x < 65; x++)
                           3021 ;	genAssign
   0982 7A 00              3022 	mov	r2,#0x00
   0984 7B 00              3023 	mov	r3,#0x00
   0986                    3024 00101$:
                           3025 ;	genCmpLt
                           3026 ;	genCmp
   0986 C3                 3027 	clr	c
   0987 EA                 3028 	mov	a,r2
   0988 94 41              3029 	subb	a,#0x41
   098A EB                 3030 	mov	a,r3
   098B 64 80              3031 	xrl	a,#0x80
   098D 94 80              3032 	subb	a,#0x80
                           3033 ;	genIfxJump
                           3034 ;	Peephole 108.a	removed ljmp by inverse jump logic
   098F 50 34              3035 	jnc	00104$
                           3036 ;	Peephole 300	removed redundant label 00110$
                           3037 ;	lcd.c:357: GLCD_WriteHeli(HELI, 4, 59 + x);
                           3038 ;	genCast
   0991 8A 04              3039 	mov	ar4,r2
                           3040 ;	genPlus
                           3041 ;     genPlusIncr
   0993 74 3B              3042 	mov	a,#0x3B
                           3043 ;	Peephole 236.a	used r4 instead of ar4
   0995 2C                 3044 	add	a,r4
   0996 FC                 3045 	mov	r4,a
                           3046 ;	genAssign
   0997 90s01r7F           3047 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   099A 74 04              3048 	mov	a,#0x04
   099C F0                 3049 	movx	@dptr,a
                           3050 ;	genAssign
   099D 90s01r80           3051 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   09A0 EC                 3052 	mov	a,r4
   09A1 F0                 3053 	movx	@dptr,a
                           3054 ;	genCall
   09A2 75 82 80           3055 	mov	dpl,#0x80
   09A5 C0 02              3056 	push	ar2
   09A7 C0 03              3057 	push	ar3
   09A9 12s18rCF           3058 	lcall	_GLCD_WriteHeli
   09AC D0 03              3059 	pop	ar3
   09AE D0 02              3060 	pop	ar2
                           3061 ;	lcd.c:358: delay_ms(100);
                           3062 ;	genCall
                           3063 ;	Peephole 182.b	used 16 bit load of dptr
   09B0 90 00 64           3064 	mov	dptr,#0x0064
   09B3 C0 02              3065 	push	ar2
   09B5 C0 03              3066 	push	ar3
   09B7 12s1Cr7C           3067 	lcall	_delay_ms
   09BA D0 03              3068 	pop	ar3
   09BC D0 02              3069 	pop	ar2
                           3070 ;	lcd.c:355: for(x = 0; x < 65; x++)
                           3071 ;	genPlus
                           3072 ;     genPlusIncr
   09BE 0A                 3073 	inc	r2
                           3074 ;	Peephole 112.b	changed ljmp to sjmp
                           3075 ;	Peephole 243	avoided branch to sjmp
   09BF BA 00 C4           3076 	cjne	r2,#0x00,00101$
   09C2 0B                 3077 	inc	r3
                           3078 ;	Peephole 300	removed redundant label 00111$
   09C3 80 C1              3079 	sjmp	00101$
   09C5                    3080 00104$:
                           3081 ;	lcd.c:360: MOTOR_OFF;
                           3082 ;	genAssign
   09C5 C2 97              3083 	clr	_P1_7
                           3084 ;	lcd.c:361: clear_game_screen();
                           3085 ;	genCall
                           3086 ;	Peephole 253.b	replaced lcall/ret with ljmp
   09C7 02s02r78           3087 	ljmp	_clear_game_screen
                           3088 ;
                           3089 ;------------------------------------------------------------
                           3090 ;Allocation info for local variables in function 'game_menu'
                           3091 ;------------------------------------------------------------
                           3092 ;play_game                 Allocated with name '_game_menu_play_game_1_1'
                           3093 ;high_scores               Allocated with name '_game_menu_high_scores_1_1'
                           3094 ;calibrate                 Allocated with name '_game_menu_calibrate_1_1'
                           3095 ;heli_tilt                 Allocated with name '_game_menu_heli_tilt_1_1'
                           3096 ;diffculty                 Allocated with name '_game_menu_diffculty_1_1'
                           3097 ;x                         Allocated with name '_game_menu_x_1_1'
                           3098 ;y                         Allocated with name '_game_menu_y_1_1'
                           3099 ;choice_page               Allocated with name '_game_menu_choice_page_1_1'
                           3100 ;y_count                   Allocated with name '_game_menu_y_count_1_1'
                           3101 ;------------------------------------------------------------
                           3102 ;	lcd.c:368: unsigned char game_menu()
                           3103 ;	-----------------------------------------
                           3104 ;	 function game_menu
                           3105 ;	-----------------------------------------
   09CA                    3106 _game_menu:
                           3107 ;	lcd.c:371: unsigned char play_game[] = {"PLAY GAME"};
                           3108 ;	genPointerSet
                           3109 ;     genFarPointerSet
   09CA 90s00rAC           3110 	mov	dptr,#_game_menu_play_game_1_1
   09CD 74 50              3111 	mov	a,#0x50
   09CF F0                 3112 	movx	@dptr,a
                           3113 ;	genPointerSet
                           3114 ;     genFarPointerSet
   09D0 90s00rAD           3115 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0001)
   09D3 74 4C              3116 	mov	a,#0x4C
   09D5 F0                 3117 	movx	@dptr,a
                           3118 ;	genPointerSet
                           3119 ;     genFarPointerSet
   09D6 90s00rAE           3120 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0002)
   09D9 74 41              3121 	mov	a,#0x41
   09DB F0                 3122 	movx	@dptr,a
                           3123 ;	genPointerSet
                           3124 ;     genFarPointerSet
   09DC 90s00rAF           3125 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0003)
   09DF 74 59              3126 	mov	a,#0x59
   09E1 F0                 3127 	movx	@dptr,a
                           3128 ;	genPointerSet
                           3129 ;     genFarPointerSet
   09E2 90s00rB0           3130 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0004)
   09E5 74 20              3131 	mov	a,#0x20
   09E7 F0                 3132 	movx	@dptr,a
                           3133 ;	genPointerSet
                           3134 ;     genFarPointerSet
   09E8 90s00rB1           3135 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0005)
   09EB 74 47              3136 	mov	a,#0x47
   09ED F0                 3137 	movx	@dptr,a
                           3138 ;	genPointerSet
                           3139 ;     genFarPointerSet
   09EE 90s00rB2           3140 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0006)
   09F1 74 41              3141 	mov	a,#0x41
   09F3 F0                 3142 	movx	@dptr,a
                           3143 ;	genPointerSet
                           3144 ;     genFarPointerSet
   09F4 90s00rB3           3145 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0007)
   09F7 74 4D              3146 	mov	a,#0x4D
   09F9 F0                 3147 	movx	@dptr,a
                           3148 ;	genPointerSet
                           3149 ;     genFarPointerSet
   09FA 90s00rB4           3150 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0008)
   09FD 74 45              3151 	mov	a,#0x45
   09FF F0                 3152 	movx	@dptr,a
                           3153 ;	genPointerSet
                           3154 ;     genFarPointerSet
   0A00 90s00rB5           3155 	mov	dptr,#(_game_menu_play_game_1_1 + 0x0009)
                           3156 ;	Peephole 181	changed mov to clr
   0A03 E4                 3157 	clr	a
   0A04 F0                 3158 	movx	@dptr,a
                           3159 ;	lcd.c:372: unsigned char high_scores[] = {"HIGH SCORES"};
                           3160 ;	genPointerSet
                           3161 ;     genFarPointerSet
   0A05 90s00rB6           3162 	mov	dptr,#_game_menu_high_scores_1_1
   0A08 74 48              3163 	mov	a,#0x48
   0A0A F0                 3164 	movx	@dptr,a
                           3165 ;	genPointerSet
                           3166 ;     genFarPointerSet
   0A0B 90s00rB7           3167 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0001)
   0A0E 74 49              3168 	mov	a,#0x49
   0A10 F0                 3169 	movx	@dptr,a
                           3170 ;	genPointerSet
                           3171 ;     genFarPointerSet
   0A11 90s00rB8           3172 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0002)
   0A14 74 47              3173 	mov	a,#0x47
   0A16 F0                 3174 	movx	@dptr,a
                           3175 ;	genPointerSet
                           3176 ;     genFarPointerSet
   0A17 90s00rB9           3177 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0003)
   0A1A 74 48              3178 	mov	a,#0x48
   0A1C F0                 3179 	movx	@dptr,a
                           3180 ;	genPointerSet
                           3181 ;     genFarPointerSet
   0A1D 90s00rBA           3182 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0004)
   0A20 74 20              3183 	mov	a,#0x20
   0A22 F0                 3184 	movx	@dptr,a
                           3185 ;	genPointerSet
                           3186 ;     genFarPointerSet
   0A23 90s00rBB           3187 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0005)
   0A26 74 53              3188 	mov	a,#0x53
   0A28 F0                 3189 	movx	@dptr,a
                           3190 ;	genPointerSet
                           3191 ;     genFarPointerSet
   0A29 90s00rBC           3192 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0006)
   0A2C 74 43              3193 	mov	a,#0x43
   0A2E F0                 3194 	movx	@dptr,a
                           3195 ;	genPointerSet
                           3196 ;     genFarPointerSet
   0A2F 90s00rBD           3197 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0007)
   0A32 74 4F              3198 	mov	a,#0x4F
   0A34 F0                 3199 	movx	@dptr,a
                           3200 ;	genPointerSet
                           3201 ;     genFarPointerSet
   0A35 90s00rBE           3202 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0008)
   0A38 74 52              3203 	mov	a,#0x52
   0A3A F0                 3204 	movx	@dptr,a
                           3205 ;	genPointerSet
                           3206 ;     genFarPointerSet
   0A3B 90s00rBF           3207 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x0009)
   0A3E 74 45              3208 	mov	a,#0x45
   0A40 F0                 3209 	movx	@dptr,a
                           3210 ;	genPointerSet
                           3211 ;     genFarPointerSet
   0A41 90s00rC0           3212 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x000a)
   0A44 74 53              3213 	mov	a,#0x53
   0A46 F0                 3214 	movx	@dptr,a
                           3215 ;	genPointerSet
                           3216 ;     genFarPointerSet
   0A47 90s00rC1           3217 	mov	dptr,#(_game_menu_high_scores_1_1 + 0x000b)
                           3218 ;	Peephole 181	changed mov to clr
   0A4A E4                 3219 	clr	a
   0A4B F0                 3220 	movx	@dptr,a
                           3221 ;	lcd.c:373: unsigned char calibrate[] = {"CALIBRATE"};
                           3222 ;	genPointerSet
                           3223 ;     genFarPointerSet
   0A4C 90s00rC2           3224 	mov	dptr,#_game_menu_calibrate_1_1
   0A4F 74 43              3225 	mov	a,#0x43
   0A51 F0                 3226 	movx	@dptr,a
                           3227 ;	genPointerSet
                           3228 ;     genFarPointerSet
   0A52 90s00rC3           3229 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0001)
   0A55 74 41              3230 	mov	a,#0x41
   0A57 F0                 3231 	movx	@dptr,a
                           3232 ;	genPointerSet
                           3233 ;     genFarPointerSet
   0A58 90s00rC4           3234 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0002)
   0A5B 74 4C              3235 	mov	a,#0x4C
   0A5D F0                 3236 	movx	@dptr,a
                           3237 ;	genPointerSet
                           3238 ;     genFarPointerSet
   0A5E 90s00rC5           3239 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0003)
   0A61 74 49              3240 	mov	a,#0x49
   0A63 F0                 3241 	movx	@dptr,a
                           3242 ;	genPointerSet
                           3243 ;     genFarPointerSet
   0A64 90s00rC6           3244 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0004)
   0A67 74 42              3245 	mov	a,#0x42
   0A69 F0                 3246 	movx	@dptr,a
                           3247 ;	genPointerSet
                           3248 ;     genFarPointerSet
   0A6A 90s00rC7           3249 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0005)
   0A6D 74 52              3250 	mov	a,#0x52
   0A6F F0                 3251 	movx	@dptr,a
                           3252 ;	genPointerSet
                           3253 ;     genFarPointerSet
   0A70 90s00rC8           3254 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0006)
   0A73 74 41              3255 	mov	a,#0x41
   0A75 F0                 3256 	movx	@dptr,a
                           3257 ;	genPointerSet
                           3258 ;     genFarPointerSet
   0A76 90s00rC9           3259 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0007)
   0A79 74 54              3260 	mov	a,#0x54
   0A7B F0                 3261 	movx	@dptr,a
                           3262 ;	genPointerSet
                           3263 ;     genFarPointerSet
   0A7C 90s00rCA           3264 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0008)
   0A7F 74 45              3265 	mov	a,#0x45
   0A81 F0                 3266 	movx	@dptr,a
                           3267 ;	genPointerSet
                           3268 ;     genFarPointerSet
   0A82 90s00rCB           3269 	mov	dptr,#(_game_menu_calibrate_1_1 + 0x0009)
                           3270 ;	Peephole 181	changed mov to clr
   0A85 E4                 3271 	clr	a
   0A86 F0                 3272 	movx	@dptr,a
                           3273 ;	lcd.c:374: unsigned char heli_tilt[] = {"HELI_TILT"};
                           3274 ;	genPointerSet
                           3275 ;     genFarPointerSet
   0A87 90s00rCC           3276 	mov	dptr,#_game_menu_heli_tilt_1_1
   0A8A 74 48              3277 	mov	a,#0x48
   0A8C F0                 3278 	movx	@dptr,a
                           3279 ;	genPointerSet
                           3280 ;     genFarPointerSet
   0A8D 90s00rCD           3281 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0001)
   0A90 74 45              3282 	mov	a,#0x45
   0A92 F0                 3283 	movx	@dptr,a
                           3284 ;	genPointerSet
                           3285 ;     genFarPointerSet
   0A93 90s00rCE           3286 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0002)
   0A96 74 4C              3287 	mov	a,#0x4C
   0A98 F0                 3288 	movx	@dptr,a
                           3289 ;	genPointerSet
                           3290 ;     genFarPointerSet
   0A99 90s00rCF           3291 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0003)
   0A9C 74 49              3292 	mov	a,#0x49
   0A9E F0                 3293 	movx	@dptr,a
                           3294 ;	genPointerSet
                           3295 ;     genFarPointerSet
   0A9F 90s00rD0           3296 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0004)
   0AA2 74 5F              3297 	mov	a,#0x5F
   0AA4 F0                 3298 	movx	@dptr,a
                           3299 ;	genPointerSet
                           3300 ;     genFarPointerSet
   0AA5 90s00rD1           3301 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0005)
   0AA8 74 54              3302 	mov	a,#0x54
   0AAA F0                 3303 	movx	@dptr,a
                           3304 ;	genPointerSet
                           3305 ;     genFarPointerSet
   0AAB 90s00rD2           3306 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0006)
   0AAE 74 49              3307 	mov	a,#0x49
   0AB0 F0                 3308 	movx	@dptr,a
                           3309 ;	genPointerSet
                           3310 ;     genFarPointerSet
   0AB1 90s00rD3           3311 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0007)
   0AB4 74 4C              3312 	mov	a,#0x4C
   0AB6 F0                 3313 	movx	@dptr,a
                           3314 ;	genPointerSet
                           3315 ;     genFarPointerSet
   0AB7 90s00rD4           3316 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0008)
   0ABA 74 54              3317 	mov	a,#0x54
   0ABC F0                 3318 	movx	@dptr,a
                           3319 ;	genPointerSet
                           3320 ;     genFarPointerSet
   0ABD 90s00rD5           3321 	mov	dptr,#(_game_menu_heli_tilt_1_1 + 0x0009)
                           3322 ;	Peephole 181	changed mov to clr
   0AC0 E4                 3323 	clr	a
   0AC1 F0                 3324 	movx	@dptr,a
                           3325 ;	lcd.c:375: unsigned char diffculty[] = {"SET DIFFICULTY"};
                           3326 ;	genPointerSet
                           3327 ;     genFarPointerSet
   0AC2 90s00rD6           3328 	mov	dptr,#_game_menu_diffculty_1_1
   0AC5 74 53              3329 	mov	a,#0x53
   0AC7 F0                 3330 	movx	@dptr,a
                           3331 ;	genPointerSet
                           3332 ;     genFarPointerSet
   0AC8 90s00rD7           3333 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0001)
   0ACB 74 45              3334 	mov	a,#0x45
   0ACD F0                 3335 	movx	@dptr,a
                           3336 ;	genPointerSet
                           3337 ;     genFarPointerSet
   0ACE 90s00rD8           3338 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0002)
   0AD1 74 54              3339 	mov	a,#0x54
   0AD3 F0                 3340 	movx	@dptr,a
                           3341 ;	genPointerSet
                           3342 ;     genFarPointerSet
   0AD4 90s00rD9           3343 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0003)
   0AD7 74 20              3344 	mov	a,#0x20
   0AD9 F0                 3345 	movx	@dptr,a
                           3346 ;	genPointerSet
                           3347 ;     genFarPointerSet
   0ADA 90s00rDA           3348 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0004)
   0ADD 74 44              3349 	mov	a,#0x44
   0ADF F0                 3350 	movx	@dptr,a
                           3351 ;	genPointerSet
                           3352 ;     genFarPointerSet
   0AE0 90s00rDB           3353 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0005)
   0AE3 74 49              3354 	mov	a,#0x49
   0AE5 F0                 3355 	movx	@dptr,a
                           3356 ;	genPointerSet
                           3357 ;     genFarPointerSet
   0AE6 90s00rDC           3358 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0006)
   0AE9 74 46              3359 	mov	a,#0x46
   0AEB F0                 3360 	movx	@dptr,a
                           3361 ;	genPointerSet
                           3362 ;     genFarPointerSet
   0AEC 90s00rDD           3363 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0007)
   0AEF 74 46              3364 	mov	a,#0x46
   0AF1 F0                 3365 	movx	@dptr,a
                           3366 ;	genPointerSet
                           3367 ;     genFarPointerSet
   0AF2 90s00rDE           3368 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0008)
   0AF5 74 49              3369 	mov	a,#0x49
   0AF7 F0                 3370 	movx	@dptr,a
                           3371 ;	genPointerSet
                           3372 ;     genFarPointerSet
   0AF8 90s00rDF           3373 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x0009)
   0AFB 74 43              3374 	mov	a,#0x43
   0AFD F0                 3375 	movx	@dptr,a
                           3376 ;	genPointerSet
                           3377 ;     genFarPointerSet
   0AFE 90s00rE0           3378 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x000a)
   0B01 74 55              3379 	mov	a,#0x55
   0B03 F0                 3380 	movx	@dptr,a
                           3381 ;	genPointerSet
                           3382 ;     genFarPointerSet
   0B04 90s00rE1           3383 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x000b)
   0B07 74 4C              3384 	mov	a,#0x4C
   0B09 F0                 3385 	movx	@dptr,a
                           3386 ;	genPointerSet
                           3387 ;     genFarPointerSet
   0B0A 90s00rE2           3388 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x000c)
   0B0D 74 54              3389 	mov	a,#0x54
   0B0F F0                 3390 	movx	@dptr,a
                           3391 ;	genPointerSet
                           3392 ;     genFarPointerSet
   0B10 90s00rE3           3393 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x000d)
   0B13 74 59              3394 	mov	a,#0x59
   0B15 F0                 3395 	movx	@dptr,a
                           3396 ;	genPointerSet
                           3397 ;     genFarPointerSet
   0B16 90s00rE4           3398 	mov	dptr,#(_game_menu_diffculty_1_1 + 0x000e)
                           3399 ;	Peephole 181	changed mov to clr
   0B19 E4                 3400 	clr	a
   0B1A F0                 3401 	movx	@dptr,a
                           3402 ;	lcd.c:376: int x = 0, y = 0, choice_page = 2, y_count = 0;
                           3403 ;	genAssign
   0B1B 90s00rE5           3404 	mov	dptr,#_game_menu_choice_page_1_1
   0B1E 74 02              3405 	mov	a,#0x02
   0B20 F0                 3406 	movx	@dptr,a
   0B21 E4                 3407 	clr	a
   0B22 A3                 3408 	inc	dptr
   0B23 F0                 3409 	movx	@dptr,a
                           3410 ;	lcd.c:378: clear_game_screen();
                           3411 ;	genCall
   0B24 12s02r78           3412 	lcall	_clear_game_screen
                           3413 ;	lcd.c:381: draw_banner();
                           3414 ;	genCall
   0B27 12s10r08           3415 	lcall	_draw_banner
                           3416 ;	lcd.c:384: GLCD_WriteString(heli_tilt,0,40,INVERT);
                           3417 ;	genAssign
   0B2A 90s01r84           3418 	mov	dptr,#_GLCD_WriteString_PARM_2
                           3419 ;	Peephole 181	changed mov to clr
   0B2D E4                 3420 	clr	a
   0B2E F0                 3421 	movx	@dptr,a
                           3422 ;	genAssign
   0B2F 90s01r85           3423 	mov	dptr,#_GLCD_WriteString_PARM_3
   0B32 74 28              3424 	mov	a,#0x28
   0B34 F0                 3425 	movx	@dptr,a
                           3426 ;	genAssign
   0B35 90s01r86           3427 	mov	dptr,#_GLCD_WriteString_PARM_4
   0B38 74 01              3428 	mov	a,#0x01
   0B3A F0                 3429 	movx	@dptr,a
                           3430 ;	genCall
                           3431 ;	Peephole 182.a	used 16 bit load of DPTR
   0B3B 90s00rCC           3432 	mov	dptr,#_game_menu_heli_tilt_1_1
   0B3E 75 F0 00           3433 	mov	b,#0x00
   0B41 12s19rFD           3434 	lcall	_GLCD_WriteString
                           3435 ;	lcd.c:385: GLCD_WriteString(heli_tilt,7,40,INVERT);
                           3436 ;	genAssign
   0B44 90s01r84           3437 	mov	dptr,#_GLCD_WriteString_PARM_2
   0B47 74 07              3438 	mov	a,#0x07
   0B49 F0                 3439 	movx	@dptr,a
                           3440 ;	genAssign
   0B4A 90s01r85           3441 	mov	dptr,#_GLCD_WriteString_PARM_3
   0B4D 74 28              3442 	mov	a,#0x28
   0B4F F0                 3443 	movx	@dptr,a
                           3444 ;	genAssign
   0B50 90s01r86           3445 	mov	dptr,#_GLCD_WriteString_PARM_4
   0B53 74 01              3446 	mov	a,#0x01
   0B55 F0                 3447 	movx	@dptr,a
                           3448 ;	genCall
                           3449 ;	Peephole 182.a	used 16 bit load of DPTR
   0B56 90s00rCC           3450 	mov	dptr,#_game_menu_heli_tilt_1_1
   0B59 75 F0 00           3451 	mov	b,#0x00
   0B5C 12s19rFD           3452 	lcall	_GLCD_WriteString
                           3453 ;	lcd.c:389: GLCD_WriteHeli(HELI,choice_page,15);
                           3454 ;	genAssign
   0B5F 90s01r7F           3455 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   0B62 74 02              3456 	mov	a,#0x02
   0B64 F0                 3457 	movx	@dptr,a
                           3458 ;	genAssign
   0B65 90s01r80           3459 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   0B68 74 0F              3460 	mov	a,#0x0F
   0B6A F0                 3461 	movx	@dptr,a
                           3462 ;	genCall
   0B6B 75 82 80           3463 	mov	dpl,#0x80
   0B6E 12s18rCF           3464 	lcall	_GLCD_WriteHeli
                           3465 ;	lcd.c:390: GLCD_WriteString(play_game,2,40,NORMAL);
                           3466 ;	genAssign
   0B71 90s01r84           3467 	mov	dptr,#_GLCD_WriteString_PARM_2
   0B74 74 02              3468 	mov	a,#0x02
   0B76 F0                 3469 	movx	@dptr,a
                           3470 ;	genAssign
   0B77 90s01r85           3471 	mov	dptr,#_GLCD_WriteString_PARM_3
   0B7A 74 28              3472 	mov	a,#0x28
   0B7C F0                 3473 	movx	@dptr,a
                           3474 ;	genAssign
   0B7D 90s01r86           3475 	mov	dptr,#_GLCD_WriteString_PARM_4
                           3476 ;	Peephole 181	changed mov to clr
   0B80 E4                 3477 	clr	a
   0B81 F0                 3478 	movx	@dptr,a
                           3479 ;	genCall
                           3480 ;	Peephole 182.a	used 16 bit load of DPTR
   0B82 90s00rAC           3481 	mov	dptr,#_game_menu_play_game_1_1
   0B85 75 F0 00           3482 	mov	b,#0x00
   0B88 12s19rFD           3483 	lcall	_GLCD_WriteString
                           3484 ;	lcd.c:391: GLCD_WriteString(diffculty,3,25,NORMAL);
                           3485 ;	genAssign
   0B8B 90s01r84           3486 	mov	dptr,#_GLCD_WriteString_PARM_2
   0B8E 74 03              3487 	mov	a,#0x03
   0B90 F0                 3488 	movx	@dptr,a
                           3489 ;	genAssign
   0B91 90s01r85           3490 	mov	dptr,#_GLCD_WriteString_PARM_3
   0B94 74 19              3491 	mov	a,#0x19
   0B96 F0                 3492 	movx	@dptr,a
                           3493 ;	genAssign
   0B97 90s01r86           3494 	mov	dptr,#_GLCD_WriteString_PARM_4
                           3495 ;	Peephole 181	changed mov to clr
   0B9A E4                 3496 	clr	a
   0B9B F0                 3497 	movx	@dptr,a
                           3498 ;	genCall
                           3499 ;	Peephole 182.a	used 16 bit load of DPTR
   0B9C 90s00rD6           3500 	mov	dptr,#_game_menu_diffculty_1_1
   0B9F 75 F0 00           3501 	mov	b,#0x00
   0BA2 12s19rFD           3502 	lcall	_GLCD_WriteString
                           3503 ;	lcd.c:392: GLCD_WriteString(high_scores,4,35,NORMAL);
                           3504 ;	genAssign
   0BA5 90s01r84           3505 	mov	dptr,#_GLCD_WriteString_PARM_2
   0BA8 74 04              3506 	mov	a,#0x04
   0BAA F0                 3507 	movx	@dptr,a
                           3508 ;	genAssign
   0BAB 90s01r85           3509 	mov	dptr,#_GLCD_WriteString_PARM_3
   0BAE 74 23              3510 	mov	a,#0x23
   0BB0 F0                 3511 	movx	@dptr,a
                           3512 ;	genAssign
   0BB1 90s01r86           3513 	mov	dptr,#_GLCD_WriteString_PARM_4
                           3514 ;	Peephole 181	changed mov to clr
   0BB4 E4                 3515 	clr	a
   0BB5 F0                 3516 	movx	@dptr,a
                           3517 ;	genCall
                           3518 ;	Peephole 182.a	used 16 bit load of DPTR
   0BB6 90s00rB6           3519 	mov	dptr,#_game_menu_high_scores_1_1
   0BB9 75 F0 00           3520 	mov	b,#0x00
   0BBC 12s19rFD           3521 	lcall	_GLCD_WriteString
                           3522 ;	lcd.c:393: GLCD_WriteString(calibrate,5,40,NORMAL);
                           3523 ;	genAssign
   0BBF 90s01r84           3524 	mov	dptr,#_GLCD_WriteString_PARM_2
   0BC2 74 05              3525 	mov	a,#0x05
   0BC4 F0                 3526 	movx	@dptr,a
                           3527 ;	genAssign
   0BC5 90s01r85           3528 	mov	dptr,#_GLCD_WriteString_PARM_3
   0BC8 74 28              3529 	mov	a,#0x28
   0BCA F0                 3530 	movx	@dptr,a
                           3531 ;	genAssign
   0BCB 90s01r86           3532 	mov	dptr,#_GLCD_WriteString_PARM_4
                           3533 ;	Peephole 181	changed mov to clr
   0BCE E4                 3534 	clr	a
   0BCF F0                 3535 	movx	@dptr,a
                           3536 ;	genCall
                           3537 ;	Peephole 182.a	used 16 bit load of DPTR
   0BD0 90s00rC2           3538 	mov	dptr,#_game_menu_calibrate_1_1
   0BD3 75 F0 00           3539 	mov	b,#0x00
   0BD6 12s19rFD           3540 	lcall	_GLCD_WriteString
                           3541 ;	lcd.c:396: delay_ms(4000);
                           3542 ;	genCall
                           3543 ;	Peephole 182.b	used 16 bit load of dptr
   0BD9 90 0F A0           3544 	mov	dptr,#0x0FA0
   0BDC 12s1Cr7C           3545 	lcall	_delay_ms
                           3546 ;	lcd.c:398: while(1)
   0BDF                    3547 00113$:
                           3548 ;	lcd.c:401: y = ADXL345_read_y();
                           3549 ;	genCall
   0BDF 12s00r00           3550 	lcall	_ADXL345_read_y
   0BE2 AA 82              3551 	mov	r2,dpl
   0BE4 AB 83              3552 	mov	r3,dph
                           3553 ;	lcd.c:402: x = ADXL345_read_x();
                           3554 ;	genCall
   0BE6 C0 02              3555 	push	ar2
   0BE8 C0 03              3556 	push	ar3
   0BEA 12s00r00           3557 	lcall	_ADXL345_read_x
   0BED AC 82              3558 	mov	r4,dpl
   0BEF AD 83              3559 	mov	r5,dph
   0BF1 D0 03              3560 	pop	ar3
   0BF3 D0 02              3561 	pop	ar2
                           3562 ;	lcd.c:404: if(y <= RIGHT_UP_MIN)
                           3563 ;	genCmpGt
                           3564 ;	genCmp
   0BF5 C3                 3565 	clr	c
   0BF6 74 6A              3566 	mov	a,#0x6A
   0BF8 9A                 3567 	subb	a,r2
                           3568 ;	Peephole 159	avoided xrl during execution
   0BF9 74 7F              3569 	mov	a,#(0xFF ^ 0x80)
   0BFB 8B F0              3570 	mov	b,r3
   0BFD 63 F0 80           3571 	xrl	b,#0x80
   0C00 95 F0              3572 	subb	a,b
                           3573 ;	genIfxJump
                           3574 ;	Peephole 112.b	changed ljmp to sjmp
                           3575 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0C02 40 59              3576 	jc	00108$
                           3577 ;	Peephole 300	removed redundant label 00123$
                           3578 ;	lcd.c:407: GLCD_WriteChar(' ', choice_page, 15,NORMAL);
                           3579 ;	genAssign
   0C04 90s00rE5           3580 	mov	dptr,#_game_menu_choice_page_1_1
   0C07 E0                 3581 	movx	a,@dptr
   0C08 FE                 3582 	mov	r6,a
   0C09 A3                 3583 	inc	dptr
   0C0A E0                 3584 	movx	a,@dptr
   0C0B FF                 3585 	mov	r7,a
                           3586 ;	genCast
   0C0C 90s01r70           3587 	mov	dptr,#_GLCD_WriteChar_PARM_2
   0C0F EE                 3588 	mov	a,r6
   0C10 F0                 3589 	movx	@dptr,a
                           3590 ;	genAssign
   0C11 90s01r71           3591 	mov	dptr,#_GLCD_WriteChar_PARM_3
   0C14 74 0F              3592 	mov	a,#0x0F
   0C16 F0                 3593 	movx	@dptr,a
                           3594 ;	genAssign
   0C17 90s01r72           3595 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           3596 ;	Peephole 181	changed mov to clr
   0C1A E4                 3597 	clr	a
   0C1B F0                 3598 	movx	@dptr,a
                           3599 ;	genCall
   0C1C 75 82 20           3600 	mov	dpl,#0x20
   0C1F C0 04              3601 	push	ar4
   0C21 C0 05              3602 	push	ar5
   0C23 C0 06              3603 	push	ar6
   0C25 C0 07              3604 	push	ar7
   0C27 12s15r3B           3605 	lcall	_GLCD_WriteChar
   0C2A D0 07              3606 	pop	ar7
   0C2C D0 06              3607 	pop	ar6
   0C2E D0 05              3608 	pop	ar5
   0C30 D0 04              3609 	pop	ar4
                           3610 ;	lcd.c:409: if(--choice_page < TOP_OPT)
                           3611 ;	genMinus
                           3612 ;	genMinusDec
   0C32 1E                 3613 	dec	r6
   0C33 BE FF 01           3614 	cjne	r6,#0xff,00124$
   0C36 1F                 3615 	dec	r7
   0C37                    3616 00124$:
                           3617 ;	genAssign
   0C37 90s00rE5           3618 	mov	dptr,#_game_menu_choice_page_1_1
   0C3A EE                 3619 	mov	a,r6
   0C3B F0                 3620 	movx	@dptr,a
   0C3C A3                 3621 	inc	dptr
   0C3D EF                 3622 	mov	a,r7
   0C3E F0                 3623 	movx	@dptr,a
                           3624 ;	genAssign
   0C3F 90s00rE5           3625 	mov	dptr,#_game_menu_choice_page_1_1
   0C42 E0                 3626 	movx	a,@dptr
   0C43 FE                 3627 	mov	r6,a
   0C44 A3                 3628 	inc	dptr
   0C45 E0                 3629 	movx	a,@dptr
   0C46 FF                 3630 	mov	r7,a
                           3631 ;	genCmpLt
                           3632 ;	genCmp
   0C47 C3                 3633 	clr	c
   0C48 EE                 3634 	mov	a,r6
   0C49 94 02              3635 	subb	a,#0x02
   0C4B EF                 3636 	mov	a,r7
   0C4C 64 80              3637 	xrl	a,#0x80
   0C4E 94 80              3638 	subb	a,#0x80
                           3639 ;	genIfxJump
                           3640 ;	Peephole 112.b	changed ljmp to sjmp
                           3641 ;	Peephole 160.b	removed sjmp by inverse jump logic
   0C50 50 6F              3642 	jnc	00109$
                           3643 ;	Peephole 300	removed redundant label 00125$
                           3644 ;	lcd.c:410: choice_page = TOP_OPT;
                           3645 ;	genAssign
   0C52 90s00rE5           3646 	mov	dptr,#_game_menu_choice_page_1_1
   0C55 74 02              3647 	mov	a,#0x02
   0C57 F0                 3648 	movx	@dptr,a
   0C58 E4                 3649 	clr	a
   0C59 A3                 3650 	inc	dptr
   0C5A F0                 3651 	movx	@dptr,a
                           3652 ;	Peephole 112.b	changed ljmp to sjmp
   0C5B 80 64              3653 	sjmp	00109$
   0C5D                    3654 00108$:
                           3655 ;	lcd.c:413: else if( y >= LEFT_DOWN_MIN)
                           3656 ;	genCmpLt
                           3657 ;	genCmp
   0C5D C3                 3658 	clr	c
   0C5E EA                 3659 	mov	a,r2
   0C5F 94 96              3660 	subb	a,#0x96
   0C61 EB                 3661 	mov	a,r3
   0C62 64 80              3662 	xrl	a,#0x80
   0C64 94 80              3663 	subb	a,#0x80
                           3664 ;	genIfxJump
                           3665 ;	Peephole 112.b	changed ljmp to sjmp
                           3666 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0C66 40 59              3667 	jc	00109$
                           3668 ;	Peephole 300	removed redundant label 00126$
                           3669 ;	lcd.c:416: GLCD_WriteChar(' ', choice_page, 15,NORMAL);
                           3670 ;	genAssign
   0C68 90s00rE5           3671 	mov	dptr,#_game_menu_choice_page_1_1
   0C6B E0                 3672 	movx	a,@dptr
   0C6C FA                 3673 	mov	r2,a
   0C6D A3                 3674 	inc	dptr
   0C6E E0                 3675 	movx	a,@dptr
   0C6F FB                 3676 	mov	r3,a
                           3677 ;	genCast
   0C70 90s01r70           3678 	mov	dptr,#_GLCD_WriteChar_PARM_2
   0C73 EA                 3679 	mov	a,r2
   0C74 F0                 3680 	movx	@dptr,a
                           3681 ;	genAssign
   0C75 90s01r71           3682 	mov	dptr,#_GLCD_WriteChar_PARM_3
   0C78 74 0F              3683 	mov	a,#0x0F
   0C7A F0                 3684 	movx	@dptr,a
                           3685 ;	genAssign
   0C7B 90s01r72           3686 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           3687 ;	Peephole 181	changed mov to clr
   0C7E E4                 3688 	clr	a
   0C7F F0                 3689 	movx	@dptr,a
                           3690 ;	genCall
   0C80 75 82 20           3691 	mov	dpl,#0x20
   0C83 C0 02              3692 	push	ar2
   0C85 C0 03              3693 	push	ar3
   0C87 C0 04              3694 	push	ar4
   0C89 C0 05              3695 	push	ar5
   0C8B 12s15r3B           3696 	lcall	_GLCD_WriteChar
   0C8E D0 05              3697 	pop	ar5
   0C90 D0 04              3698 	pop	ar4
   0C92 D0 03              3699 	pop	ar3
   0C94 D0 02              3700 	pop	ar2
                           3701 ;	lcd.c:418: if(++choice_page > BOTTOM_OPT)
                           3702 ;	genPlus
   0C96 90s00rE5           3703 	mov	dptr,#_game_menu_choice_page_1_1
                           3704 ;     genPlusIncr
   0C99 74 01              3705 	mov	a,#0x01
                           3706 ;	Peephole 236.a	used r2 instead of ar2
   0C9B 2A                 3707 	add	a,r2
   0C9C F0                 3708 	movx	@dptr,a
                           3709 ;	Peephole 181	changed mov to clr
   0C9D E4                 3710 	clr	a
                           3711 ;	Peephole 236.b	used r3 instead of ar3
   0C9E 3B                 3712 	addc	a,r3
   0C9F A3                 3713 	inc	dptr
   0CA0 F0                 3714 	movx	@dptr,a
                           3715 ;	genAssign
   0CA1 90s00rE5           3716 	mov	dptr,#_game_menu_choice_page_1_1
   0CA4 E0                 3717 	movx	a,@dptr
   0CA5 FA                 3718 	mov	r2,a
   0CA6 A3                 3719 	inc	dptr
   0CA7 E0                 3720 	movx	a,@dptr
   0CA8 FB                 3721 	mov	r3,a
                           3722 ;	genCmpGt
                           3723 ;	genCmp
   0CA9 C3                 3724 	clr	c
   0CAA 74 05              3725 	mov	a,#0x05
   0CAC 9A                 3726 	subb	a,r2
                           3727 ;	Peephole 159	avoided xrl during execution
   0CAD 74 80              3728 	mov	a,#(0x00 ^ 0x80)
   0CAF 8B F0              3729 	mov	b,r3
   0CB1 63 F0 80           3730 	xrl	b,#0x80
   0CB4 95 F0              3731 	subb	a,b
                           3732 ;	genIfxJump
                           3733 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0CB6 50 09              3734 	jnc	00109$
                           3735 ;	Peephole 300	removed redundant label 00127$
                           3736 ;	lcd.c:419: choice_page = BOTTOM_OPT;
                           3737 ;	genAssign
   0CB8 90s00rE5           3738 	mov	dptr,#_game_menu_choice_page_1_1
   0CBB 74 05              3739 	mov	a,#0x05
   0CBD F0                 3740 	movx	@dptr,a
   0CBE E4                 3741 	clr	a
   0CBF A3                 3742 	inc	dptr
   0CC0 F0                 3743 	movx	@dptr,a
   0CC1                    3744 00109$:
                           3745 ;	lcd.c:422: GLCD_WriteHeli(HELI,choice_page,15);
                           3746 ;	genAssign
   0CC1 90s00rE5           3747 	mov	dptr,#_game_menu_choice_page_1_1
   0CC4 E0                 3748 	movx	a,@dptr
   0CC5 FA                 3749 	mov	r2,a
   0CC6 A3                 3750 	inc	dptr
   0CC7 E0                 3751 	movx	a,@dptr
   0CC8 FB                 3752 	mov	r3,a
                           3753 ;	genCast
   0CC9 90s01r7F           3754 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   0CCC EA                 3755 	mov	a,r2
   0CCD F0                 3756 	movx	@dptr,a
                           3757 ;	genAssign
   0CCE 90s01r80           3758 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   0CD1 74 0F              3759 	mov	a,#0x0F
   0CD3 F0                 3760 	movx	@dptr,a
                           3761 ;	genCall
   0CD4 75 82 80           3762 	mov	dpl,#0x80
   0CD7 C0 02              3763 	push	ar2
   0CD9 C0 03              3764 	push	ar3
   0CDB C0 04              3765 	push	ar4
   0CDD C0 05              3766 	push	ar5
   0CDF 12s18rCF           3767 	lcall	_GLCD_WriteHeli
   0CE2 D0 05              3768 	pop	ar5
   0CE4 D0 04              3769 	pop	ar4
   0CE6 D0 03              3770 	pop	ar3
   0CE8 D0 02              3771 	pop	ar2
                           3772 ;	lcd.c:424: delay_ms(750);
                           3773 ;	genCall
                           3774 ;	Peephole 182.b	used 16 bit load of dptr
   0CEA 90 02 EE           3775 	mov	dptr,#0x02EE
   0CED C0 02              3776 	push	ar2
   0CEF C0 03              3777 	push	ar3
   0CF1 C0 04              3778 	push	ar4
   0CF3 C0 05              3779 	push	ar5
   0CF5 12s1Cr7C           3780 	lcall	_delay_ms
   0CF8 D0 05              3781 	pop	ar5
   0CFA D0 04              3782 	pop	ar4
   0CFC D0 03              3783 	pop	ar3
   0CFE D0 02              3784 	pop	ar2
                           3785 ;	lcd.c:426: if(x <= RIGHT_UP_MIN)
                           3786 ;	genCmpGt
                           3787 ;	genCmp
   0D00 C3                 3788 	clr	c
   0D01 74 6A              3789 	mov	a,#0x6A
   0D03 9C                 3790 	subb	a,r4
                           3791 ;	Peephole 159	avoided xrl during execution
   0D04 74 7F              3792 	mov	a,#(0xFF ^ 0x80)
   0D06 8D F0              3793 	mov	b,r5
   0D08 63 F0 80           3794 	xrl	b,#0x80
   0D0B 95 F0              3795 	subb	a,b
                           3796 ;	genIfxJump
   0D0D 50 03              3797 	jnc	00128$
   0D0F 02s0BrDF           3798 	ljmp	00113$
   0D12                    3799 00128$:
                           3800 ;	lcd.c:427: return choice_page - 1;
                           3801 ;	genCast
                           3802 ;	genMinus
                           3803 ;	genMinusDec
   0D12 1A                 3804 	dec	r2
                           3805 ;	genRet
   0D13 8A 82              3806 	mov	dpl,r2
                           3807 ;	Peephole 300	removed redundant label 00115$
   0D15 22                 3808 	ret
                           3809 ;------------------------------------------------------------
                           3810 ;Allocation info for local variables in function 'difficulty_menu'
                           3811 ;------------------------------------------------------------
                           3812 ;easy                      Allocated with name '_difficulty_menu_easy_1_1'
                           3813 ;medium                    Allocated with name '_difficulty_menu_medium_1_1'
                           3814 ;smash_cat                 Allocated with name '_difficulty_menu_smash_cat_1_1'
                           3815 ;heli_tilt                 Allocated with name '_difficulty_menu_heli_tilt_1_1'
                           3816 ;x                         Allocated with name '_difficulty_menu_x_1_1'
                           3817 ;y                         Allocated with name '_difficulty_menu_y_1_1'
                           3818 ;choice_page               Allocated with name '_difficulty_menu_choice_page_1_1'
                           3819 ;y_count                   Allocated with name '_difficulty_menu_y_count_1_1'
                           3820 ;------------------------------------------------------------
                           3821 ;	lcd.c:434: unsigned char difficulty_menu()
                           3822 ;	-----------------------------------------
                           3823 ;	 function difficulty_menu
                           3824 ;	-----------------------------------------
   0D16                    3825 _difficulty_menu:
                           3826 ;	lcd.c:437: unsigned char easy[] = {"TOO EASY"};
                           3827 ;	genPointerSet
                           3828 ;     genFarPointerSet
   0D16 90s00rE7           3829 	mov	dptr,#_difficulty_menu_easy_1_1
   0D19 74 54              3830 	mov	a,#0x54
   0D1B F0                 3831 	movx	@dptr,a
                           3832 ;	genPointerSet
                           3833 ;     genFarPointerSet
   0D1C 90s00rE8           3834 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0001)
   0D1F 74 4F              3835 	mov	a,#0x4F
   0D21 F0                 3836 	movx	@dptr,a
                           3837 ;	genPointerSet
                           3838 ;     genFarPointerSet
   0D22 90s00rE9           3839 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0002)
   0D25 74 4F              3840 	mov	a,#0x4F
   0D27 F0                 3841 	movx	@dptr,a
                           3842 ;	genPointerSet
                           3843 ;     genFarPointerSet
   0D28 90s00rEA           3844 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0003)
   0D2B 74 20              3845 	mov	a,#0x20
   0D2D F0                 3846 	movx	@dptr,a
                           3847 ;	genPointerSet
                           3848 ;     genFarPointerSet
   0D2E 90s00rEB           3849 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0004)
   0D31 74 45              3850 	mov	a,#0x45
   0D33 F0                 3851 	movx	@dptr,a
                           3852 ;	genPointerSet
                           3853 ;     genFarPointerSet
   0D34 90s00rEC           3854 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0005)
   0D37 74 41              3855 	mov	a,#0x41
   0D39 F0                 3856 	movx	@dptr,a
                           3857 ;	genPointerSet
                           3858 ;     genFarPointerSet
   0D3A 90s00rED           3859 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0006)
   0D3D 74 53              3860 	mov	a,#0x53
   0D3F F0                 3861 	movx	@dptr,a
                           3862 ;	genPointerSet
                           3863 ;     genFarPointerSet
   0D40 90s00rEE           3864 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0007)
   0D43 74 59              3865 	mov	a,#0x59
   0D45 F0                 3866 	movx	@dptr,a
                           3867 ;	genPointerSet
                           3868 ;     genFarPointerSet
   0D46 90s00rEF           3869 	mov	dptr,#(_difficulty_menu_easy_1_1 + 0x0008)
                           3870 ;	Peephole 181	changed mov to clr
   0D49 E4                 3871 	clr	a
   0D4A F0                 3872 	movx	@dptr,a
                           3873 ;	lcd.c:438: unsigned char medium[] = {"TOO MEDIUM"};
                           3874 ;	genPointerSet
                           3875 ;     genFarPointerSet
   0D4B 90s00rF0           3876 	mov	dptr,#_difficulty_menu_medium_1_1
   0D4E 74 54              3877 	mov	a,#0x54
   0D50 F0                 3878 	movx	@dptr,a
                           3879 ;	genPointerSet
                           3880 ;     genFarPointerSet
   0D51 90s00rF1           3881 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0001)
   0D54 74 4F              3882 	mov	a,#0x4F
   0D56 F0                 3883 	movx	@dptr,a
                           3884 ;	genPointerSet
                           3885 ;     genFarPointerSet
   0D57 90s00rF2           3886 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0002)
   0D5A 74 4F              3887 	mov	a,#0x4F
   0D5C F0                 3888 	movx	@dptr,a
                           3889 ;	genPointerSet
                           3890 ;     genFarPointerSet
   0D5D 90s00rF3           3891 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0003)
   0D60 74 20              3892 	mov	a,#0x20
   0D62 F0                 3893 	movx	@dptr,a
                           3894 ;	genPointerSet
                           3895 ;     genFarPointerSet
   0D63 90s00rF4           3896 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0004)
   0D66 74 4D              3897 	mov	a,#0x4D
   0D68 F0                 3898 	movx	@dptr,a
                           3899 ;	genPointerSet
                           3900 ;     genFarPointerSet
   0D69 90s00rF5           3901 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0005)
   0D6C 74 45              3902 	mov	a,#0x45
   0D6E F0                 3903 	movx	@dptr,a
                           3904 ;	genPointerSet
                           3905 ;     genFarPointerSet
   0D6F 90s00rF6           3906 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0006)
   0D72 74 44              3907 	mov	a,#0x44
   0D74 F0                 3908 	movx	@dptr,a
                           3909 ;	genPointerSet
                           3910 ;     genFarPointerSet
   0D75 90s00rF7           3911 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0007)
   0D78 74 49              3912 	mov	a,#0x49
   0D7A F0                 3913 	movx	@dptr,a
                           3914 ;	genPointerSet
                           3915 ;     genFarPointerSet
   0D7B 90s00rF8           3916 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0008)
   0D7E 74 55              3917 	mov	a,#0x55
   0D80 F0                 3918 	movx	@dptr,a
                           3919 ;	genPointerSet
                           3920 ;     genFarPointerSet
   0D81 90s00rF9           3921 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x0009)
   0D84 74 4D              3922 	mov	a,#0x4D
   0D86 F0                 3923 	movx	@dptr,a
                           3924 ;	genPointerSet
                           3925 ;     genFarPointerSet
   0D87 90s00rFA           3926 	mov	dptr,#(_difficulty_menu_medium_1_1 + 0x000a)
                           3927 ;	Peephole 181	changed mov to clr
   0D8A E4                 3928 	clr	a
   0D8B F0                 3929 	movx	@dptr,a
                           3930 ;	lcd.c:439: unsigned char smash_cat[] = {"SMASHING CAT"};
                           3931 ;	genPointerSet
                           3932 ;     genFarPointerSet
   0D8C 90s00rFB           3933 	mov	dptr,#_difficulty_menu_smash_cat_1_1
   0D8F 74 53              3934 	mov	a,#0x53
   0D91 F0                 3935 	movx	@dptr,a
                           3936 ;	genPointerSet
                           3937 ;     genFarPointerSet
   0D92 90s00rFC           3938 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0001)
   0D95 74 4D              3939 	mov	a,#0x4D
   0D97 F0                 3940 	movx	@dptr,a
                           3941 ;	genPointerSet
                           3942 ;     genFarPointerSet
   0D98 90s00rFD           3943 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0002)
   0D9B 74 41              3944 	mov	a,#0x41
   0D9D F0                 3945 	movx	@dptr,a
                           3946 ;	genPointerSet
                           3947 ;     genFarPointerSet
   0D9E 90s00rFE           3948 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0003)
   0DA1 74 53              3949 	mov	a,#0x53
   0DA3 F0                 3950 	movx	@dptr,a
                           3951 ;	genPointerSet
                           3952 ;     genFarPointerSet
   0DA4 90s00rFF           3953 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0004)
   0DA7 74 48              3954 	mov	a,#0x48
   0DA9 F0                 3955 	movx	@dptr,a
                           3956 ;	genPointerSet
                           3957 ;     genFarPointerSet
   0DAA 90s01r00           3958 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0005)
   0DAD 74 49              3959 	mov	a,#0x49
   0DAF F0                 3960 	movx	@dptr,a
                           3961 ;	genPointerSet
                           3962 ;     genFarPointerSet
   0DB0 90s01r01           3963 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0006)
   0DB3 74 4E              3964 	mov	a,#0x4E
   0DB5 F0                 3965 	movx	@dptr,a
                           3966 ;	genPointerSet
                           3967 ;     genFarPointerSet
   0DB6 90s01r02           3968 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0007)
   0DB9 74 47              3969 	mov	a,#0x47
   0DBB F0                 3970 	movx	@dptr,a
                           3971 ;	genPointerSet
                           3972 ;     genFarPointerSet
   0DBC 90s01r03           3973 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0008)
   0DBF 74 20              3974 	mov	a,#0x20
   0DC1 F0                 3975 	movx	@dptr,a
                           3976 ;	genPointerSet
                           3977 ;     genFarPointerSet
   0DC2 90s01r04           3978 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x0009)
   0DC5 74 43              3979 	mov	a,#0x43
   0DC7 F0                 3980 	movx	@dptr,a
                           3981 ;	genPointerSet
                           3982 ;     genFarPointerSet
   0DC8 90s01r05           3983 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x000a)
   0DCB 74 41              3984 	mov	a,#0x41
   0DCD F0                 3985 	movx	@dptr,a
                           3986 ;	genPointerSet
                           3987 ;     genFarPointerSet
   0DCE 90s01r06           3988 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x000b)
   0DD1 74 54              3989 	mov	a,#0x54
   0DD3 F0                 3990 	movx	@dptr,a
                           3991 ;	genPointerSet
                           3992 ;     genFarPointerSet
   0DD4 90s01r07           3993 	mov	dptr,#(_difficulty_menu_smash_cat_1_1 + 0x000c)
                           3994 ;	Peephole 181	changed mov to clr
   0DD7 E4                 3995 	clr	a
   0DD8 F0                 3996 	movx	@dptr,a
                           3997 ;	lcd.c:440: unsigned char heli_tilt[] = {"HELI_TILT"};
                           3998 ;	genPointerSet
                           3999 ;     genFarPointerSet
   0DD9 90s01r08           4000 	mov	dptr,#_difficulty_menu_heli_tilt_1_1
   0DDC 74 48              4001 	mov	a,#0x48
   0DDE F0                 4002 	movx	@dptr,a
                           4003 ;	genPointerSet
                           4004 ;     genFarPointerSet
   0DDF 90s01r09           4005 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0001)
   0DE2 74 45              4006 	mov	a,#0x45
   0DE4 F0                 4007 	movx	@dptr,a
                           4008 ;	genPointerSet
                           4009 ;     genFarPointerSet
   0DE5 90s01r0A           4010 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0002)
   0DE8 74 4C              4011 	mov	a,#0x4C
   0DEA F0                 4012 	movx	@dptr,a
                           4013 ;	genPointerSet
                           4014 ;     genFarPointerSet
   0DEB 90s01r0B           4015 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0003)
   0DEE 74 49              4016 	mov	a,#0x49
   0DF0 F0                 4017 	movx	@dptr,a
                           4018 ;	genPointerSet
                           4019 ;     genFarPointerSet
   0DF1 90s01r0C           4020 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0004)
   0DF4 74 5F              4021 	mov	a,#0x5F
   0DF6 F0                 4022 	movx	@dptr,a
                           4023 ;	genPointerSet
                           4024 ;     genFarPointerSet
   0DF7 90s01r0D           4025 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0005)
   0DFA 74 54              4026 	mov	a,#0x54
   0DFC F0                 4027 	movx	@dptr,a
                           4028 ;	genPointerSet
                           4029 ;     genFarPointerSet
   0DFD 90s01r0E           4030 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0006)
   0E00 74 49              4031 	mov	a,#0x49
   0E02 F0                 4032 	movx	@dptr,a
                           4033 ;	genPointerSet
                           4034 ;     genFarPointerSet
   0E03 90s01r0F           4035 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0007)
   0E06 74 4C              4036 	mov	a,#0x4C
   0E08 F0                 4037 	movx	@dptr,a
                           4038 ;	genPointerSet
                           4039 ;     genFarPointerSet
   0E09 90s01r10           4040 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0008)
   0E0C 74 54              4041 	mov	a,#0x54
   0E0E F0                 4042 	movx	@dptr,a
                           4043 ;	genPointerSet
                           4044 ;     genFarPointerSet
   0E0F 90s01r11           4045 	mov	dptr,#(_difficulty_menu_heli_tilt_1_1 + 0x0009)
                           4046 ;	Peephole 181	changed mov to clr
   0E12 E4                 4047 	clr	a
   0E13 F0                 4048 	movx	@dptr,a
                           4049 ;	lcd.c:441: int x = 0, y = 0, choice_page = 2, y_count = 0;
                           4050 ;	genAssign
   0E14 90s01r12           4051 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0E17 74 02              4052 	mov	a,#0x02
   0E19 F0                 4053 	movx	@dptr,a
   0E1A E4                 4054 	clr	a
   0E1B A3                 4055 	inc	dptr
   0E1C F0                 4056 	movx	@dptr,a
                           4057 ;	lcd.c:443: clear_game_screen();
                           4058 ;	genCall
   0E1D 12s02r78           4059 	lcall	_clear_game_screen
                           4060 ;	lcd.c:446: draw_banner();
                           4061 ;	genCall
   0E20 12s10r08           4062 	lcall	_draw_banner
                           4063 ;	lcd.c:449: GLCD_WriteString(heli_tilt,0,40,INVERT);
                           4064 ;	genAssign
   0E23 90s01r84           4065 	mov	dptr,#_GLCD_WriteString_PARM_2
                           4066 ;	Peephole 181	changed mov to clr
   0E26 E4                 4067 	clr	a
   0E27 F0                 4068 	movx	@dptr,a
                           4069 ;	genAssign
   0E28 90s01r85           4070 	mov	dptr,#_GLCD_WriteString_PARM_3
   0E2B 74 28              4071 	mov	a,#0x28
   0E2D F0                 4072 	movx	@dptr,a
                           4073 ;	genAssign
   0E2E 90s01r86           4074 	mov	dptr,#_GLCD_WriteString_PARM_4
   0E31 74 01              4075 	mov	a,#0x01
   0E33 F0                 4076 	movx	@dptr,a
                           4077 ;	genCall
                           4078 ;	Peephole 182.a	used 16 bit load of DPTR
   0E34 90s01r08           4079 	mov	dptr,#_difficulty_menu_heli_tilt_1_1
   0E37 75 F0 00           4080 	mov	b,#0x00
   0E3A 12s19rFD           4081 	lcall	_GLCD_WriteString
                           4082 ;	lcd.c:450: GLCD_WriteString(heli_tilt,7,40,INVERT);
                           4083 ;	genAssign
   0E3D 90s01r84           4084 	mov	dptr,#_GLCD_WriteString_PARM_2
   0E40 74 07              4085 	mov	a,#0x07
   0E42 F0                 4086 	movx	@dptr,a
                           4087 ;	genAssign
   0E43 90s01r85           4088 	mov	dptr,#_GLCD_WriteString_PARM_3
   0E46 74 28              4089 	mov	a,#0x28
   0E48 F0                 4090 	movx	@dptr,a
                           4091 ;	genAssign
   0E49 90s01r86           4092 	mov	dptr,#_GLCD_WriteString_PARM_4
   0E4C 74 01              4093 	mov	a,#0x01
   0E4E F0                 4094 	movx	@dptr,a
                           4095 ;	genCall
                           4096 ;	Peephole 182.a	used 16 bit load of DPTR
   0E4F 90s01r08           4097 	mov	dptr,#_difficulty_menu_heli_tilt_1_1
   0E52 75 F0 00           4098 	mov	b,#0x00
   0E55 12s19rFD           4099 	lcall	_GLCD_WriteString
                           4100 ;	lcd.c:454: GLCD_WriteHeli(HELI,choice_page,15);
                           4101 ;	genAssign
   0E58 90s01r7F           4102 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   0E5B 74 02              4103 	mov	a,#0x02
   0E5D F0                 4104 	movx	@dptr,a
                           4105 ;	genAssign
   0E5E 90s01r80           4106 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   0E61 74 0F              4107 	mov	a,#0x0F
   0E63 F0                 4108 	movx	@dptr,a
                           4109 ;	genCall
   0E64 75 82 80           4110 	mov	dpl,#0x80
   0E67 12s18rCF           4111 	lcall	_GLCD_WriteHeli
                           4112 ;	lcd.c:455: GLCD_WriteString(easy,2,40,NORMAL);
                           4113 ;	genAssign
   0E6A 90s01r84           4114 	mov	dptr,#_GLCD_WriteString_PARM_2
   0E6D 74 02              4115 	mov	a,#0x02
   0E6F F0                 4116 	movx	@dptr,a
                           4117 ;	genAssign
   0E70 90s01r85           4118 	mov	dptr,#_GLCD_WriteString_PARM_3
   0E73 74 28              4119 	mov	a,#0x28
   0E75 F0                 4120 	movx	@dptr,a
                           4121 ;	genAssign
   0E76 90s01r86           4122 	mov	dptr,#_GLCD_WriteString_PARM_4
                           4123 ;	Peephole 181	changed mov to clr
   0E79 E4                 4124 	clr	a
   0E7A F0                 4125 	movx	@dptr,a
                           4126 ;	genCall
                           4127 ;	Peephole 182.a	used 16 bit load of DPTR
   0E7B 90s00rE7           4128 	mov	dptr,#_difficulty_menu_easy_1_1
   0E7E 75 F0 00           4129 	mov	b,#0x00
   0E81 12s19rFD           4130 	lcall	_GLCD_WriteString
                           4131 ;	lcd.c:456: GLCD_WriteString(medium,3,35,NORMAL);
                           4132 ;	genAssign
   0E84 90s01r84           4133 	mov	dptr,#_GLCD_WriteString_PARM_2
   0E87 74 03              4134 	mov	a,#0x03
   0E89 F0                 4135 	movx	@dptr,a
                           4136 ;	genAssign
   0E8A 90s01r85           4137 	mov	dptr,#_GLCD_WriteString_PARM_3
   0E8D 74 23              4138 	mov	a,#0x23
   0E8F F0                 4139 	movx	@dptr,a
                           4140 ;	genAssign
   0E90 90s01r86           4141 	mov	dptr,#_GLCD_WriteString_PARM_4
                           4142 ;	Peephole 181	changed mov to clr
   0E93 E4                 4143 	clr	a
   0E94 F0                 4144 	movx	@dptr,a
                           4145 ;	genCall
                           4146 ;	Peephole 182.a	used 16 bit load of DPTR
   0E95 90s00rF0           4147 	mov	dptr,#_difficulty_menu_medium_1_1
   0E98 75 F0 00           4148 	mov	b,#0x00
   0E9B 12s19rFD           4149 	lcall	_GLCD_WriteString
                           4150 ;	lcd.c:457: GLCD_WriteString(smash_cat,4,30,NORMAL);
                           4151 ;	genAssign
   0E9E 90s01r84           4152 	mov	dptr,#_GLCD_WriteString_PARM_2
   0EA1 74 04              4153 	mov	a,#0x04
   0EA3 F0                 4154 	movx	@dptr,a
                           4155 ;	genAssign
   0EA4 90s01r85           4156 	mov	dptr,#_GLCD_WriteString_PARM_3
   0EA7 74 1E              4157 	mov	a,#0x1E
   0EA9 F0                 4158 	movx	@dptr,a
                           4159 ;	genAssign
   0EAA 90s01r86           4160 	mov	dptr,#_GLCD_WriteString_PARM_4
                           4161 ;	Peephole 181	changed mov to clr
   0EAD E4                 4162 	clr	a
   0EAE F0                 4163 	movx	@dptr,a
                           4164 ;	genCall
                           4165 ;	Peephole 182.a	used 16 bit load of DPTR
   0EAF 90s00rFB           4166 	mov	dptr,#_difficulty_menu_smash_cat_1_1
   0EB2 75 F0 00           4167 	mov	b,#0x00
   0EB5 12s19rFD           4168 	lcall	_GLCD_WriteString
                           4169 ;	lcd.c:458: GLCD_WriteHeli(HELI,4,78);
                           4170 ;	genAssign
   0EB8 90s01r7F           4171 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   0EBB 74 04              4172 	mov	a,#0x04
   0EBD F0                 4173 	movx	@dptr,a
                           4174 ;	genAssign
   0EBE 90s01r80           4175 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   0EC1 74 4E              4176 	mov	a,#0x4E
   0EC3 F0                 4177 	movx	@dptr,a
                           4178 ;	genCall
   0EC4 75 82 80           4179 	mov	dpl,#0x80
   0EC7 12s18rCF           4180 	lcall	_GLCD_WriteHeli
                           4181 ;	lcd.c:461: delay_ms(4000);
                           4182 ;	genCall
                           4183 ;	Peephole 182.b	used 16 bit load of dptr
   0ECA 90 0F A0           4184 	mov	dptr,#0x0FA0
   0ECD 12s1Cr7C           4185 	lcall	_delay_ms
                           4186 ;	lcd.c:463: while(1)
   0ED0                    4187 00113$:
                           4188 ;	lcd.c:466: y = ADXL345_read_y();
                           4189 ;	genCall
   0ED0 12s00r00           4190 	lcall	_ADXL345_read_y
   0ED3 AA 82              4191 	mov	r2,dpl
   0ED5 AB 83              4192 	mov	r3,dph
                           4193 ;	lcd.c:467: x = ADXL345_read_x();
                           4194 ;	genCall
   0ED7 C0 02              4195 	push	ar2
   0ED9 C0 03              4196 	push	ar3
   0EDB 12s00r00           4197 	lcall	_ADXL345_read_x
   0EDE AC 82              4198 	mov	r4,dpl
   0EE0 AD 83              4199 	mov	r5,dph
   0EE2 D0 03              4200 	pop	ar3
   0EE4 D0 02              4201 	pop	ar2
                           4202 ;	lcd.c:469: if(y <= RIGHT_UP_MIN)
                           4203 ;	genCmpGt
                           4204 ;	genCmp
   0EE6 C3                 4205 	clr	c
   0EE7 74 6A              4206 	mov	a,#0x6A
   0EE9 9A                 4207 	subb	a,r2
                           4208 ;	Peephole 159	avoided xrl during execution
   0EEA 74 7F              4209 	mov	a,#(0xFF ^ 0x80)
   0EEC 8B F0              4210 	mov	b,r3
   0EEE 63 F0 80           4211 	xrl	b,#0x80
   0EF1 95 F0              4212 	subb	a,b
                           4213 ;	genIfxJump
                           4214 ;	Peephole 112.b	changed ljmp to sjmp
                           4215 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0EF3 40 59              4216 	jc	00108$
                           4217 ;	Peephole 300	removed redundant label 00123$
                           4218 ;	lcd.c:472: GLCD_WriteChar(' ', choice_page, 15,NORMAL);
                           4219 ;	genAssign
   0EF5 90s01r12           4220 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0EF8 E0                 4221 	movx	a,@dptr
   0EF9 FE                 4222 	mov	r6,a
   0EFA A3                 4223 	inc	dptr
   0EFB E0                 4224 	movx	a,@dptr
   0EFC FF                 4225 	mov	r7,a
                           4226 ;	genCast
   0EFD 90s01r70           4227 	mov	dptr,#_GLCD_WriteChar_PARM_2
   0F00 EE                 4228 	mov	a,r6
   0F01 F0                 4229 	movx	@dptr,a
                           4230 ;	genAssign
   0F02 90s01r71           4231 	mov	dptr,#_GLCD_WriteChar_PARM_3
   0F05 74 0F              4232 	mov	a,#0x0F
   0F07 F0                 4233 	movx	@dptr,a
                           4234 ;	genAssign
   0F08 90s01r72           4235 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           4236 ;	Peephole 181	changed mov to clr
   0F0B E4                 4237 	clr	a
   0F0C F0                 4238 	movx	@dptr,a
                           4239 ;	genCall
   0F0D 75 82 20           4240 	mov	dpl,#0x20
   0F10 C0 04              4241 	push	ar4
   0F12 C0 05              4242 	push	ar5
   0F14 C0 06              4243 	push	ar6
   0F16 C0 07              4244 	push	ar7
   0F18 12s15r3B           4245 	lcall	_GLCD_WriteChar
   0F1B D0 07              4246 	pop	ar7
   0F1D D0 06              4247 	pop	ar6
   0F1F D0 05              4248 	pop	ar5
   0F21 D0 04              4249 	pop	ar4
                           4250 ;	lcd.c:474: if(--choice_page < TOP_OPT)
                           4251 ;	genMinus
                           4252 ;	genMinusDec
   0F23 1E                 4253 	dec	r6
   0F24 BE FF 01           4254 	cjne	r6,#0xff,00124$
   0F27 1F                 4255 	dec	r7
   0F28                    4256 00124$:
                           4257 ;	genAssign
   0F28 90s01r12           4258 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0F2B EE                 4259 	mov	a,r6
   0F2C F0                 4260 	movx	@dptr,a
   0F2D A3                 4261 	inc	dptr
   0F2E EF                 4262 	mov	a,r7
   0F2F F0                 4263 	movx	@dptr,a
                           4264 ;	genAssign
   0F30 90s01r12           4265 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0F33 E0                 4266 	movx	a,@dptr
   0F34 FE                 4267 	mov	r6,a
   0F35 A3                 4268 	inc	dptr
   0F36 E0                 4269 	movx	a,@dptr
   0F37 FF                 4270 	mov	r7,a
                           4271 ;	genCmpLt
                           4272 ;	genCmp
   0F38 C3                 4273 	clr	c
   0F39 EE                 4274 	mov	a,r6
   0F3A 94 02              4275 	subb	a,#0x02
   0F3C EF                 4276 	mov	a,r7
   0F3D 64 80              4277 	xrl	a,#0x80
   0F3F 94 80              4278 	subb	a,#0x80
                           4279 ;	genIfxJump
                           4280 ;	Peephole 112.b	changed ljmp to sjmp
                           4281 ;	Peephole 160.b	removed sjmp by inverse jump logic
   0F41 50 6F              4282 	jnc	00109$
                           4283 ;	Peephole 300	removed redundant label 00125$
                           4284 ;	lcd.c:475: choice_page = TOP_OPT;
                           4285 ;	genAssign
   0F43 90s01r12           4286 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0F46 74 02              4287 	mov	a,#0x02
   0F48 F0                 4288 	movx	@dptr,a
   0F49 E4                 4289 	clr	a
   0F4A A3                 4290 	inc	dptr
   0F4B F0                 4291 	movx	@dptr,a
                           4292 ;	Peephole 112.b	changed ljmp to sjmp
   0F4C 80 64              4293 	sjmp	00109$
   0F4E                    4294 00108$:
                           4295 ;	lcd.c:477: else if( y >= LEFT_DOWN_MIN)
                           4296 ;	genCmpLt
                           4297 ;	genCmp
   0F4E C3                 4298 	clr	c
   0F4F EA                 4299 	mov	a,r2
   0F50 94 96              4300 	subb	a,#0x96
   0F52 EB                 4301 	mov	a,r3
   0F53 64 80              4302 	xrl	a,#0x80
   0F55 94 80              4303 	subb	a,#0x80
                           4304 ;	genIfxJump
                           4305 ;	Peephole 112.b	changed ljmp to sjmp
                           4306 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0F57 40 59              4307 	jc	00109$
                           4308 ;	Peephole 300	removed redundant label 00126$
                           4309 ;	lcd.c:480: GLCD_WriteChar(' ', choice_page, 15,NORMAL);
                           4310 ;	genAssign
   0F59 90s01r12           4311 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0F5C E0                 4312 	movx	a,@dptr
   0F5D FA                 4313 	mov	r2,a
   0F5E A3                 4314 	inc	dptr
   0F5F E0                 4315 	movx	a,@dptr
   0F60 FB                 4316 	mov	r3,a
                           4317 ;	genCast
   0F61 90s01r70           4318 	mov	dptr,#_GLCD_WriteChar_PARM_2
   0F64 EA                 4319 	mov	a,r2
   0F65 F0                 4320 	movx	@dptr,a
                           4321 ;	genAssign
   0F66 90s01r71           4322 	mov	dptr,#_GLCD_WriteChar_PARM_3
   0F69 74 0F              4323 	mov	a,#0x0F
   0F6B F0                 4324 	movx	@dptr,a
                           4325 ;	genAssign
   0F6C 90s01r72           4326 	mov	dptr,#_GLCD_WriteChar_PARM_4
                           4327 ;	Peephole 181	changed mov to clr
   0F6F E4                 4328 	clr	a
   0F70 F0                 4329 	movx	@dptr,a
                           4330 ;	genCall
   0F71 75 82 20           4331 	mov	dpl,#0x20
   0F74 C0 02              4332 	push	ar2
   0F76 C0 03              4333 	push	ar3
   0F78 C0 04              4334 	push	ar4
   0F7A C0 05              4335 	push	ar5
   0F7C 12s15r3B           4336 	lcall	_GLCD_WriteChar
   0F7F D0 05              4337 	pop	ar5
   0F81 D0 04              4338 	pop	ar4
   0F83 D0 03              4339 	pop	ar3
   0F85 D0 02              4340 	pop	ar2
                           4341 ;	lcd.c:482: if(++choice_page > BOTTOM_OPT - 1)
                           4342 ;	genPlus
   0F87 90s01r12           4343 	mov	dptr,#_difficulty_menu_choice_page_1_1
                           4344 ;     genPlusIncr
   0F8A 74 01              4345 	mov	a,#0x01
                           4346 ;	Peephole 236.a	used r2 instead of ar2
   0F8C 2A                 4347 	add	a,r2
   0F8D F0                 4348 	movx	@dptr,a
                           4349 ;	Peephole 181	changed mov to clr
   0F8E E4                 4350 	clr	a
                           4351 ;	Peephole 236.b	used r3 instead of ar3
   0F8F 3B                 4352 	addc	a,r3
   0F90 A3                 4353 	inc	dptr
   0F91 F0                 4354 	movx	@dptr,a
                           4355 ;	genAssign
   0F92 90s01r12           4356 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0F95 E0                 4357 	movx	a,@dptr
   0F96 FA                 4358 	mov	r2,a
   0F97 A3                 4359 	inc	dptr
   0F98 E0                 4360 	movx	a,@dptr
   0F99 FB                 4361 	mov	r3,a
                           4362 ;	genCmpGt
                           4363 ;	genCmp
   0F9A C3                 4364 	clr	c
   0F9B 74 04              4365 	mov	a,#0x04
   0F9D 9A                 4366 	subb	a,r2
                           4367 ;	Peephole 159	avoided xrl during execution
   0F9E 74 80              4368 	mov	a,#(0x00 ^ 0x80)
   0FA0 8B F0              4369 	mov	b,r3
   0FA2 63 F0 80           4370 	xrl	b,#0x80
   0FA5 95 F0              4371 	subb	a,b
                           4372 ;	genIfxJump
                           4373 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0FA7 50 09              4374 	jnc	00109$
                           4375 ;	Peephole 300	removed redundant label 00127$
                           4376 ;	lcd.c:483: choice_page = BOTTOM_OPT - 1;
                           4377 ;	genAssign
   0FA9 90s01r12           4378 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0FAC 74 04              4379 	mov	a,#0x04
   0FAE F0                 4380 	movx	@dptr,a
   0FAF E4                 4381 	clr	a
   0FB0 A3                 4382 	inc	dptr
   0FB1 F0                 4383 	movx	@dptr,a
   0FB2                    4384 00109$:
                           4385 ;	lcd.c:486: GLCD_WriteHeli(HELI,choice_page,15);
                           4386 ;	genAssign
   0FB2 90s01r12           4387 	mov	dptr,#_difficulty_menu_choice_page_1_1
   0FB5 E0                 4388 	movx	a,@dptr
   0FB6 FA                 4389 	mov	r2,a
   0FB7 A3                 4390 	inc	dptr
   0FB8 E0                 4391 	movx	a,@dptr
   0FB9 FB                 4392 	mov	r3,a
                           4393 ;	genCast
   0FBA 90s01r7F           4394 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   0FBD EA                 4395 	mov	a,r2
   0FBE F0                 4396 	movx	@dptr,a
                           4397 ;	genAssign
   0FBF 90s01r80           4398 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   0FC2 74 0F              4399 	mov	a,#0x0F
   0FC4 F0                 4400 	movx	@dptr,a
                           4401 ;	genCall
   0FC5 75 82 80           4402 	mov	dpl,#0x80
   0FC8 C0 02              4403 	push	ar2
   0FCA C0 03              4404 	push	ar3
   0FCC C0 04              4405 	push	ar4
   0FCE C0 05              4406 	push	ar5
   0FD0 12s18rCF           4407 	lcall	_GLCD_WriteHeli
   0FD3 D0 05              4408 	pop	ar5
   0FD5 D0 04              4409 	pop	ar4
   0FD7 D0 03              4410 	pop	ar3
   0FD9 D0 02              4411 	pop	ar2
                           4412 ;	lcd.c:488: delay_ms(750);
                           4413 ;	genCall
                           4414 ;	Peephole 182.b	used 16 bit load of dptr
   0FDB 90 02 EE           4415 	mov	dptr,#0x02EE
   0FDE C0 02              4416 	push	ar2
   0FE0 C0 03              4417 	push	ar3
   0FE2 C0 04              4418 	push	ar4
   0FE4 C0 05              4419 	push	ar5
   0FE6 12s1Cr7C           4420 	lcall	_delay_ms
   0FE9 D0 05              4421 	pop	ar5
   0FEB D0 04              4422 	pop	ar4
   0FED D0 03              4423 	pop	ar3
   0FEF D0 02              4424 	pop	ar2
                           4425 ;	lcd.c:490: if(x <= RIGHT_UP_MIN)
                           4426 ;	genCmpGt
                           4427 ;	genCmp
   0FF1 C3                 4428 	clr	c
   0FF2 74 6A              4429 	mov	a,#0x6A
   0FF4 9C                 4430 	subb	a,r4
                           4431 ;	Peephole 159	avoided xrl during execution
   0FF5 74 7F              4432 	mov	a,#(0xFF ^ 0x80)
   0FF7 8D F0              4433 	mov	b,r5
   0FF9 63 F0 80           4434 	xrl	b,#0x80
   0FFC 95 F0              4435 	subb	a,b
                           4436 ;	genIfxJump
   0FFE 50 03              4437 	jnc	00128$
   1000 02s0ErD0           4438 	ljmp	00113$
   1003                    4439 00128$:
                           4440 ;	lcd.c:491: return choice_page - 2;
                           4441 ;	genCast
                           4442 ;	genMinus
                           4443 ;	genMinusDec
   1003 1A                 4444 	dec	r2
   1004 1A                 4445 	dec	r2
                           4446 ;	genRet
   1005 8A 82              4447 	mov	dpl,r2
                           4448 ;	Peephole 300	removed redundant label 00115$
   1007 22                 4449 	ret
                           4450 ;------------------------------------------------------------
                           4451 ;Allocation info for local variables in function 'draw_banner'
                           4452 ;------------------------------------------------------------
                           4453 ;x                         Allocated with name '_draw_banner_x_1_1'
                           4454 ;y                         Allocated with name '_draw_banner_y_1_1'
                           4455 ;------------------------------------------------------------
                           4456 ;	lcd.c:498: void draw_banner()
                           4457 ;	-----------------------------------------
                           4458 ;	 function draw_banner
                           4459 ;	-----------------------------------------
   1008                    4460 _draw_banner:
                           4461 ;	lcd.c:503: for(x = 0; x < 1; x++)
                           4462 ;	genAssign
   1008 7A 00              4463 	mov	r2,#0x00
   100A 7B 00              4464 	mov	r3,#0x00
   100C                    4465 00104$:
                           4466 ;	genCmpLt
                           4467 ;	genCmp
   100C C3                 4468 	clr	c
   100D EA                 4469 	mov	a,r2
   100E 94 01              4470 	subb	a,#0x01
   1010 EB                 4471 	mov	a,r3
   1011 64 80              4472 	xrl	a,#0x80
   1013 94 80              4473 	subb	a,#0x80
                           4474 ;	genIfxJump
                           4475 ;	Peephole 108.a	removed ljmp by inverse jump logic
   1015 50 70              4476 	jnc	00107$
                           4477 ;	Peephole 300	removed redundant label 00155$
                           4478 ;	lcd.c:506: lcd_write_wait(0, LCD_INST, LCD_YADDR(0));
                           4479 ;	genAssign
   1017 90s00r08           4480 	mov	dptr,#_lcd_write_wait_PARM_2
                           4481 ;	Peephole 181	changed mov to clr
   101A E4                 4482 	clr	a
   101B F0                 4483 	movx	@dptr,a
                           4484 ;	genAssign
   101C 90s00r09           4485 	mov	dptr,#_lcd_write_wait_PARM_3
   101F 74 40              4486 	mov	a,#0x40
   1021 F0                 4487 	movx	@dptr,a
                           4488 ;	genCall
   1022 75 82 00           4489 	mov	dpl,#0x00
   1025 C0 02              4490 	push	ar2
   1027 C0 03              4491 	push	ar3
   1029 12s00rEF           4492 	lcall	_lcd_write_wait
   102C D0 03              4493 	pop	ar3
   102E D0 02              4494 	pop	ar2
                           4495 ;	lcd.c:507: lcd_write_wait(0, LCD_INST, LCD_XADDR(x));
                           4496 ;	genAnd
   1030 74 07              4497 	mov	a,#0x07
   1032 5A                 4498 	anl	a,r2
   1033 FC                 4499 	mov	r4,a
   1034 7D 00              4500 	mov	r5,#0x00
                           4501 ;	genOr
   1036 43 04 B8           4502 	orl	ar4,#0xB8
                           4503 ;	genCast
                           4504 ;	genAssign
   1039 90s00r08           4505 	mov	dptr,#_lcd_write_wait_PARM_2
                           4506 ;	Peephole 181	changed mov to clr
   103C E4                 4507 	clr	a
   103D F0                 4508 	movx	@dptr,a
                           4509 ;	genAssign
   103E 90s00r09           4510 	mov	dptr,#_lcd_write_wait_PARM_3
   1041 EC                 4511 	mov	a,r4
   1042 F0                 4512 	movx	@dptr,a
                           4513 ;	genCall
   1043 75 82 00           4514 	mov	dpl,#0x00
   1046 C0 02              4515 	push	ar2
   1048 C0 03              4516 	push	ar3
   104A 12s00rEF           4517 	lcall	_lcd_write_wait
   104D D0 03              4518 	pop	ar3
   104F D0 02              4519 	pop	ar2
                           4520 ;	lcd.c:509: for(y = 0; y < 64; ++y)
                           4521 ;	genAssign
   1051 7C 40              4522 	mov	r4,#0x40
   1053 7D 00              4523 	mov	r5,#0x00
   1055                    4524 00103$:
                           4525 ;	lcd.c:510: lcd_write_wait(0, LCD_DATA, 0xFF);
                           4526 ;	genAssign
   1055 90s00r08           4527 	mov	dptr,#_lcd_write_wait_PARM_2
   1058 74 01              4528 	mov	a,#0x01
   105A F0                 4529 	movx	@dptr,a
                           4530 ;	genAssign
   105B 90s00r09           4531 	mov	dptr,#_lcd_write_wait_PARM_3
   105E 74 FF              4532 	mov	a,#0xFF
   1060 F0                 4533 	movx	@dptr,a
                           4534 ;	genCall
   1061 75 82 00           4535 	mov	dpl,#0x00
   1064 C0 02              4536 	push	ar2
   1066 C0 03              4537 	push	ar3
   1068 C0 04              4538 	push	ar4
   106A C0 05              4539 	push	ar5
   106C 12s00rEF           4540 	lcall	_lcd_write_wait
   106F D0 05              4541 	pop	ar5
   1071 D0 04              4542 	pop	ar4
   1073 D0 03              4543 	pop	ar3
   1075 D0 02              4544 	pop	ar2
                           4545 ;	genMinus
                           4546 ;	genMinusDec
   1077 1C                 4547 	dec	r4
   1078 BC FF 01           4548 	cjne	r4,#0xff,00156$
   107B 1D                 4549 	dec	r5
   107C                    4550 00156$:
                           4551 ;	lcd.c:509: for(y = 0; y < 64; ++y)
                           4552 ;	genIfx
   107C EC                 4553 	mov	a,r4
   107D 4D                 4554 	orl	a,r5
                           4555 ;	genIfxJump
                           4556 ;	Peephole 108.b	removed ljmp by inverse jump logic
   107E 70 D5              4557 	jnz	00103$
                           4558 ;	Peephole 300	removed redundant label 00157$
                           4559 ;	lcd.c:503: for(x = 0; x < 1; x++)
                           4560 ;	genPlus
                           4561 ;     genPlusIncr
   1080 0A                 4562 	inc	r2
                           4563 ;	Peephole 112.b	changed ljmp to sjmp
                           4564 ;	Peephole 243	avoided branch to sjmp
   1081 BA 00 88           4565 	cjne	r2,#0x00,00104$
   1084 0B                 4566 	inc	r3
                           4567 ;	Peephole 300	removed redundant label 00158$
   1085 80 85              4568 	sjmp	00104$
   1087                    4569 00107$:
                           4570 ;	lcd.c:514: for(x = 7; x < 8; x++)
                           4571 ;	genAssign
   1087 7A 07              4572 	mov	r2,#0x07
   1089 7B 00              4573 	mov	r3,#0x00
   108B                    4574 00111$:
                           4575 ;	genCmpLt
                           4576 ;	genCmp
   108B C3                 4577 	clr	c
   108C EA                 4578 	mov	a,r2
   108D 94 08              4579 	subb	a,#0x08
   108F EB                 4580 	mov	a,r3
   1090 64 80              4581 	xrl	a,#0x80
   1092 94 80              4582 	subb	a,#0x80
                           4583 ;	genIfxJump
                           4584 ;	Peephole 108.a	removed ljmp by inverse jump logic
   1094 50 70              4585 	jnc	00114$
                           4586 ;	Peephole 300	removed redundant label 00159$
                           4587 ;	lcd.c:517: lcd_write_wait(0, LCD_INST, LCD_YADDR(0));
                           4588 ;	genAssign
   1096 90s00r08           4589 	mov	dptr,#_lcd_write_wait_PARM_2
                           4590 ;	Peephole 181	changed mov to clr
   1099 E4                 4591 	clr	a
   109A F0                 4592 	movx	@dptr,a
                           4593 ;	genAssign
   109B 90s00r09           4594 	mov	dptr,#_lcd_write_wait_PARM_3
   109E 74 40              4595 	mov	a,#0x40
   10A0 F0                 4596 	movx	@dptr,a
                           4597 ;	genCall
   10A1 75 82 00           4598 	mov	dpl,#0x00
   10A4 C0 02              4599 	push	ar2
   10A6 C0 03              4600 	push	ar3
   10A8 12s00rEF           4601 	lcall	_lcd_write_wait
   10AB D0 03              4602 	pop	ar3
   10AD D0 02              4603 	pop	ar2
                           4604 ;	lcd.c:518: lcd_write_wait(0, LCD_INST, LCD_XADDR(x));
                           4605 ;	genAnd
   10AF 74 07              4606 	mov	a,#0x07
   10B1 5A                 4607 	anl	a,r2
   10B2 FC                 4608 	mov	r4,a
   10B3 7D 00              4609 	mov	r5,#0x00
                           4610 ;	genOr
   10B5 43 04 B8           4611 	orl	ar4,#0xB8
                           4612 ;	genCast
                           4613 ;	genAssign
   10B8 90s00r08           4614 	mov	dptr,#_lcd_write_wait_PARM_2
                           4615 ;	Peephole 181	changed mov to clr
   10BB E4                 4616 	clr	a
   10BC F0                 4617 	movx	@dptr,a
                           4618 ;	genAssign
   10BD 90s00r09           4619 	mov	dptr,#_lcd_write_wait_PARM_3
   10C0 EC                 4620 	mov	a,r4
   10C1 F0                 4621 	movx	@dptr,a
                           4622 ;	genCall
   10C2 75 82 00           4623 	mov	dpl,#0x00
   10C5 C0 02              4624 	push	ar2
   10C7 C0 03              4625 	push	ar3
   10C9 12s00rEF           4626 	lcall	_lcd_write_wait
   10CC D0 03              4627 	pop	ar3
   10CE D0 02              4628 	pop	ar2
                           4629 ;	lcd.c:520: for(y = 0; y < 64; ++y)
                           4630 ;	genAssign
   10D0 7C 40              4631 	mov	r4,#0x40
   10D2 7D 00              4632 	mov	r5,#0x00
   10D4                    4633 00110$:
                           4634 ;	lcd.c:521: lcd_write_wait(0, LCD_DATA, 0xFF);
                           4635 ;	genAssign
   10D4 90s00r08           4636 	mov	dptr,#_lcd_write_wait_PARM_2
   10D7 74 01              4637 	mov	a,#0x01
   10D9 F0                 4638 	movx	@dptr,a
                           4639 ;	genAssign
   10DA 90s00r09           4640 	mov	dptr,#_lcd_write_wait_PARM_3
   10DD 74 FF              4641 	mov	a,#0xFF
   10DF F0                 4642 	movx	@dptr,a
                           4643 ;	genCall
   10E0 75 82 00           4644 	mov	dpl,#0x00
   10E3 C0 02              4645 	push	ar2
   10E5 C0 03              4646 	push	ar3
   10E7 C0 04              4647 	push	ar4
   10E9 C0 05              4648 	push	ar5
   10EB 12s00rEF           4649 	lcall	_lcd_write_wait
   10EE D0 05              4650 	pop	ar5
   10F0 D0 04              4651 	pop	ar4
   10F2 D0 03              4652 	pop	ar3
   10F4 D0 02              4653 	pop	ar2
                           4654 ;	genMinus
                           4655 ;	genMinusDec
   10F6 1C                 4656 	dec	r4
   10F7 BC FF 01           4657 	cjne	r4,#0xff,00160$
   10FA 1D                 4658 	dec	r5
   10FB                    4659 00160$:
                           4660 ;	lcd.c:520: for(y = 0; y < 64; ++y)
                           4661 ;	genIfx
   10FB EC                 4662 	mov	a,r4
   10FC 4D                 4663 	orl	a,r5
                           4664 ;	genIfxJump
                           4665 ;	Peephole 108.b	removed ljmp by inverse jump logic
   10FD 70 D5              4666 	jnz	00110$
                           4667 ;	Peephole 300	removed redundant label 00161$
                           4668 ;	lcd.c:514: for(x = 7; x < 8; x++)
                           4669 ;	genPlus
                           4670 ;     genPlusIncr
   10FF 0A                 4671 	inc	r2
                           4672 ;	Peephole 112.b	changed ljmp to sjmp
                           4673 ;	Peephole 243	avoided branch to sjmp
   1100 BA 00 88           4674 	cjne	r2,#0x00,00111$
   1103 0B                 4675 	inc	r3
                           4676 ;	Peephole 300	removed redundant label 00162$
   1104 80 85              4677 	sjmp	00111$
   1106                    4678 00114$:
                           4679 ;	lcd.c:525: for(x = 0; x < 1; x++)
                           4680 ;	genAssign
   1106 7A 00              4681 	mov	r2,#0x00
   1108 7B 00              4682 	mov	r3,#0x00
   110A                    4683 00118$:
                           4684 ;	genCmpLt
                           4685 ;	genCmp
   110A C3                 4686 	clr	c
   110B EA                 4687 	mov	a,r2
   110C 94 01              4688 	subb	a,#0x01
   110E EB                 4689 	mov	a,r3
   110F 64 80              4690 	xrl	a,#0x80
   1111 94 80              4691 	subb	a,#0x80
                           4692 ;	genIfxJump
                           4693 ;	Peephole 108.a	removed ljmp by inverse jump logic
   1113 50 70              4694 	jnc	00121$
                           4695 ;	Peephole 300	removed redundant label 00163$
                           4696 ;	lcd.c:528: lcd_write_wait(1, LCD_INST, LCD_YADDR(0));
                           4697 ;	genAssign
   1115 90s00r08           4698 	mov	dptr,#_lcd_write_wait_PARM_2
                           4699 ;	Peephole 181	changed mov to clr
   1118 E4                 4700 	clr	a
   1119 F0                 4701 	movx	@dptr,a
                           4702 ;	genAssign
   111A 90s00r09           4703 	mov	dptr,#_lcd_write_wait_PARM_3
   111D 74 40              4704 	mov	a,#0x40
   111F F0                 4705 	movx	@dptr,a
                           4706 ;	genCall
   1120 75 82 01           4707 	mov	dpl,#0x01
   1123 C0 02              4708 	push	ar2
   1125 C0 03              4709 	push	ar3
   1127 12s00rEF           4710 	lcall	_lcd_write_wait
   112A D0 03              4711 	pop	ar3
   112C D0 02              4712 	pop	ar2
                           4713 ;	lcd.c:529: lcd_write_wait(1, LCD_INST, LCD_XADDR(x));
                           4714 ;	genAnd
   112E 74 07              4715 	mov	a,#0x07
   1130 5A                 4716 	anl	a,r2
   1131 FC                 4717 	mov	r4,a
   1132 7D 00              4718 	mov	r5,#0x00
                           4719 ;	genOr
   1134 43 04 B8           4720 	orl	ar4,#0xB8
                           4721 ;	genCast
                           4722 ;	genAssign
   1137 90s00r08           4723 	mov	dptr,#_lcd_write_wait_PARM_2
                           4724 ;	Peephole 181	changed mov to clr
   113A E4                 4725 	clr	a
   113B F0                 4726 	movx	@dptr,a
                           4727 ;	genAssign
   113C 90s00r09           4728 	mov	dptr,#_lcd_write_wait_PARM_3
   113F EC                 4729 	mov	a,r4
   1140 F0                 4730 	movx	@dptr,a
                           4731 ;	genCall
   1141 75 82 01           4732 	mov	dpl,#0x01
   1144 C0 02              4733 	push	ar2
   1146 C0 03              4734 	push	ar3
   1148 12s00rEF           4735 	lcall	_lcd_write_wait
   114B D0 03              4736 	pop	ar3
   114D D0 02              4737 	pop	ar2
                           4738 ;	lcd.c:531: for(y = 0; y < 64; ++y)
                           4739 ;	genAssign
   114F 7C 40              4740 	mov	r4,#0x40
   1151 7D 00              4741 	mov	r5,#0x00
   1153                    4742 00117$:
                           4743 ;	lcd.c:532: lcd_write_wait(1, LCD_DATA, 0xFF);
                           4744 ;	genAssign
   1153 90s00r08           4745 	mov	dptr,#_lcd_write_wait_PARM_2
   1156 74 01              4746 	mov	a,#0x01
   1158 F0                 4747 	movx	@dptr,a
                           4748 ;	genAssign
   1159 90s00r09           4749 	mov	dptr,#_lcd_write_wait_PARM_3
   115C 74 FF              4750 	mov	a,#0xFF
   115E F0                 4751 	movx	@dptr,a
                           4752 ;	genCall
   115F 75 82 01           4753 	mov	dpl,#0x01
   1162 C0 02              4754 	push	ar2
   1164 C0 03              4755 	push	ar3
   1166 C0 04              4756 	push	ar4
   1168 C0 05              4757 	push	ar5
   116A 12s00rEF           4758 	lcall	_lcd_write_wait
   116D D0 05              4759 	pop	ar5
   116F D0 04              4760 	pop	ar4
   1171 D0 03              4761 	pop	ar3
   1173 D0 02              4762 	pop	ar2
                           4763 ;	genMinus
                           4764 ;	genMinusDec
   1175 1C                 4765 	dec	r4
   1176 BC FF 01           4766 	cjne	r4,#0xff,00164$
   1179 1D                 4767 	dec	r5
   117A                    4768 00164$:
                           4769 ;	lcd.c:531: for(y = 0; y < 64; ++y)
                           4770 ;	genIfx
   117A EC                 4771 	mov	a,r4
   117B 4D                 4772 	orl	a,r5
                           4773 ;	genIfxJump
                           4774 ;	Peephole 108.b	removed ljmp by inverse jump logic
   117C 70 D5              4775 	jnz	00117$
                           4776 ;	Peephole 300	removed redundant label 00165$
                           4777 ;	lcd.c:525: for(x = 0; x < 1; x++)
                           4778 ;	genPlus
                           4779 ;     genPlusIncr
   117E 0A                 4780 	inc	r2
                           4781 ;	Peephole 112.b	changed ljmp to sjmp
                           4782 ;	Peephole 243	avoided branch to sjmp
   117F BA 00 88           4783 	cjne	r2,#0x00,00118$
   1182 0B                 4784 	inc	r3
                           4785 ;	Peephole 300	removed redundant label 00166$
   1183 80 85              4786 	sjmp	00118$
   1185                    4787 00121$:
                           4788 ;	lcd.c:536: for(x = 7; x < 8; x++)
                           4789 ;	genAssign
   1185 7A 07              4790 	mov	r2,#0x07
   1187 7B 00              4791 	mov	r3,#0x00
   1189                    4792 00125$:
                           4793 ;	genCmpLt
                           4794 ;	genCmp
   1189 C3                 4795 	clr	c
   118A EA                 4796 	mov	a,r2
   118B 94 08              4797 	subb	a,#0x08
   118D EB                 4798 	mov	a,r3
   118E 64 80              4799 	xrl	a,#0x80
   1190 94 80              4800 	subb	a,#0x80
                           4801 ;	genIfxJump
                           4802 ;	Peephole 108.a	removed ljmp by inverse jump logic
   1192 50 70              4803 	jnc	00129$
                           4804 ;	Peephole 300	removed redundant label 00167$
                           4805 ;	lcd.c:539: lcd_write_wait(1, LCD_INST, LCD_YADDR(0));
                           4806 ;	genAssign
   1194 90s00r08           4807 	mov	dptr,#_lcd_write_wait_PARM_2
                           4808 ;	Peephole 181	changed mov to clr
   1197 E4                 4809 	clr	a
   1198 F0                 4810 	movx	@dptr,a
                           4811 ;	genAssign
   1199 90s00r09           4812 	mov	dptr,#_lcd_write_wait_PARM_3
   119C 74 40              4813 	mov	a,#0x40
   119E F0                 4814 	movx	@dptr,a
                           4815 ;	genCall
   119F 75 82 01           4816 	mov	dpl,#0x01
   11A2 C0 02              4817 	push	ar2
   11A4 C0 03              4818 	push	ar3
   11A6 12s00rEF           4819 	lcall	_lcd_write_wait
   11A9 D0 03              4820 	pop	ar3
   11AB D0 02              4821 	pop	ar2
                           4822 ;	lcd.c:540: lcd_write_wait(1, LCD_INST, LCD_XADDR(x));
                           4823 ;	genAnd
   11AD 74 07              4824 	mov	a,#0x07
   11AF 5A                 4825 	anl	a,r2
   11B0 FC                 4826 	mov	r4,a
   11B1 7D 00              4827 	mov	r5,#0x00
                           4828 ;	genOr
   11B3 43 04 B8           4829 	orl	ar4,#0xB8
                           4830 ;	genCast
                           4831 ;	genAssign
   11B6 90s00r08           4832 	mov	dptr,#_lcd_write_wait_PARM_2
                           4833 ;	Peephole 181	changed mov to clr
   11B9 E4                 4834 	clr	a
   11BA F0                 4835 	movx	@dptr,a
                           4836 ;	genAssign
   11BB 90s00r09           4837 	mov	dptr,#_lcd_write_wait_PARM_3
   11BE EC                 4838 	mov	a,r4
   11BF F0                 4839 	movx	@dptr,a
                           4840 ;	genCall
   11C0 75 82 01           4841 	mov	dpl,#0x01
   11C3 C0 02              4842 	push	ar2
   11C5 C0 03              4843 	push	ar3
   11C7 12s00rEF           4844 	lcall	_lcd_write_wait
   11CA D0 03              4845 	pop	ar3
   11CC D0 02              4846 	pop	ar2
                           4847 ;	lcd.c:542: for(y = 0; y < 64; ++y)
                           4848 ;	genAssign
   11CE 7C 40              4849 	mov	r4,#0x40
   11D0 7D 00              4850 	mov	r5,#0x00
   11D2                    4851 00124$:
                           4852 ;	lcd.c:543: lcd_write_wait(1, LCD_DATA, 0xFF);
                           4853 ;	genAssign
   11D2 90s00r08           4854 	mov	dptr,#_lcd_write_wait_PARM_2
   11D5 74 01              4855 	mov	a,#0x01
   11D7 F0                 4856 	movx	@dptr,a
                           4857 ;	genAssign
   11D8 90s00r09           4858 	mov	dptr,#_lcd_write_wait_PARM_3
   11DB 74 FF              4859 	mov	a,#0xFF
   11DD F0                 4860 	movx	@dptr,a
                           4861 ;	genCall
   11DE 75 82 01           4862 	mov	dpl,#0x01
   11E1 C0 02              4863 	push	ar2
   11E3 C0 03              4864 	push	ar3
   11E5 C0 04              4865 	push	ar4
   11E7 C0 05              4866 	push	ar5
   11E9 12s00rEF           4867 	lcall	_lcd_write_wait
   11EC D0 05              4868 	pop	ar5
   11EE D0 04              4869 	pop	ar4
   11F0 D0 03              4870 	pop	ar3
   11F2 D0 02              4871 	pop	ar2
                           4872 ;	genMinus
                           4873 ;	genMinusDec
   11F4 1C                 4874 	dec	r4
   11F5 BC FF 01           4875 	cjne	r4,#0xff,00168$
   11F8 1D                 4876 	dec	r5
   11F9                    4877 00168$:
                           4878 ;	lcd.c:542: for(y = 0; y < 64; ++y)
                           4879 ;	genIfx
   11F9 EC                 4880 	mov	a,r4
   11FA 4D                 4881 	orl	a,r5
                           4882 ;	genIfxJump
                           4883 ;	Peephole 108.b	removed ljmp by inverse jump logic
   11FB 70 D5              4884 	jnz	00124$
                           4885 ;	Peephole 300	removed redundant label 00169$
                           4886 ;	lcd.c:536: for(x = 7; x < 8; x++)
                           4887 ;	genPlus
                           4888 ;     genPlusIncr
   11FD 0A                 4889 	inc	r2
                           4890 ;	Peephole 112.b	changed ljmp to sjmp
                           4891 ;	Peephole 243	avoided branch to sjmp
   11FE BA 00 88           4892 	cjne	r2,#0x00,00125$
   1201 0B                 4893 	inc	r3
                           4894 ;	Peephole 300	removed redundant label 00170$
   1202 80 85              4895 	sjmp	00125$
   1204                    4896 00129$:
   1204 22                 4897 	ret
                           4898 ;------------------------------------------------------------
                           4899 ;Allocation info for local variables in function 'accel_screen'
                           4900 ;------------------------------------------------------------
                           4901 ;title                     Allocated with name '_accel_screen_title_1_1'
                           4902 ;x_axis                    Allocated with name '_accel_screen_x_axis_1_1'
                           4903 ;y_axis                    Allocated with name '_accel_screen_y_axis_1_1'
                           4904 ;z_axis                    Allocated with name '_accel_screen_z_axis_1_1'
                           4905 ;clear_line                Allocated with name '_accel_screen_clear_line_1_1'
                           4906 ;print_x                   Allocated with name '_accel_screen_print_x_1_1'
                           4907 ;print_y                   Allocated with name '_accel_screen_print_y_1_1'
                           4908 ;print_z                   Allocated with name '_accel_screen_print_z_1_1'
                           4909 ;x                         Allocated with name '_accel_screen_x_1_1'
                           4910 ;y                         Allocated with name '_accel_screen_y_1_1'
                           4911 ;z                         Allocated with name '_accel_screen_z_1_1'
                           4912 ;------------------------------------------------------------
                           4913 ;	lcd.c:549: void accel_screen()
                           4914 ;	-----------------------------------------
                           4915 ;	 function accel_screen
                           4916 ;	-----------------------------------------
   1205                    4917 _accel_screen:
                           4918 ;	lcd.c:552: unsigned char title[20] = {"ADXL345 Readings"};
                           4919 ;	genPointerSet
                           4920 ;     genFarPointerSet
   1205 90s01r14           4921 	mov	dptr,#_accel_screen_title_1_1
   1208 74 41              4922 	mov	a,#0x41
   120A F0                 4923 	movx	@dptr,a
                           4924 ;	genPointerSet
                           4925 ;     genFarPointerSet
   120B 90s01r15           4926 	mov	dptr,#(_accel_screen_title_1_1 + 0x0001)
   120E 74 44              4927 	mov	a,#0x44
   1210 F0                 4928 	movx	@dptr,a
                           4929 ;	genPointerSet
                           4930 ;     genFarPointerSet
   1211 90s01r16           4931 	mov	dptr,#(_accel_screen_title_1_1 + 0x0002)
   1214 74 58              4932 	mov	a,#0x58
   1216 F0                 4933 	movx	@dptr,a
                           4934 ;	genPointerSet
                           4935 ;     genFarPointerSet
   1217 90s01r17           4936 	mov	dptr,#(_accel_screen_title_1_1 + 0x0003)
   121A 74 4C              4937 	mov	a,#0x4C
   121C F0                 4938 	movx	@dptr,a
                           4939 ;	genPointerSet
                           4940 ;     genFarPointerSet
   121D 90s01r18           4941 	mov	dptr,#(_accel_screen_title_1_1 + 0x0004)
   1220 74 33              4942 	mov	a,#0x33
   1222 F0                 4943 	movx	@dptr,a
                           4944 ;	genPointerSet
                           4945 ;     genFarPointerSet
   1223 90s01r19           4946 	mov	dptr,#(_accel_screen_title_1_1 + 0x0005)
   1226 74 34              4947 	mov	a,#0x34
   1228 F0                 4948 	movx	@dptr,a
                           4949 ;	genPointerSet
                           4950 ;     genFarPointerSet
   1229 90s01r1A           4951 	mov	dptr,#(_accel_screen_title_1_1 + 0x0006)
   122C 74 35              4952 	mov	a,#0x35
   122E F0                 4953 	movx	@dptr,a
                           4954 ;	genPointerSet
                           4955 ;     genFarPointerSet
   122F 90s01r1B           4956 	mov	dptr,#(_accel_screen_title_1_1 + 0x0007)
   1232 74 20              4957 	mov	a,#0x20
   1234 F0                 4958 	movx	@dptr,a
                           4959 ;	genPointerSet
                           4960 ;     genFarPointerSet
   1235 90s01r1C           4961 	mov	dptr,#(_accel_screen_title_1_1 + 0x0008)
   1238 74 52              4962 	mov	a,#0x52
   123A F0                 4963 	movx	@dptr,a
                           4964 ;	genPointerSet
                           4965 ;     genFarPointerSet
   123B 90s01r1D           4966 	mov	dptr,#(_accel_screen_title_1_1 + 0x0009)
   123E 74 65              4967 	mov	a,#0x65
   1240 F0                 4968 	movx	@dptr,a
                           4969 ;	genPointerSet
                           4970 ;     genFarPointerSet
   1241 90s01r1E           4971 	mov	dptr,#(_accel_screen_title_1_1 + 0x000a)
   1244 74 61              4972 	mov	a,#0x61
   1246 F0                 4973 	movx	@dptr,a
                           4974 ;	genPointerSet
                           4975 ;     genFarPointerSet
   1247 90s01r1F           4976 	mov	dptr,#(_accel_screen_title_1_1 + 0x000b)
   124A 74 64              4977 	mov	a,#0x64
   124C F0                 4978 	movx	@dptr,a
                           4979 ;	genPointerSet
                           4980 ;     genFarPointerSet
   124D 90s01r20           4981 	mov	dptr,#(_accel_screen_title_1_1 + 0x000c)
   1250 74 69              4982 	mov	a,#0x69
   1252 F0                 4983 	movx	@dptr,a
                           4984 ;	genPointerSet
                           4985 ;     genFarPointerSet
   1253 90s01r21           4986 	mov	dptr,#(_accel_screen_title_1_1 + 0x000d)
   1256 74 6E              4987 	mov	a,#0x6E
   1258 F0                 4988 	movx	@dptr,a
                           4989 ;	genPointerSet
                           4990 ;     genFarPointerSet
   1259 90s01r22           4991 	mov	dptr,#(_accel_screen_title_1_1 + 0x000e)
   125C 74 67              4992 	mov	a,#0x67
   125E F0                 4993 	movx	@dptr,a
                           4994 ;	genPointerSet
                           4995 ;     genFarPointerSet
   125F 90s01r23           4996 	mov	dptr,#(_accel_screen_title_1_1 + 0x000f)
   1262 74 73              4997 	mov	a,#0x73
   1264 F0                 4998 	movx	@dptr,a
                           4999 ;	genPointerSet
                           5000 ;     genFarPointerSet
   1265 90s01r24           5001 	mov	dptr,#(_accel_screen_title_1_1 + 0x0010)
                           5002 ;	Peephole 181	changed mov to clr
   1268 E4                 5003 	clr	a
   1269 F0                 5004 	movx	@dptr,a
                           5005 ;	lcd.c:553: unsigned char x_axis[10] = {"X-Axis:"};
                           5006 ;	genPointerSet
                           5007 ;     genFarPointerSet
   126A 90s01r28           5008 	mov	dptr,#_accel_screen_x_axis_1_1
   126D 74 58              5009 	mov	a,#0x58
   126F F0                 5010 	movx	@dptr,a
                           5011 ;	genPointerSet
                           5012 ;     genFarPointerSet
   1270 90s01r29           5013 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0001)
   1273 74 2D              5014 	mov	a,#0x2D
   1275 F0                 5015 	movx	@dptr,a
                           5016 ;	genPointerSet
                           5017 ;     genFarPointerSet
   1276 90s01r2A           5018 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0002)
   1279 74 41              5019 	mov	a,#0x41
   127B F0                 5020 	movx	@dptr,a
                           5021 ;	genPointerSet
                           5022 ;     genFarPointerSet
   127C 90s01r2B           5023 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0003)
   127F 74 78              5024 	mov	a,#0x78
   1281 F0                 5025 	movx	@dptr,a
                           5026 ;	genPointerSet
                           5027 ;     genFarPointerSet
   1282 90s01r2C           5028 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0004)
   1285 74 69              5029 	mov	a,#0x69
   1287 F0                 5030 	movx	@dptr,a
                           5031 ;	genPointerSet
                           5032 ;     genFarPointerSet
   1288 90s01r2D           5033 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0005)
   128B 74 73              5034 	mov	a,#0x73
   128D F0                 5035 	movx	@dptr,a
                           5036 ;	genPointerSet
                           5037 ;     genFarPointerSet
   128E 90s01r2E           5038 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0006)
   1291 74 3A              5039 	mov	a,#0x3A
   1293 F0                 5040 	movx	@dptr,a
                           5041 ;	genPointerSet
                           5042 ;     genFarPointerSet
   1294 90s01r2F           5043 	mov	dptr,#(_accel_screen_x_axis_1_1 + 0x0007)
                           5044 ;	Peephole 181	changed mov to clr
   1297 E4                 5045 	clr	a
   1298 F0                 5046 	movx	@dptr,a
                           5047 ;	lcd.c:554: unsigned char y_axis[10] = {"Y-Axis:"};
                           5048 ;	genPointerSet
                           5049 ;     genFarPointerSet
   1299 90s01r32           5050 	mov	dptr,#_accel_screen_y_axis_1_1
   129C 74 59              5051 	mov	a,#0x59
   129E F0                 5052 	movx	@dptr,a
                           5053 ;	genPointerSet
                           5054 ;     genFarPointerSet
   129F 90s01r33           5055 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0001)
   12A2 74 2D              5056 	mov	a,#0x2D
   12A4 F0                 5057 	movx	@dptr,a
                           5058 ;	genPointerSet
                           5059 ;     genFarPointerSet
   12A5 90s01r34           5060 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0002)
   12A8 74 41              5061 	mov	a,#0x41
   12AA F0                 5062 	movx	@dptr,a
                           5063 ;	genPointerSet
                           5064 ;     genFarPointerSet
   12AB 90s01r35           5065 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0003)
   12AE 74 78              5066 	mov	a,#0x78
   12B0 F0                 5067 	movx	@dptr,a
                           5068 ;	genPointerSet
                           5069 ;     genFarPointerSet
   12B1 90s01r36           5070 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0004)
   12B4 74 69              5071 	mov	a,#0x69
   12B6 F0                 5072 	movx	@dptr,a
                           5073 ;	genPointerSet
                           5074 ;     genFarPointerSet
   12B7 90s01r37           5075 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0005)
   12BA 74 73              5076 	mov	a,#0x73
   12BC F0                 5077 	movx	@dptr,a
                           5078 ;	genPointerSet
                           5079 ;     genFarPointerSet
   12BD 90s01r38           5080 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0006)
   12C0 74 3A              5081 	mov	a,#0x3A
   12C2 F0                 5082 	movx	@dptr,a
                           5083 ;	genPointerSet
                           5084 ;     genFarPointerSet
   12C3 90s01r39           5085 	mov	dptr,#(_accel_screen_y_axis_1_1 + 0x0007)
                           5086 ;	Peephole 181	changed mov to clr
   12C6 E4                 5087 	clr	a
   12C7 F0                 5088 	movx	@dptr,a
                           5089 ;	lcd.c:555: unsigned char z_axis[10] = {"Z-Axis:"};
                           5090 ;	genPointerSet
                           5091 ;     genFarPointerSet
   12C8 90s01r3C           5092 	mov	dptr,#_accel_screen_z_axis_1_1
   12CB 74 5A              5093 	mov	a,#0x5A
   12CD F0                 5094 	movx	@dptr,a
                           5095 ;	genPointerSet
                           5096 ;     genFarPointerSet
   12CE 90s01r3D           5097 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0001)
   12D1 74 2D              5098 	mov	a,#0x2D
   12D3 F0                 5099 	movx	@dptr,a
                           5100 ;	genPointerSet
                           5101 ;     genFarPointerSet
   12D4 90s01r3E           5102 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0002)
   12D7 74 41              5103 	mov	a,#0x41
   12D9 F0                 5104 	movx	@dptr,a
                           5105 ;	genPointerSet
                           5106 ;     genFarPointerSet
   12DA 90s01r3F           5107 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0003)
   12DD 74 78              5108 	mov	a,#0x78
   12DF F0                 5109 	movx	@dptr,a
                           5110 ;	genPointerSet
                           5111 ;     genFarPointerSet
   12E0 90s01r40           5112 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0004)
   12E3 74 69              5113 	mov	a,#0x69
   12E5 F0                 5114 	movx	@dptr,a
                           5115 ;	genPointerSet
                           5116 ;     genFarPointerSet
   12E6 90s01r41           5117 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0005)
   12E9 74 73              5118 	mov	a,#0x73
   12EB F0                 5119 	movx	@dptr,a
                           5120 ;	genPointerSet
                           5121 ;     genFarPointerSet
   12EC 90s01r42           5122 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0006)
   12EF 74 3A              5123 	mov	a,#0x3A
   12F1 F0                 5124 	movx	@dptr,a
                           5125 ;	genPointerSet
                           5126 ;     genFarPointerSet
   12F2 90s01r43           5127 	mov	dptr,#(_accel_screen_z_axis_1_1 + 0x0007)
                           5128 ;	Peephole 181	changed mov to clr
   12F5 E4                 5129 	clr	a
   12F6 F0                 5130 	movx	@dptr,a
                           5131 ;	lcd.c:556: unsigned char clear_line[10] = {"        "};
                           5132 ;	genPointerSet
                           5133 ;     genFarPointerSet
   12F7 90s01r46           5134 	mov	dptr,#_accel_screen_clear_line_1_1
   12FA 74 20              5135 	mov	a,#0x20
   12FC F0                 5136 	movx	@dptr,a
                           5137 ;	genPointerSet
                           5138 ;     genFarPointerSet
   12FD 90s01r47           5139 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0001)
   1300 74 20              5140 	mov	a,#0x20
   1302 F0                 5141 	movx	@dptr,a
                           5142 ;	genPointerSet
                           5143 ;     genFarPointerSet
   1303 90s01r48           5144 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0002)
   1306 74 20              5145 	mov	a,#0x20
   1308 F0                 5146 	movx	@dptr,a
                           5147 ;	genPointerSet
                           5148 ;     genFarPointerSet
   1309 90s01r49           5149 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0003)
   130C 74 20              5150 	mov	a,#0x20
   130E F0                 5151 	movx	@dptr,a
                           5152 ;	genPointerSet
                           5153 ;     genFarPointerSet
   130F 90s01r4A           5154 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0004)
   1312 74 20              5155 	mov	a,#0x20
   1314 F0                 5156 	movx	@dptr,a
                           5157 ;	genPointerSet
                           5158 ;     genFarPointerSet
   1315 90s01r4B           5159 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0005)
   1318 74 20              5160 	mov	a,#0x20
   131A F0                 5161 	movx	@dptr,a
                           5162 ;	genPointerSet
                           5163 ;     genFarPointerSet
   131B 90s01r4C           5164 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0006)
   131E 74 20              5165 	mov	a,#0x20
   1320 F0                 5166 	movx	@dptr,a
                           5167 ;	genPointerSet
                           5168 ;     genFarPointerSet
   1321 90s01r4D           5169 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0007)
   1324 74 20              5170 	mov	a,#0x20
   1326 F0                 5171 	movx	@dptr,a
                           5172 ;	genPointerSet
                           5173 ;     genFarPointerSet
   1327 90s01r4E           5174 	mov	dptr,#(_accel_screen_clear_line_1_1 + 0x0008)
                           5175 ;	Peephole 181	changed mov to clr
                           5176 ;	lcd.c:561: int x = 0;
                           5177 ;	genAssign
                           5178 ;	Peephole 219.a	removed redundant clear
   132A E4                 5179 	clr	a
   132B F0                 5180 	movx	@dptr,a
   132C 90s01r6E           5181 	mov	dptr,#_accel_screen_x_1_1
   132F F0                 5182 	movx	@dptr,a
   1330 A3                 5183 	inc	dptr
   1331 F0                 5184 	movx	@dptr,a
                           5185 ;	lcd.c:566: lcd_clear_invert();
                           5186 ;	genCall
   1332 12s01rC9           5187 	lcall	_lcd_clear_invert
                           5188 ;	lcd.c:568: GLCD_WriteString(title,0,17, INVERT);
                           5189 ;	genAssign
   1335 90s01r84           5190 	mov	dptr,#_GLCD_WriteString_PARM_2
                           5191 ;	Peephole 181	changed mov to clr
   1338 E4                 5192 	clr	a
   1339 F0                 5193 	movx	@dptr,a
                           5194 ;	genAssign
   133A 90s01r85           5195 	mov	dptr,#_GLCD_WriteString_PARM_3
   133D 74 11              5196 	mov	a,#0x11
   133F F0                 5197 	movx	@dptr,a
                           5198 ;	genAssign
   1340 90s01r86           5199 	mov	dptr,#_GLCD_WriteString_PARM_4
   1343 74 01              5200 	mov	a,#0x01
   1345 F0                 5201 	movx	@dptr,a
                           5202 ;	genCall
                           5203 ;	Peephole 182.a	used 16 bit load of DPTR
   1346 90s01r14           5204 	mov	dptr,#_accel_screen_title_1_1
   1349 75 F0 00           5205 	mov	b,#0x00
   134C 12s19rFD           5206 	lcall	_GLCD_WriteString
                           5207 ;	lcd.c:569: GLCD_WriteString(x_axis,2,3, INVERT);
                           5208 ;	genAssign
   134F 90s01r84           5209 	mov	dptr,#_GLCD_WriteString_PARM_2
   1352 74 02              5210 	mov	a,#0x02
   1354 F0                 5211 	movx	@dptr,a
                           5212 ;	genAssign
   1355 90s01r85           5213 	mov	dptr,#_GLCD_WriteString_PARM_3
   1358 74 03              5214 	mov	a,#0x03
   135A F0                 5215 	movx	@dptr,a
                           5216 ;	genAssign
   135B 90s01r86           5217 	mov	dptr,#_GLCD_WriteString_PARM_4
   135E 74 01              5218 	mov	a,#0x01
   1360 F0                 5219 	movx	@dptr,a
                           5220 ;	genCall
                           5221 ;	Peephole 182.a	used 16 bit load of DPTR
   1361 90s01r28           5222 	mov	dptr,#_accel_screen_x_axis_1_1
   1364 75 F0 00           5223 	mov	b,#0x00
   1367 12s19rFD           5224 	lcall	_GLCD_WriteString
                           5225 ;	lcd.c:570: GLCD_WriteString(y_axis,4,3, INVERT);
                           5226 ;	genAssign
   136A 90s01r84           5227 	mov	dptr,#_GLCD_WriteString_PARM_2
   136D 74 04              5228 	mov	a,#0x04
   136F F0                 5229 	movx	@dptr,a
                           5230 ;	genAssign
   1370 90s01r85           5231 	mov	dptr,#_GLCD_WriteString_PARM_3
   1373 74 03              5232 	mov	a,#0x03
   1375 F0                 5233 	movx	@dptr,a
                           5234 ;	genAssign
   1376 90s01r86           5235 	mov	dptr,#_GLCD_WriteString_PARM_4
   1379 74 01              5236 	mov	a,#0x01
   137B F0                 5237 	movx	@dptr,a
                           5238 ;	genCall
                           5239 ;	Peephole 182.a	used 16 bit load of DPTR
   137C 90s01r32           5240 	mov	dptr,#_accel_screen_y_axis_1_1
   137F 75 F0 00           5241 	mov	b,#0x00
   1382 12s19rFD           5242 	lcall	_GLCD_WriteString
                           5243 ;	lcd.c:571: GLCD_WriteString(z_axis,6,3, INVERT);
                           5244 ;	genAssign
   1385 90s01r84           5245 	mov	dptr,#_GLCD_WriteString_PARM_2
   1388 74 06              5246 	mov	a,#0x06
   138A F0                 5247 	movx	@dptr,a
                           5248 ;	genAssign
   138B 90s01r85           5249 	mov	dptr,#_GLCD_WriteString_PARM_3
   138E 74 03              5250 	mov	a,#0x03
   1390 F0                 5251 	movx	@dptr,a
                           5252 ;	genAssign
   1391 90s01r86           5253 	mov	dptr,#_GLCD_WriteString_PARM_4
   1394 74 01              5254 	mov	a,#0x01
   1396 F0                 5255 	movx	@dptr,a
                           5256 ;	genCall
                           5257 ;	Peephole 182.a	used 16 bit load of DPTR
   1397 90s01r3C           5258 	mov	dptr,#_accel_screen_z_axis_1_1
   139A 75 F0 00           5259 	mov	b,#0x00
   139D 12s19rFD           5260 	lcall	_GLCD_WriteString
                           5261 ;	lcd.c:573: delay_ms(2000);
                           5262 ;	genCall
                           5263 ;	Peephole 182.b	used 16 bit load of dptr
   13A0 90 07 D0           5264 	mov	dptr,#0x07D0
   13A3 12s1Cr7C           5265 	lcall	_delay_ms
                           5266 ;	lcd.c:576: while(!calibrate && x > RIGHT_UP_MIN)
   13A6                    5267 00102$:
                           5268 ;	genAssign
   13A6 90s00r00           5269 	mov	dptr,#_calibrate
   13A9 E0                 5270 	movx	a,@dptr
                           5271 ;	genIfx
   13AA FA                 5272 	mov	r2,a
                           5273 ;	Peephole 105	removed redundant mov
                           5274 ;	genIfxJump
   13AB 60 03              5275 	jz	00113$
   13AD 02s15r2B           5276 	ljmp	00104$
   13B0                    5277 00113$:
                           5278 ;	genAssign
   13B0 90s01r6E           5279 	mov	dptr,#_accel_screen_x_1_1
   13B3 E0                 5280 	movx	a,@dptr
   13B4 FA                 5281 	mov	r2,a
   13B5 A3                 5282 	inc	dptr
   13B6 E0                 5283 	movx	a,@dptr
   13B7 FB                 5284 	mov	r3,a
                           5285 ;	genCmpGt
                           5286 ;	genCmp
   13B8 C3                 5287 	clr	c
   13B9 74 6A              5288 	mov	a,#0x6A
   13BB 9A                 5289 	subb	a,r2
                           5290 ;	Peephole 159	avoided xrl during execution
   13BC 74 7F              5291 	mov	a,#(0xFF ^ 0x80)
   13BE 8B F0              5292 	mov	b,r3
   13C0 63 F0 80           5293 	xrl	b,#0x80
   13C3 95 F0              5294 	subb	a,b
                           5295 ;	genIfxJump
   13C5 40 03              5296 	jc	00114$
   13C7 02s15r2B           5297 	ljmp	00104$
   13CA                    5298 00114$:
                           5299 ;	lcd.c:579: x = ADXL345_read_x();
                           5300 ;	genCall
   13CA 12s00r00           5301 	lcall	_ADXL345_read_x
   13CD AA 82              5302 	mov	r2,dpl
   13CF AB 83              5303 	mov	r3,dph
                           5304 ;	genAssign
   13D1 90s01r6E           5305 	mov	dptr,#_accel_screen_x_1_1
   13D4 EA                 5306 	mov	a,r2
   13D5 F0                 5307 	movx	@dptr,a
   13D6 A3                 5308 	inc	dptr
   13D7 EB                 5309 	mov	a,r3
   13D8 F0                 5310 	movx	@dptr,a
                           5311 ;	lcd.c:580: y = ADXL345_read_y();
                           5312 ;	genCall
   13D9 C0 02              5313 	push	ar2
   13DB C0 03              5314 	push	ar3
   13DD 12s00r00           5315 	lcall	_ADXL345_read_y
   13E0 AC 82              5316 	mov	r4,dpl
   13E2 AD 83              5317 	mov	r5,dph
   13E4 D0 03              5318 	pop	ar3
   13E6 D0 02              5319 	pop	ar2
                           5320 ;	lcd.c:581: z = ADXL345_read_z();
                           5321 ;	genCall
   13E8 C0 02              5322 	push	ar2
   13EA C0 03              5323 	push	ar3
   13EC C0 04              5324 	push	ar4
   13EE C0 05              5325 	push	ar5
   13F0 12s00r00           5326 	lcall	_ADXL345_read_z
   13F3 AE 82              5327 	mov	r6,dpl
   13F5 AF 83              5328 	mov	r7,dph
   13F7 D0 05              5329 	pop	ar5
   13F9 D0 04              5330 	pop	ar4
   13FB D0 03              5331 	pop	ar3
   13FD D0 02              5332 	pop	ar2
                           5333 ;	lcd.c:584: _itoa(x,print_x,10);
                           5334 ;	genCast
   13FF 90s00r00           5335 	mov	dptr,#__itoa_PARM_2
   1402 74r50              5336 	mov	a,#_accel_screen_print_x_1_1
   1404 F0                 5337 	movx	@dptr,a
   1405 A3                 5338 	inc	dptr
   1406 74s01              5339 	mov	a,#(_accel_screen_print_x_1_1 >> 8)
   1408 F0                 5340 	movx	@dptr,a
   1409 A3                 5341 	inc	dptr
   140A 74 00              5342 	mov	a,#0x0
   140C F0                 5343 	movx	@dptr,a
                           5344 ;	genAssign
   140D 90s00r00           5345 	mov	dptr,#__itoa_PARM_3
   1410 74 0A              5346 	mov	a,#0x0A
   1412 F0                 5347 	movx	@dptr,a
                           5348 ;	genCall
   1413 8A 82              5349 	mov	dpl,r2
   1415 8B 83              5350 	mov	dph,r3
   1417 C0 04              5351 	push	ar4
   1419 C0 05              5352 	push	ar5
   141B C0 06              5353 	push	ar6
   141D C0 07              5354 	push	ar7
   141F 12s00r00           5355 	lcall	__itoa
   1422 D0 07              5356 	pop	ar7
   1424 D0 06              5357 	pop	ar6
   1426 D0 05              5358 	pop	ar5
   1428 D0 04              5359 	pop	ar4
                           5360 ;	lcd.c:585: GLCD_WriteString(print_x,2,50, INVERT);
                           5361 ;	genAssign
   142A 90s01r84           5362 	mov	dptr,#_GLCD_WriteString_PARM_2
   142D 74 02              5363 	mov	a,#0x02
   142F F0                 5364 	movx	@dptr,a
                           5365 ;	genAssign
   1430 90s01r85           5366 	mov	dptr,#_GLCD_WriteString_PARM_3
   1433 74 32              5367 	mov	a,#0x32
   1435 F0                 5368 	movx	@dptr,a
                           5369 ;	genAssign
   1436 90s01r86           5370 	mov	dptr,#_GLCD_WriteString_PARM_4
   1439 74 01              5371 	mov	a,#0x01
   143B F0                 5372 	movx	@dptr,a
                           5373 ;	genCall
                           5374 ;	Peephole 182.a	used 16 bit load of DPTR
   143C 90s01r50           5375 	mov	dptr,#_accel_screen_print_x_1_1
   143F 75 F0 00           5376 	mov	b,#0x00
   1442 C0 04              5377 	push	ar4
   1444 C0 05              5378 	push	ar5
   1446 C0 06              5379 	push	ar6
   1448 C0 07              5380 	push	ar7
   144A 12s19rFD           5381 	lcall	_GLCD_WriteString
   144D D0 07              5382 	pop	ar7
   144F D0 06              5383 	pop	ar6
   1451 D0 05              5384 	pop	ar5
   1453 D0 04              5385 	pop	ar4
                           5386 ;	lcd.c:586: _itoa(y,print_y,10);
                           5387 ;	genCast
   1455 90s00r00           5388 	mov	dptr,#__itoa_PARM_2
   1458 74r5A              5389 	mov	a,#_accel_screen_print_y_1_1
   145A F0                 5390 	movx	@dptr,a
   145B A3                 5391 	inc	dptr
   145C 74s01              5392 	mov	a,#(_accel_screen_print_y_1_1 >> 8)
   145E F0                 5393 	movx	@dptr,a
   145F A3                 5394 	inc	dptr
   1460 74 00              5395 	mov	a,#0x0
   1462 F0                 5396 	movx	@dptr,a
                           5397 ;	genAssign
   1463 90s00r00           5398 	mov	dptr,#__itoa_PARM_3
   1466 74 0A              5399 	mov	a,#0x0A
   1468 F0                 5400 	movx	@dptr,a
                           5401 ;	genCall
   1469 8C 82              5402 	mov	dpl,r4
   146B 8D 83              5403 	mov	dph,r5
   146D C0 06              5404 	push	ar6
   146F C0 07              5405 	push	ar7
   1471 12s00r00           5406 	lcall	__itoa
   1474 D0 07              5407 	pop	ar7
   1476 D0 06              5408 	pop	ar6
                           5409 ;	lcd.c:587: GLCD_WriteString(print_y,4,50, INVERT);
                           5410 ;	genAssign
   1478 90s01r84           5411 	mov	dptr,#_GLCD_WriteString_PARM_2
   147B 74 04              5412 	mov	a,#0x04
   147D F0                 5413 	movx	@dptr,a
                           5414 ;	genAssign
   147E 90s01r85           5415 	mov	dptr,#_GLCD_WriteString_PARM_3
   1481 74 32              5416 	mov	a,#0x32
   1483 F0                 5417 	movx	@dptr,a
                           5418 ;	genAssign
   1484 90s01r86           5419 	mov	dptr,#_GLCD_WriteString_PARM_4
   1487 74 01              5420 	mov	a,#0x01
   1489 F0                 5421 	movx	@dptr,a
                           5422 ;	genCall
                           5423 ;	Peephole 182.a	used 16 bit load of DPTR
   148A 90s01r5A           5424 	mov	dptr,#_accel_screen_print_y_1_1
   148D 75 F0 00           5425 	mov	b,#0x00
   1490 C0 06              5426 	push	ar6
   1492 C0 07              5427 	push	ar7
   1494 12s19rFD           5428 	lcall	_GLCD_WriteString
   1497 D0 07              5429 	pop	ar7
   1499 D0 06              5430 	pop	ar6
                           5431 ;	lcd.c:588: _itoa(z,print_z,10);
                           5432 ;	genCast
   149B 90s00r00           5433 	mov	dptr,#__itoa_PARM_2
   149E 74r64              5434 	mov	a,#_accel_screen_print_z_1_1
   14A0 F0                 5435 	movx	@dptr,a
   14A1 A3                 5436 	inc	dptr
   14A2 74s01              5437 	mov	a,#(_accel_screen_print_z_1_1 >> 8)
   14A4 F0                 5438 	movx	@dptr,a
   14A5 A3                 5439 	inc	dptr
   14A6 74 00              5440 	mov	a,#0x0
   14A8 F0                 5441 	movx	@dptr,a
                           5442 ;	genAssign
   14A9 90s00r00           5443 	mov	dptr,#__itoa_PARM_3
   14AC 74 0A              5444 	mov	a,#0x0A
   14AE F0                 5445 	movx	@dptr,a
                           5446 ;	genCall
   14AF 8E 82              5447 	mov	dpl,r6
   14B1 8F 83              5448 	mov	dph,r7
   14B3 12s00r00           5449 	lcall	__itoa
                           5450 ;	lcd.c:589: GLCD_WriteString(print_z,6,50, INVERT);
                           5451 ;	genAssign
   14B6 90s01r84           5452 	mov	dptr,#_GLCD_WriteString_PARM_2
   14B9 74 06              5453 	mov	a,#0x06
   14BB F0                 5454 	movx	@dptr,a
                           5455 ;	genAssign
   14BC 90s01r85           5456 	mov	dptr,#_GLCD_WriteString_PARM_3
   14BF 74 32              5457 	mov	a,#0x32
   14C1 F0                 5458 	movx	@dptr,a
                           5459 ;	genAssign
   14C2 90s01r86           5460 	mov	dptr,#_GLCD_WriteString_PARM_4
   14C5 74 01              5461 	mov	a,#0x01
   14C7 F0                 5462 	movx	@dptr,a
                           5463 ;	genCall
                           5464 ;	Peephole 182.a	used 16 bit load of DPTR
   14C8 90s01r64           5465 	mov	dptr,#_accel_screen_print_z_1_1
   14CB 75 F0 00           5466 	mov	b,#0x00
   14CE 12s19rFD           5467 	lcall	_GLCD_WriteString
                           5468 ;	lcd.c:591: delay_ms(350);
                           5469 ;	genCall
                           5470 ;	Peephole 182.b	used 16 bit load of dptr
   14D1 90 01 5E           5471 	mov	dptr,#0x015E
   14D4 12s1Cr7C           5472 	lcall	_delay_ms
                           5473 ;	lcd.c:593: GLCD_WriteString(clear_line,2,50,INVERT);
                           5474 ;	genAssign
   14D7 90s01r84           5475 	mov	dptr,#_GLCD_WriteString_PARM_2
   14DA 74 02              5476 	mov	a,#0x02
   14DC F0                 5477 	movx	@dptr,a
                           5478 ;	genAssign
   14DD 90s01r85           5479 	mov	dptr,#_GLCD_WriteString_PARM_3
   14E0 74 32              5480 	mov	a,#0x32
   14E2 F0                 5481 	movx	@dptr,a
                           5482 ;	genAssign
   14E3 90s01r86           5483 	mov	dptr,#_GLCD_WriteString_PARM_4
   14E6 74 01              5484 	mov	a,#0x01
   14E8 F0                 5485 	movx	@dptr,a
                           5486 ;	genCall
                           5487 ;	Peephole 182.a	used 16 bit load of DPTR
   14E9 90s01r46           5488 	mov	dptr,#_accel_screen_clear_line_1_1
   14EC 75 F0 00           5489 	mov	b,#0x00
   14EF 12s19rFD           5490 	lcall	_GLCD_WriteString
                           5491 ;	lcd.c:594: GLCD_WriteString(clear_line,4,50,INVERT);
                           5492 ;	genAssign
   14F2 90s01r84           5493 	mov	dptr,#_GLCD_WriteString_PARM_2
   14F5 74 04              5494 	mov	a,#0x04
   14F7 F0                 5495 	movx	@dptr,a
                           5496 ;	genAssign
   14F8 90s01r85           5497 	mov	dptr,#_GLCD_WriteString_PARM_3
   14FB 74 32              5498 	mov	a,#0x32
   14FD F0                 5499 	movx	@dptr,a
                           5500 ;	genAssign
   14FE 90s01r86           5501 	mov	dptr,#_GLCD_WriteString_PARM_4
   1501 74 01              5502 	mov	a,#0x01
   1503 F0                 5503 	movx	@dptr,a
                           5504 ;	genCall
                           5505 ;	Peephole 182.a	used 16 bit load of DPTR
   1504 90s01r46           5506 	mov	dptr,#_accel_screen_clear_line_1_1
   1507 75 F0 00           5507 	mov	b,#0x00
   150A 12s19rFD           5508 	lcall	_GLCD_WriteString
                           5509 ;	lcd.c:595: GLCD_WriteString(clear_line,6,50,INVERT);
                           5510 ;	genAssign
   150D 90s01r84           5511 	mov	dptr,#_GLCD_WriteString_PARM_2
   1510 74 06              5512 	mov	a,#0x06
   1512 F0                 5513 	movx	@dptr,a
                           5514 ;	genAssign
   1513 90s01r85           5515 	mov	dptr,#_GLCD_WriteString_PARM_3
   1516 74 32              5516 	mov	a,#0x32
   1518 F0                 5517 	movx	@dptr,a
                           5518 ;	genAssign
   1519 90s01r86           5519 	mov	dptr,#_GLCD_WriteString_PARM_4
   151C 74 01              5520 	mov	a,#0x01
   151E F0                 5521 	movx	@dptr,a
                           5522 ;	genCall
                           5523 ;	Peephole 182.a	used 16 bit load of DPTR
   151F 90s01r46           5524 	mov	dptr,#_accel_screen_clear_line_1_1
   1522 75 F0 00           5525 	mov	b,#0x00
   1525 12s19rFD           5526 	lcall	_GLCD_WriteString
   1528 02s13rA6           5527 	ljmp	00102$
   152B                    5528 00104$:
                           5529 ;	lcd.c:598: if(calibrate)
                           5530 ;	genAssign
   152B 90s00r00           5531 	mov	dptr,#_calibrate
   152E E0                 5532 	movx	a,@dptr
                           5533 ;	genIfx
   152F FA                 5534 	mov	r2,a
                           5535 ;	Peephole 105	removed redundant mov
                           5536 ;	genIfxJump
                           5537 ;	Peephole 108.c	removed ljmp by inverse jump logic
   1530 60 03              5538 	jz	00106$
                           5539 ;	Peephole 300	removed redundant label 00115$
                           5540 ;	lcd.c:599: ADXL345_calibrate();
                           5541 ;	genCall
   1532 12s00r00           5542 	lcall	_ADXL345_calibrate
   1535                    5543 00106$:
                           5544 ;	lcd.c:601: calibrate = 0;
                           5545 ;	genAssign
   1535 90s00r00           5546 	mov	dptr,#_calibrate
                           5547 ;	Peephole 181	changed mov to clr
   1538 E4                 5548 	clr	a
   1539 F0                 5549 	movx	@dptr,a
                           5550 ;	Peephole 300	removed redundant label 00107$
   153A 22                 5551 	ret
                           5552 ;------------------------------------------------------------
                           5553 ;Allocation info for local variables in function 'GLCD_WriteChar'
                           5554 ;------------------------------------------------------------
                           5555 ;sloc0                     Allocated with name '_GLCD_WriteChar_sloc0_1_0'
                           5556 ;sloc1                     Allocated with name '_GLCD_WriteChar_sloc1_1_0'
                           5557 ;page                      Allocated with name '_GLCD_WriteChar_PARM_2'
                           5558 ;line                      Allocated with name '_GLCD_WriteChar_PARM_3'
                           5559 ;invert                    Allocated with name '_GLCD_WriteChar_PARM_4'
                           5560 ;charToWrite               Allocated with name '_GLCD_WriteChar_charToWrite_1_1'
                           5561 ;lcd_chip                  Allocated with name '_GLCD_WriteChar_lcd_chip_1_1'
                           5562 ;lcd_y                     Allocated with name '_GLCD_WriteChar_lcd_y_1_1'
                           5563 ;i                         Allocated with name '_GLCD_WriteChar_i_1_1'
                           5564 ;------------------------------------------------------------
                           5565 ;	lcd.c:610: void GLCD_WriteChar(char charToWrite, unsigned char page, unsigned char line, unsigned char invert)
                           5566 ;	-----------------------------------------
                           5567 ;	 function GLCD_WriteChar
                           5568 ;	-----------------------------------------
   153B                    5569 _GLCD_WriteChar:
                           5570 ;	genReceive
   153B E5 82              5571 	mov	a,dpl
   153D 90s01r73           5572 	mov	dptr,#_GLCD_WriteChar_charToWrite_1_1
   1540 F0                 5573 	movx	@dptr,a
                           5574 ;	lcd.c:613: unsigned char lcd_chip = (line & 0x40) ? 1 : 0;
                           5575 ;	genAssign
   1541 90s01r71           5576 	mov	dptr,#_GLCD_WriteChar_PARM_3
   1544 E0                 5577 	movx	a,@dptr
                           5578 ;	genAnd
   1545 FA                 5579 	mov	r2,a
                           5580 ;	Peephole 105	removed redundant mov
                           5581 ;	genIfxJump
                           5582 ;	Peephole 108.d	removed ljmp by inverse jump logic
   1546 30 E6 04           5583 	jnb	acc.6,00114$
                           5584 ;	Peephole 300	removed redundant label 00130$
                           5585 ;	genAssign
   1549 7B 01              5586 	mov	r3,#0x01
                           5587 ;	Peephole 112.b	changed ljmp to sjmp
   154B 80 02              5588 	sjmp	00115$
   154D                    5589 00114$:
                           5590 ;	genAssign
   154D 7B 00              5591 	mov	r3,#0x00
   154F                    5592 00115$:
                           5593 ;	genAssign
   154F 90s01r74           5594 	mov	dptr,#_GLCD_WriteChar_lcd_chip_1_1
   1552 EB                 5595 	mov	a,r3
   1553 F0                 5596 	movx	@dptr,a
                           5597 ;	lcd.c:614: unsigned char lcd_y = (line & 0x3F);
                           5598 ;	genAnd
   1554 90s01r75           5599 	mov	dptr,#_GLCD_WriteChar_lcd_y_1_1
   1557 74 3F              5600 	mov	a,#0x3F
   1559 5A                 5601 	anl	a,r2
   155A F0                 5602 	movx	@dptr,a
                           5603 ;	lcd.c:618: charToWrite -= 32;
                           5604 ;	genAssign
   155B 90s01r73           5605 	mov	dptr,#_GLCD_WriteChar_charToWrite_1_1
   155E E0                 5606 	movx	a,@dptr
                           5607 ;	genMinus
   155F FB                 5608 	mov	r3,a
                           5609 ;	Peephole 105	removed redundant mov
   1560 24 E0              5610 	add	a,#0xe0
                           5611 ;	genAssign
   1562 90s01r73           5612 	mov	dptr,#_GLCD_WriteChar_charToWrite_1_1
   1565 F0                 5613 	movx	@dptr,a
                           5614 ;	lcd.c:621: if(invert)
                           5615 ;	genAssign
   1566 90s01r72           5616 	mov	dptr,#_GLCD_WriteChar_PARM_4
   1569 E0                 5617 	movx	a,@dptr
                           5618 ;	genIfx
   156A FB                 5619 	mov	r3,a
                           5620 ;	Peephole 105	removed redundant mov
                           5621 ;	genIfxJump
   156B 70 03              5622 	jnz	00131$
   156D 02s16r5D           5623 	ljmp	00127$
   1570                    5624 00131$:
                           5625 ;	lcd.c:624: for(i = 0; i < 5; i++)
                           5626 ;	genAssign
   1570 90s01r70           5627 	mov	dptr,#_GLCD_WriteChar_PARM_2
   1573 E0                 5628 	movx	a,@dptr
   1574 FB                 5629 	mov	r3,a
                           5630 ;	genAnd
   1575 74 07              5631 	mov	a,#0x07
   1577 5B                 5632 	anl	a,r3
                           5633 ;	genOr
   1578 44 B8              5634 	orl	a,#0xB8
   157A FD                 5635 	mov	r5,a
                           5636 ;	genAssign
   157B 90s01r73           5637 	mov	dptr,#_GLCD_WriteChar_charToWrite_1_1
   157E E0                 5638 	movx	a,@dptr
   157F FC                 5639 	mov	r4,a
                           5640 ;	genMult
                           5641 ;	genMultOneByte
   1580 C2 D5              5642 	clr	F0
   1582 75 F0 05           5643 	mov	b,#0x05
   1585 EC                 5644 	mov	a,r4
   1586 30 E7 04           5645 	jnb	acc.7,00132$
   1589 B2 D5              5646 	cpl	F0
   158B F4                 5647 	cpl	a
   158C 04                 5648 	inc	a
   158D                    5649 00132$:
   158D A4                 5650 	mul	ab
   158E 30 D5 0A           5651 	jnb	F0,00133$
   1591 F4                 5652 	cpl	a
   1592 24 01              5653 	add	a,#1
   1594 C5 F0              5654 	xch	a,b
   1596 F4                 5655 	cpl	a
   1597 34 00              5656 	addc	a,#0
   1599 C5 F0              5657 	xch	a,b
   159B                    5658 00133$:
   159B F5*00              5659 	mov	_GLCD_WriteChar_sloc1_1_0,a
   159D 85 F0*01           5660 	mov	(_GLCD_WriteChar_sloc1_1_0 + 1),b
                           5661 ;	genAssign
   15A0 8A 06              5662 	mov	ar6,r2
                           5663 ;	genAssign
   15A2 7F 00              5664 	mov	r7,#0x00
   15A4 78 00              5665 	mov	r0,#0x00
   15A6                    5666 00104$:
                           5667 ;	genCmpLt
                           5668 ;	genCmp
   15A6 C3                 5669 	clr	c
   15A7 EF                 5670 	mov	a,r7
   15A8 94 05              5671 	subb	a,#0x05
   15AA E8                 5672 	mov	a,r0
   15AB 64 80              5673 	xrl	a,#0x80
   15AD 94 80              5674 	subb	a,#0x80
                           5675 ;	genIfxJump
   15AF 40 01              5676 	jc	00134$
                           5677 ;	Peephole 251.a	replaced ljmp to ret with ret
   15B1 22                 5678 	ret
   15B2                    5679 00134$:
                           5680 ;	lcd.c:628: lcd_write_wait(lcd_chip, LCD_INST, LCD_YADDR(lcd_y));
                           5681 ;	genAssign
   15B2 90s01r74           5682 	mov	dptr,#_GLCD_WriteChar_lcd_chip_1_1
   15B5 E0                 5683 	movx	a,@dptr
   15B6 F9                 5684 	mov	r1,a
                           5685 ;	genAssign
   15B7 90s01r75           5686 	mov	dptr,#_GLCD_WriteChar_lcd_y_1_1
   15BA E0                 5687 	movx	a,@dptr
   15BB FB                 5688 	mov	r3,a
                           5689 ;	genAnd
   15BC 74 3F              5690 	mov	a,#0x3F
   15BE 5B                 5691 	anl	a,r3
                           5692 ;	genOr
   15BF 44 40              5693 	orl	a,#0x40
   15C1 FB                 5694 	mov	r3,a
                           5695 ;	genAssign
   15C2 90s00r08           5696 	mov	dptr,#_lcd_write_wait_PARM_2
                           5697 ;	Peephole 181	changed mov to clr
   15C5 E4                 5698 	clr	a
   15C6 F0                 5699 	movx	@dptr,a
                           5700 ;	genAssign
   15C7 90s00r09           5701 	mov	dptr,#_lcd_write_wait_PARM_3
   15CA EB                 5702 	mov	a,r3
   15CB F0                 5703 	movx	@dptr,a
                           5704 ;	genCall
   15CC 89 82              5705 	mov	dpl,r1
   15CE C0 05              5706 	push	ar5
   15D0 C0 06              5707 	push	ar6
   15D2 C0 07              5708 	push	ar7
   15D4 C0 00              5709 	push	ar0
   15D6 C0 01              5710 	push	ar1
   15D8 12s00rEF           5711 	lcall	_lcd_write_wait
   15DB D0 01              5712 	pop	ar1
   15DD D0 00              5713 	pop	ar0
   15DF D0 07              5714 	pop	ar7
   15E1 D0 06              5715 	pop	ar6
   15E3 D0 05              5716 	pop	ar5
                           5717 ;	lcd.c:629: lcd_write_wait(lcd_chip, LCD_INST, LCD_XADDR(page));
                           5718 ;	genAssign
   15E5 90s00r08           5719 	mov	dptr,#_lcd_write_wait_PARM_2
                           5720 ;	Peephole 181	changed mov to clr
   15E8 E4                 5721 	clr	a
   15E9 F0                 5722 	movx	@dptr,a
                           5723 ;	genAssign
   15EA 90s00r09           5724 	mov	dptr,#_lcd_write_wait_PARM_3
   15ED ED                 5725 	mov	a,r5
   15EE F0                 5726 	movx	@dptr,a
                           5727 ;	genCall
   15EF 89 82              5728 	mov	dpl,r1
   15F1 C0 05              5729 	push	ar5
   15F3 C0 06              5730 	push	ar6
   15F5 C0 07              5731 	push	ar7
   15F7 C0 00              5732 	push	ar0
   15F9 C0 01              5733 	push	ar1
   15FB 12s00rEF           5734 	lcall	_lcd_write_wait
   15FE D0 01              5735 	pop	ar1
   1600 D0 00              5736 	pop	ar0
   1602 D0 07              5737 	pop	ar7
   1604 D0 06              5738 	pop	ar6
   1606 D0 05              5739 	pop	ar5
                           5740 ;	lcd.c:630: lcd_write_wait(lcd_chip, LCD_DATA, ~font5x8[(charToWrite * 5 + i)]);
                           5741 ;	genPlus
                           5742 ;	Peephole 236.g	used r7 instead of ar7
   1608 EF                 5743 	mov	a,r7
   1609 25*00              5744 	add	a,_GLCD_WriteChar_sloc1_1_0
   160B FB                 5745 	mov	r3,a
                           5746 ;	Peephole 236.g	used r0 instead of ar0
   160C E8                 5747 	mov	a,r0
   160D 35*01              5748 	addc	a,(_GLCD_WriteChar_sloc1_1_0 + 1)
   160F FC                 5749 	mov	r4,a
                           5750 ;	genPlus
                           5751 ;	Peephole 236.g	used r3 instead of ar3
   1610 EB                 5752 	mov	a,r3
   1611 24r00              5753 	add	a,#_font5x8
   1613 F5 82              5754 	mov	dpl,a
                           5755 ;	Peephole 236.g	used r4 instead of ar4
   1615 EC                 5756 	mov	a,r4
   1616 34s00              5757 	addc	a,#(_font5x8 >> 8)
   1618 F5 83              5758 	mov	dph,a
                           5759 ;	genPointerGet
                           5760 ;	genCodePointerGet
   161A E4                 5761 	clr	a
   161B 93                 5762 	movc	a,@a+dptr
                           5763 ;	genCpl
                           5764 ;	Peephole 105	removed redundant mov
                           5765 ;	Peephole 184	removed redundant mov
   161C F4                 5766 	cpl	a
   161D FB                 5767 	mov	r3,a
                           5768 ;	genAssign
   161E 90s00r08           5769 	mov	dptr,#_lcd_write_wait_PARM_2
   1621 74 01              5770 	mov	a,#0x01
   1623 F0                 5771 	movx	@dptr,a
                           5772 ;	genAssign
   1624 90s00r09           5773 	mov	dptr,#_lcd_write_wait_PARM_3
   1627 EB                 5774 	mov	a,r3
   1628 F0                 5775 	movx	@dptr,a
                           5776 ;	genCall
   1629 89 82              5777 	mov	dpl,r1
   162B C0 05              5778 	push	ar5
   162D C0 06              5779 	push	ar6
   162F C0 07              5780 	push	ar7
   1631 C0 00              5781 	push	ar0
   1633 12s00rEF           5782 	lcall	_lcd_write_wait
   1636 D0 00              5783 	pop	ar0
   1638 D0 07              5784 	pop	ar7
   163A D0 06              5785 	pop	ar6
   163C D0 05              5786 	pop	ar5
                           5787 ;	lcd.c:632: lcd_chip = (++line & 0x40) ? 1 : 0;
                           5788 ;	genPlus
                           5789 ;     genPlusIncr
   163E 0E                 5790 	inc	r6
                           5791 ;	genAnd
   163F EE                 5792 	mov	a,r6
                           5793 ;	genIfxJump
                           5794 ;	Peephole 108.d	removed ljmp by inverse jump logic
   1640 30 E6 04           5795 	jnb	acc.6,00116$
                           5796 ;	Peephole 300	removed redundant label 00135$
                           5797 ;	genAssign
   1643 7B 01              5798 	mov	r3,#0x01
                           5799 ;	Peephole 112.b	changed ljmp to sjmp
   1645 80 02              5800 	sjmp	00117$
   1647                    5801 00116$:
                           5802 ;	genAssign
   1647 7B 00              5803 	mov	r3,#0x00
   1649                    5804 00117$:
                           5805 ;	genAssign
   1649 90s01r74           5806 	mov	dptr,#_GLCD_WriteChar_lcd_chip_1_1
   164C EB                 5807 	mov	a,r3
   164D F0                 5808 	movx	@dptr,a
                           5809 ;	lcd.c:633: lcd_y = (line & 0x3F);
                           5810 ;	genAnd
   164E 90s01r75           5811 	mov	dptr,#_GLCD_WriteChar_lcd_y_1_1
   1651 74 3F              5812 	mov	a,#0x3F
   1653 5E                 5813 	anl	a,r6
   1654 F0                 5814 	movx	@dptr,a
                           5815 ;	lcd.c:624: for(i = 0; i < 5; i++)
                           5816 ;	genPlus
                           5817 ;     genPlusIncr
   1655 0F                 5818 	inc	r7
   1656 BF 00 01           5819 	cjne	r7,#0x00,00136$
   1659 08                 5820 	inc	r0
   165A                    5821 00136$:
   165A 02s15rA6           5822 	ljmp	00104$
                           5823 ;	lcd.c:638: for(i = 0; i < 5; i++)
   165D                    5824 00127$:
                           5825 ;	genAssign
   165D 90s01r70           5826 	mov	dptr,#_GLCD_WriteChar_PARM_2
   1660 E0                 5827 	movx	a,@dptr
   1661 FB                 5828 	mov	r3,a
                           5829 ;	genAnd
   1662 74 07              5830 	mov	a,#0x07
   1664 5B                 5831 	anl	a,r3
                           5832 ;	genOr
   1665 44 B8              5833 	orl	a,#0xB8
   1667 FB                 5834 	mov	r3,a
                           5835 ;	genAssign
   1668 90s01r73           5836 	mov	dptr,#_GLCD_WriteChar_charToWrite_1_1
   166B E0                 5837 	movx	a,@dptr
   166C FC                 5838 	mov	r4,a
                           5839 ;	genMult
                           5840 ;	genMultOneByte
   166D C2 D5              5841 	clr	F0
   166F 75 F0 05           5842 	mov	b,#0x05
   1672 EC                 5843 	mov	a,r4
   1673 30 E7 04           5844 	jnb	acc.7,00137$
   1676 B2 D5              5845 	cpl	F0
   1678 F4                 5846 	cpl	a
   1679 04                 5847 	inc	a
   167A                    5848 00137$:
   167A A4                 5849 	mul	ab
   167B 30 D5 0A           5850 	jnb	F0,00138$
   167E F4                 5851 	cpl	a
   167F 24 01              5852 	add	a,#1
   1681 C5 F0              5853 	xch	a,b
   1683 F4                 5854 	cpl	a
   1684 34 00              5855 	addc	a,#0
   1686 C5 F0              5856 	xch	a,b
   1688                    5857 00138$:
   1688 FC                 5858 	mov	r4,a
   1689 AD F0              5859 	mov	r5,b
                           5860 ;	genAssign
                           5861 ;	genAssign
   168B 7E 00              5862 	mov	r6,#0x00
   168D 7F 00              5863 	mov	r7,#0x00
   168F                    5864 00108$:
                           5865 ;	genCmpLt
                           5866 ;	genCmp
   168F C3                 5867 	clr	c
   1690 EE                 5868 	mov	a,r6
   1691 94 05              5869 	subb	a,#0x05
   1693 EF                 5870 	mov	a,r7
   1694 64 80              5871 	xrl	a,#0x80
   1696 94 80              5872 	subb	a,#0x80
                           5873 ;	genIfxJump
   1698 40 01              5874 	jc	00139$
                           5875 ;	Peephole 251.a	replaced ljmp to ret with ret
   169A 22                 5876 	ret
   169B                    5877 00139$:
                           5878 ;	lcd.c:642: lcd_write_wait(lcd_chip, LCD_INST, LCD_YADDR(lcd_y));
                           5879 ;	genAssign
   169B 90s01r74           5880 	mov	dptr,#_GLCD_WriteChar_lcd_chip_1_1
   169E E0                 5881 	movx	a,@dptr
   169F F8                 5882 	mov	r0,a
                           5883 ;	genAssign
   16A0 90s01r75           5884 	mov	dptr,#_GLCD_WriteChar_lcd_y_1_1
   16A3 E0                 5885 	movx	a,@dptr
   16A4 F9                 5886 	mov	r1,a
                           5887 ;	genAnd
   16A5 74 3F              5888 	mov	a,#0x3F
   16A7 59                 5889 	anl	a,r1
                           5890 ;	genOr
   16A8 44 40              5891 	orl	a,#0x40
   16AA F9                 5892 	mov	r1,a
                           5893 ;	genAssign
   16AB 90s00r08           5894 	mov	dptr,#_lcd_write_wait_PARM_2
                           5895 ;	Peephole 181	changed mov to clr
   16AE E4                 5896 	clr	a
   16AF F0                 5897 	movx	@dptr,a
                           5898 ;	genAssign
   16B0 90s00r09           5899 	mov	dptr,#_lcd_write_wait_PARM_3
   16B3 E9                 5900 	mov	a,r1
   16B4 F0                 5901 	movx	@dptr,a
                           5902 ;	genCall
   16B5 88 82              5903 	mov	dpl,r0
   16B7 C0 02              5904 	push	ar2
   16B9 C0 03              5905 	push	ar3
   16BB C0 04              5906 	push	ar4
   16BD C0 05              5907 	push	ar5
   16BF C0 06              5908 	push	ar6
   16C1 C0 07              5909 	push	ar7
   16C3 C0 00              5910 	push	ar0
   16C5 12s00rEF           5911 	lcall	_lcd_write_wait
   16C8 D0 00              5912 	pop	ar0
   16CA D0 07              5913 	pop	ar7
   16CC D0 06              5914 	pop	ar6
   16CE D0 05              5915 	pop	ar5
   16D0 D0 04              5916 	pop	ar4
   16D2 D0 03              5917 	pop	ar3
   16D4 D0 02              5918 	pop	ar2
                           5919 ;	lcd.c:643: lcd_write_wait(lcd_chip, LCD_INST, LCD_XADDR(page));
                           5920 ;	genAssign
   16D6 90s00r08           5921 	mov	dptr,#_lcd_write_wait_PARM_2
                           5922 ;	Peephole 181	changed mov to clr
   16D9 E4                 5923 	clr	a
   16DA F0                 5924 	movx	@dptr,a
                           5925 ;	genAssign
   16DB 90s00r09           5926 	mov	dptr,#_lcd_write_wait_PARM_3
   16DE EB                 5927 	mov	a,r3
   16DF F0                 5928 	movx	@dptr,a
                           5929 ;	genCall
   16E0 88 82              5930 	mov	dpl,r0
   16E2 C0 02              5931 	push	ar2
   16E4 C0 03              5932 	push	ar3
   16E6 C0 04              5933 	push	ar4
   16E8 C0 05              5934 	push	ar5
   16EA C0 06              5935 	push	ar6
   16EC C0 07              5936 	push	ar7
   16EE C0 00              5937 	push	ar0
   16F0 12s00rEF           5938 	lcall	_lcd_write_wait
   16F3 D0 00              5939 	pop	ar0
   16F5 D0 07              5940 	pop	ar7
   16F7 D0 06              5941 	pop	ar6
   16F9 D0 05              5942 	pop	ar5
   16FB D0 04              5943 	pop	ar4
   16FD D0 03              5944 	pop	ar3
   16FF D0 02              5945 	pop	ar2
                           5946 ;	lcd.c:644: lcd_write_wait(lcd_chip, LCD_DATA, font5x8[(charToWrite * 5 + i)]);
                           5947 ;	genIpush
   1701 C0 03              5948 	push	ar3
                           5949 ;	genPlus
                           5950 ;	Peephole 236.g	used r6 instead of ar6
   1703 EE                 5951 	mov	a,r6
                           5952 ;	Peephole 236.a	used r4 instead of ar4
   1704 2C                 5953 	add	a,r4
   1705 F9                 5954 	mov	r1,a
                           5955 ;	Peephole 236.g	used r7 instead of ar7
   1706 EF                 5956 	mov	a,r7
                           5957 ;	Peephole 236.b	used r5 instead of ar5
   1707 3D                 5958 	addc	a,r5
   1708 FB                 5959 	mov	r3,a
                           5960 ;	genPlus
                           5961 ;	Peephole 236.g	used r1 instead of ar1
   1709 E9                 5962 	mov	a,r1
   170A 24r00              5963 	add	a,#_font5x8
   170C F5 82              5964 	mov	dpl,a
                           5965 ;	Peephole 236.g	used r3 instead of ar3
   170E EB                 5966 	mov	a,r3
   170F 34s00              5967 	addc	a,#(_font5x8 >> 8)
   1711 F5 83              5968 	mov	dph,a
                           5969 ;	genPointerGet
                           5970 ;	genCodePointerGet
   1713 E4                 5971 	clr	a
   1714 93                 5972 	movc	a,@a+dptr
   1715 FB                 5973 	mov	r3,a
                           5974 ;	genAssign
   1716 90s00r08           5975 	mov	dptr,#_lcd_write_wait_PARM_2
   1719 74 01              5976 	mov	a,#0x01
   171B F0                 5977 	movx	@dptr,a
                           5978 ;	genAssign
   171C 90s00r09           5979 	mov	dptr,#_lcd_write_wait_PARM_3
   171F EB                 5980 	mov	a,r3
   1720 F0                 5981 	movx	@dptr,a
                           5982 ;	genCall
   1721 88 82              5983 	mov	dpl,r0
   1723 C0 02              5984 	push	ar2
   1725 C0 03              5985 	push	ar3
   1727 C0 04              5986 	push	ar4
   1729 C0 05              5987 	push	ar5
   172B C0 06              5988 	push	ar6
   172D C0 07              5989 	push	ar7
   172F 12s00rEF           5990 	lcall	_lcd_write_wait
   1732 D0 07              5991 	pop	ar7
   1734 D0 06              5992 	pop	ar6
   1736 D0 05              5993 	pop	ar5
   1738 D0 04              5994 	pop	ar4
   173A D0 03              5995 	pop	ar3
   173C D0 02              5996 	pop	ar2
                           5997 ;	lcd.c:646: lcd_chip = (++line & 0x40) ? 1 : 0;
                           5998 ;	genPlus
                           5999 ;     genPlusIncr
   173E 0A                 6000 	inc	r2
                           6001 ;	genAnd
   173F EA                 6002 	mov	a,r2
   1740 54 40              6003 	anl	a,#0x40
                           6004 ;	genIpop
   1742 D0 03              6005 	pop	ar3
                           6006 ;	genIfx
                           6007 ;	genIfxJump
                           6008 ;	Peephole 108.c	removed ljmp by inverse jump logic
   1744 60 04              6009 	jz	00118$
                           6010 ;	Peephole 300	removed redundant label 00140$
                           6011 ;	genAssign
   1746 78 01              6012 	mov	r0,#0x01
                           6013 ;	Peephole 112.b	changed ljmp to sjmp
   1748 80 02              6014 	sjmp	00119$
   174A                    6015 00118$:
                           6016 ;	genAssign
   174A 78 00              6017 	mov	r0,#0x00
   174C                    6018 00119$:
                           6019 ;	genAssign
   174C 90s01r74           6020 	mov	dptr,#_GLCD_WriteChar_lcd_chip_1_1
   174F E8                 6021 	mov	a,r0
   1750 F0                 6022 	movx	@dptr,a
                           6023 ;	lcd.c:647: lcd_y = (line & 0x3F);
                           6024 ;	genAnd
   1751 90s01r75           6025 	mov	dptr,#_GLCD_WriteChar_lcd_y_1_1
   1754 74 3F              6026 	mov	a,#0x3F
   1756 5A                 6027 	anl	a,r2
   1757 F0                 6028 	movx	@dptr,a
                           6029 ;	lcd.c:638: for(i = 0; i < 5; i++)
                           6030 ;	genPlus
                           6031 ;     genPlusIncr
   1758 0E                 6032 	inc	r6
   1759 BE 00 01           6033 	cjne	r6,#0x00,00141$
   175C 0F                 6034 	inc	r7
   175D                    6035 00141$:
   175D 02s16r8F           6036 	ljmp	00108$
                           6037 ;	Peephole 259.b	removed redundant label 00112$ and ret
                           6038 ;
                           6039 ;------------------------------------------------------------
                           6040 ;Allocation info for local variables in function 'GLCD_WriteBrick'
                           6041 ;------------------------------------------------------------
                           6042 ;sloc0                     Allocated with name '_GLCD_WriteBrick_sloc0_1_0'
                           6043 ;page                      Allocated with name '_GLCD_WriteBrick_PARM_2'
                           6044 ;line                      Allocated with name '_GLCD_WriteBrick_PARM_3'
                           6045 ;solid                     Allocated with name '_GLCD_WriteBrick_PARM_4'
                           6046 ;charToWrite               Allocated with name '_GLCD_WriteBrick_charToWrite_1_1'
                           6047 ;lcd_chip                  Allocated with name '_GLCD_WriteBrick_lcd_chip_1_1'
                           6048 ;lcd_y                     Allocated with name '_GLCD_WriteBrick_lcd_y_1_1'
                           6049 ;char_lines                Allocated with name '_GLCD_WriteBrick_char_lines_1_1'
                           6050 ;i                         Allocated with name '_GLCD_WriteBrick_i_1_1'
                           6051 ;------------------------------------------------------------
                           6052 ;	lcd.c:654: void GLCD_WriteBrick(unsigned int charToWrite, unsigned char page, int line, unsigned char solid)
                           6053 ;	-----------------------------------------
                           6054 ;	 function GLCD_WriteBrick
                           6055 ;	-----------------------------------------
   1760                    6056 _GLCD_WriteBrick:
                           6057 ;	genReceive
   1760 AA 83              6058 	mov	r2,dph
   1762 E5 82              6059 	mov	a,dpl
   1764 90s01r7A           6060 	mov	dptr,#_GLCD_WriteBrick_charToWrite_1_1
   1767 F0                 6061 	movx	@dptr,a
   1768 A3                 6062 	inc	dptr
   1769 EA                 6063 	mov	a,r2
   176A F0                 6064 	movx	@dptr,a
                           6065 ;	lcd.c:657: unsigned char lcd_chip = (line & 0x40) ? 1 : 0;
                           6066 ;	genAssign
   176B 90s01r77           6067 	mov	dptr,#_GLCD_WriteBrick_PARM_3
   176E E0                 6068 	movx	a,@dptr
   176F FA                 6069 	mov	r2,a
   1770 A3                 6070 	inc	dptr
   1771 E0                 6071 	movx	a,@dptr
   1772 FB                 6072 	mov	r3,a
                           6073 ;	genAnd
   1773 EA                 6074 	mov	a,r2
                           6075 ;	genIfxJump
                           6076 ;	Peephole 108.d	removed ljmp by inverse jump logic
   1774 30 E6 04           6077 	jnb	acc.6,00114$
                           6078 ;	Peephole 300	removed redundant label 00126$
                           6079 ;	genAssign
   1777 7C 01              6080 	mov	r4,#0x01
                           6081 ;	Peephole 112.b	changed ljmp to sjmp
   1779 80 02              6082 	sjmp	00115$
   177B                    6083 00114$:
                           6084 ;	genAssign
   177B 7C 00              6085 	mov	r4,#0x00
   177D                    6086 00115$:
                           6087 ;	genAssign
   177D 90s01r7C           6088 	mov	dptr,#_GLCD_WriteBrick_lcd_chip_1_1
   1780 EC                 6089 	mov	a,r4
   1781 F0                 6090 	movx	@dptr,a
                           6091 ;	lcd.c:658: unsigned char lcd_y = (line & 0x3F);
                           6092 ;	genAnd
   1782 74 3F              6093 	mov	a,#0x3F
   1784 5A                 6094 	anl	a,r2
   1785 FC                 6095 	mov	r4,a
   1786 7D 00              6096 	mov	r5,#0x00
                           6097 ;	genCast
   1788 90s01r7D           6098 	mov	dptr,#_GLCD_WriteBrick_lcd_y_1_1
   178B EC                 6099 	mov	a,r4
   178C F0                 6100 	movx	@dptr,a
                           6101 ;	lcd.c:664: if(!solid)
                           6102 ;	genAssign
   178D 90s01r79           6103 	mov	dptr,#_GLCD_WriteBrick_PARM_4
   1790 E0                 6104 	movx	a,@dptr
                           6105 ;	genIfx
   1791 FC                 6106 	mov	r4,a
                           6107 ;	Peephole 105	removed redundant mov
                           6108 ;	genIfxJump
                           6109 ;	Peephole 108.b	removed ljmp by inverse jump logic
   1792 70 08              6110 	jnz	00102$
                           6111 ;	Peephole 300	removed redundant label 00127$
                           6112 ;	lcd.c:665: char_lines = 7;
                           6113 ;	genAssign
   1794 90s01r7E           6114 	mov	dptr,#_GLCD_WriteBrick_char_lines_1_1
   1797 74 07              6115 	mov	a,#0x07
   1799 F0                 6116 	movx	@dptr,a
                           6117 ;	Peephole 112.b	changed ljmp to sjmp
   179A 80 06              6118 	sjmp	00124$
   179C                    6119 00102$:
                           6120 ;	lcd.c:667: char_lines = 5;
                           6121 ;	genAssign
   179C 90s01r7E           6122 	mov	dptr,#_GLCD_WriteBrick_char_lines_1_1
   179F 74 05              6123 	mov	a,#0x05
   17A1 F0                 6124 	movx	@dptr,a
                           6125 ;	lcd.c:670: for(i = 0; i < char_lines; i++)
   17A2                    6126 00124$:
                           6127 ;	genAssign
   17A2 90s01r76           6128 	mov	dptr,#_GLCD_WriteBrick_PARM_2
   17A5 E0                 6129 	movx	a,@dptr
   17A6 FC                 6130 	mov	r4,a
                           6131 ;	genAnd
   17A7 74 07              6132 	mov	a,#0x07
   17A9 5C                 6133 	anl	a,r4
                           6134 ;	genOr
   17AA 44 B8              6135 	orl	a,#0xB8
   17AC FC                 6136 	mov	r4,a
                           6137 ;	genAssign
   17AD 90s01r7A           6138 	mov	dptr,#_GLCD_WriteBrick_charToWrite_1_1
   17B0 E0                 6139 	movx	a,@dptr
   17B1 FD                 6140 	mov	r5,a
   17B2 A3                 6141 	inc	dptr
   17B3 E0                 6142 	movx	a,@dptr
   17B4 FE                 6143 	mov	r6,a
                           6144 ;	genAssign
   17B5 90s01r7E           6145 	mov	dptr,#_GLCD_WriteBrick_char_lines_1_1
   17B8 E0                 6146 	movx	a,@dptr
   17B9 F5*02              6147 	mov	_GLCD_WriteBrick_sloc0_1_0,a
                           6148 ;	genAssign
                           6149 ;	genAssign
   17BB 78 00              6150 	mov	r0,#0x00
   17BD 79 00              6151 	mov	r1,#0x00
   17BF                    6152 00108$:
                           6153 ;	genIpush
   17BF C0 04              6154 	push	ar4
                           6155 ;	genCast
   17C1 AC*02              6156 	mov	r4,_GLCD_WriteBrick_sloc0_1_0
   17C3 7F 00              6157 	mov	r7,#0x00
                           6158 ;	genCmpLt
                           6159 ;	genCmp
   17C5 C3                 6160 	clr	c
   17C6 E8                 6161 	mov	a,r0
   17C7 9C                 6162 	subb	a,r4
   17C8 E9                 6163 	mov	a,r1
   17C9 64 80              6164 	xrl	a,#0x80
   17CB 8F F0              6165 	mov	b,r7
   17CD 63 F0 80           6166 	xrl	b,#0x80
   17D0 95 F0              6167 	subb	a,b
                           6168 ;	genIpop
                           6169 ;	genIfx
                           6170 ;	genIfxJump
                           6171 ;	Peephole 129.b	optimized condition
   17D2 D0 04              6172 	pop	ar4
   17D4 40 01              6173 	jc	00128$
                           6174 ;	Peephole 251.a	replaced ljmp to ret with ret
   17D6 22                 6175 	ret
   17D7                    6176 00128$:
                           6177 ;	lcd.c:674: if(line > 127)
                           6178 ;	genCmpGt
                           6179 ;	genCmp
   17D7 C3                 6180 	clr	c
   17D8 74 7F              6181 	mov	a,#0x7F
   17DA 9A                 6182 	subb	a,r2
                           6183 ;	Peephole 159	avoided xrl during execution
   17DB 74 80              6184 	mov	a,#(0x00 ^ 0x80)
   17DD 8B F0              6185 	mov	b,r3
   17DF 63 F0 80           6186 	xrl	b,#0x80
   17E2 95 F0              6187 	subb	a,b
                           6188 ;	genIfxJump
   17E4 50 01              6189 	jnc	00129$
                           6190 ;	Peephole 251.a	replaced ljmp to ret with ret
   17E6 22                 6191 	ret
   17E7                    6192 00129$:
                           6193 ;	lcd.c:677: if(line >= 0)
                           6194 ;	genCmpLt
                           6195 ;	genCmp
   17E7 EB                 6196 	mov	a,r3
                           6197 ;	genIfxJump
   17E8 30 E7 03           6198 	jnb	acc.7,00130$
   17EB 02s18rA4           6199 	ljmp	00107$
   17EE                    6200 00130$:
                           6201 ;	lcd.c:680: lcd_write_wait(lcd_chip, LCD_INST, LCD_YADDR(lcd_y));
                           6202 ;	genIpush
   17EE C0 02              6203 	push	ar2
   17F0 C0 03              6204 	push	ar3
                           6205 ;	genAssign
   17F2 90s01r7C           6206 	mov	dptr,#_GLCD_WriteBrick_lcd_chip_1_1
   17F5 E0                 6207 	movx	a,@dptr
   17F6 FF                 6208 	mov	r7,a
                           6209 ;	genAssign
   17F7 90s01r7D           6210 	mov	dptr,#_GLCD_WriteBrick_lcd_y_1_1
   17FA E0                 6211 	movx	a,@dptr
   17FB FA                 6212 	mov	r2,a
                           6213 ;	genAnd
   17FC 74 3F              6214 	mov	a,#0x3F
   17FE 5A                 6215 	anl	a,r2
                           6216 ;	genOr
   17FF 44 40              6217 	orl	a,#0x40
   1801 FA                 6218 	mov	r2,a
                           6219 ;	genAssign
   1802 90s00r08           6220 	mov	dptr,#_lcd_write_wait_PARM_2
                           6221 ;	Peephole 181	changed mov to clr
   1805 E4                 6222 	clr	a
   1806 F0                 6223 	movx	@dptr,a
                           6224 ;	genAssign
   1807 90s00r09           6225 	mov	dptr,#_lcd_write_wait_PARM_3
   180A EA                 6226 	mov	a,r2
   180B F0                 6227 	movx	@dptr,a
                           6228 ;	genCall
   180C 8F 82              6229 	mov	dpl,r7
   180E C0 02              6230 	push	ar2
   1810 C0 03              6231 	push	ar3
   1812 C0 04              6232 	push	ar4
   1814 C0 05              6233 	push	ar5
   1816 C0 06              6234 	push	ar6
   1818 C0 07              6235 	push	ar7
   181A C0 00              6236 	push	ar0
   181C C0 01              6237 	push	ar1
   181E 12s00rEF           6238 	lcall	_lcd_write_wait
   1821 D0 01              6239 	pop	ar1
   1823 D0 00              6240 	pop	ar0
   1825 D0 07              6241 	pop	ar7
   1827 D0 06              6242 	pop	ar6
   1829 D0 05              6243 	pop	ar5
   182B D0 04              6244 	pop	ar4
   182D D0 03              6245 	pop	ar3
   182F D0 02              6246 	pop	ar2
                           6247 ;	lcd.c:681: lcd_write_wait(lcd_chip, LCD_INST, LCD_XADDR(page));
                           6248 ;	genAssign
   1831 90s00r08           6249 	mov	dptr,#_lcd_write_wait_PARM_2
                           6250 ;	Peephole 181	changed mov to clr
   1834 E4                 6251 	clr	a
   1835 F0                 6252 	movx	@dptr,a
                           6253 ;	genAssign
   1836 90s00r09           6254 	mov	dptr,#_lcd_write_wait_PARM_3
   1839 EC                 6255 	mov	a,r4
   183A F0                 6256 	movx	@dptr,a
                           6257 ;	genCall
   183B 8F 82              6258 	mov	dpl,r7
   183D C0 02              6259 	push	ar2
   183F C0 03              6260 	push	ar3
   1841 C0 04              6261 	push	ar4
   1843 C0 05              6262 	push	ar5
   1845 C0 06              6263 	push	ar6
   1847 C0 07              6264 	push	ar7
   1849 C0 00              6265 	push	ar0
   184B C0 01              6266 	push	ar1
   184D 12s00rEF           6267 	lcall	_lcd_write_wait
   1850 D0 01              6268 	pop	ar1
   1852 D0 00              6269 	pop	ar0
   1854 D0 07              6270 	pop	ar7
   1856 D0 06              6271 	pop	ar6
   1858 D0 05              6272 	pop	ar5
   185A D0 04              6273 	pop	ar4
   185C D0 03              6274 	pop	ar3
   185E D0 02              6275 	pop	ar2
                           6276 ;	lcd.c:682: lcd_write_wait(lcd_chip, LCD_DATA, ~font5x8[(charToWrite + i)]);
                           6277 ;	genPlus
                           6278 ;	Peephole 236.g	used r0 instead of ar0
   1860 E8                 6279 	mov	a,r0
                           6280 ;	Peephole 236.a	used r5 instead of ar5
   1861 2D                 6281 	add	a,r5
   1862 FA                 6282 	mov	r2,a
                           6283 ;	Peephole 236.g	used r1 instead of ar1
   1863 E9                 6284 	mov	a,r1
                           6285 ;	Peephole 236.b	used r6 instead of ar6
   1864 3E                 6286 	addc	a,r6
   1865 FB                 6287 	mov	r3,a
                           6288 ;	genPlus
                           6289 ;	Peephole 236.g	used r2 instead of ar2
   1866 EA                 6290 	mov	a,r2
   1867 24r00              6291 	add	a,#_font5x8
   1869 F5 82              6292 	mov	dpl,a
                           6293 ;	Peephole 236.g	used r3 instead of ar3
   186B EB                 6294 	mov	a,r3
   186C 34s00              6295 	addc	a,#(_font5x8 >> 8)
   186E F5 83              6296 	mov	dph,a
                           6297 ;	genPointerGet
                           6298 ;	genCodePointerGet
   1870 E4                 6299 	clr	a
   1871 93                 6300 	movc	a,@a+dptr
                           6301 ;	genCpl
                           6302 ;	Peephole 105	removed redundant mov
                           6303 ;	Peephole 184	removed redundant mov
   1872 F4                 6304 	cpl	a
   1873 FA                 6305 	mov	r2,a
                           6306 ;	genAssign
   1874 90s00r08           6307 	mov	dptr,#_lcd_write_wait_PARM_2
   1877 74 01              6308 	mov	a,#0x01
   1879 F0                 6309 	movx	@dptr,a
                           6310 ;	genAssign
   187A 90s00r09           6311 	mov	dptr,#_lcd_write_wait_PARM_3
   187D EA                 6312 	mov	a,r2
   187E F0                 6313 	movx	@dptr,a
                           6314 ;	genCall
   187F 8F 82              6315 	mov	dpl,r7
   1881 C0 02              6316 	push	ar2
   1883 C0 03              6317 	push	ar3
   1885 C0 04              6318 	push	ar4
   1887 C0 05              6319 	push	ar5
   1889 C0 06              6320 	push	ar6
   188B C0 00              6321 	push	ar0
   188D C0 01              6322 	push	ar1
   188F 12s00rEF           6323 	lcall	_lcd_write_wait
   1892 D0 01              6324 	pop	ar1
   1894 D0 00              6325 	pop	ar0
   1896 D0 06              6326 	pop	ar6
   1898 D0 05              6327 	pop	ar5
   189A D0 04              6328 	pop	ar4
   189C D0 03              6329 	pop	ar3
   189E D0 02              6330 	pop	ar2
                           6331 ;	lcd.c:670: for(i = 0; i < char_lines; i++)
                           6332 ;	genIpop
   18A0 D0 03              6333 	pop	ar3
   18A2 D0 02              6334 	pop	ar2
                           6335 ;	lcd.c:682: lcd_write_wait(lcd_chip, LCD_DATA, ~font5x8[(charToWrite + i)]);
   18A4                    6336 00107$:
                           6337 ;	lcd.c:685: lcd_chip = (++line & 0x40) ? 1 : 0;
                           6338 ;	genPlus
                           6339 ;     genPlusIncr
   18A4 0A                 6340 	inc	r2
   18A5 BA 00 01           6341 	cjne	r2,#0x00,00131$
   18A8 0B                 6342 	inc	r3
   18A9                    6343 00131$:
                           6344 ;	genAnd
   18A9 EA                 6345 	mov	a,r2
                           6346 ;	genIfxJump
                           6347 ;	Peephole 108.d	removed ljmp by inverse jump logic
   18AA 30 E6 04           6348 	jnb	acc.6,00116$
                           6349 ;	Peephole 300	removed redundant label 00132$
                           6350 ;	genAssign
   18AD 7F 01              6351 	mov	r7,#0x01
                           6352 ;	Peephole 112.b	changed ljmp to sjmp
   18AF 80 02              6353 	sjmp	00117$
   18B1                    6354 00116$:
                           6355 ;	genAssign
   18B1 7F 00              6356 	mov	r7,#0x00
   18B3                    6357 00117$:
                           6358 ;	genIpush
   18B3 C0 04              6359 	push	ar4
                           6360 ;	genAssign
   18B5 90s01r7C           6361 	mov	dptr,#_GLCD_WriteBrick_lcd_chip_1_1
   18B8 EF                 6362 	mov	a,r7
   18B9 F0                 6363 	movx	@dptr,a
                           6364 ;	lcd.c:686: lcd_y = (line & 0x3F);
                           6365 ;	genAnd
   18BA 74 3F              6366 	mov	a,#0x3F
   18BC 5A                 6367 	anl	a,r2
   18BD FF                 6368 	mov	r7,a
   18BE 7C 00              6369 	mov	r4,#0x00
                           6370 ;	genCast
   18C0 90s01r7D           6371 	mov	dptr,#_GLCD_WriteBrick_lcd_y_1_1
   18C3 EF                 6372 	mov	a,r7
   18C4 F0                 6373 	movx	@dptr,a
                           6374 ;	lcd.c:670: for(i = 0; i < char_lines; i++)
                           6375 ;	genPlus
                           6376 ;     genPlusIncr
   18C5 08                 6377 	inc	r0
   18C6 B8 00 01           6378 	cjne	r0,#0x00,00133$
   18C9 09                 6379 	inc	r1
   18CA                    6380 00133$:
                           6381 ;	genIpop
   18CA D0 04              6382 	pop	ar4
   18CC 02s17rBF           6383 	ljmp	00108$
                           6384 ;	Peephole 259.b	removed redundant label 00112$ and ret
                           6385 ;
                           6386 ;------------------------------------------------------------
                           6387 ;Allocation info for local variables in function 'GLCD_WriteHeli'
                           6388 ;------------------------------------------------------------
                           6389 ;page                      Allocated with name '_GLCD_WriteHeli_PARM_2'
                           6390 ;line                      Allocated with name '_GLCD_WriteHeli_PARM_3'
                           6391 ;charToWrite               Allocated with name '_GLCD_WriteHeli_charToWrite_1_1'
                           6392 ;lcd_chip                  Allocated with name '_GLCD_WriteHeli_lcd_chip_1_1'
                           6393 ;lcd_y                     Allocated with name '_GLCD_WriteHeli_lcd_y_1_1'
                           6394 ;i                         Allocated with name '_GLCD_WriteHeli_i_1_1'
                           6395 ;------------------------------------------------------------
                           6396 ;	lcd.c:693: void GLCD_WriteHeli(char charToWrite, unsigned char page, unsigned char line)
                           6397 ;	-----------------------------------------
                           6398 ;	 function GLCD_WriteHeli
                           6399 ;	-----------------------------------------
   18CF                    6400 _GLCD_WriteHeli:
                           6401 ;	genReceive
   18CF E5 82              6402 	mov	a,dpl
   18D1 90s01r81           6403 	mov	dptr,#_GLCD_WriteHeli_charToWrite_1_1
   18D4 F0                 6404 	movx	@dptr,a
                           6405 ;	lcd.c:696: unsigned char lcd_chip = (line & 0x40) ? 1 : 0;
                           6406 ;	genAssign
   18D5 90s01r80           6407 	mov	dptr,#_GLCD_WriteHeli_PARM_3
   18D8 E0                 6408 	movx	a,@dptr
                           6409 ;	genAnd
   18D9 FA                 6410 	mov	r2,a
                           6411 ;	Peephole 105	removed redundant mov
                           6412 ;	genIfxJump
                           6413 ;	Peephole 108.d	removed ljmp by inverse jump logic
   18DA 30 E6 04           6414 	jnb	acc.6,00107$
                           6415 ;	Peephole 300	removed redundant label 00116$
                           6416 ;	genAssign
   18DD 7B 01              6417 	mov	r3,#0x01
                           6418 ;	Peephole 112.b	changed ljmp to sjmp
   18DF 80 02              6419 	sjmp	00108$
   18E1                    6420 00107$:
                           6421 ;	genAssign
   18E1 7B 00              6422 	mov	r3,#0x00
   18E3                    6423 00108$:
                           6424 ;	genAssign
   18E3 90s01r82           6425 	mov	dptr,#_GLCD_WriteHeli_lcd_chip_1_1
   18E6 EB                 6426 	mov	a,r3
   18E7 F0                 6427 	movx	@dptr,a
                           6428 ;	lcd.c:697: unsigned char lcd_y = (line & 0x3F);
                           6429 ;	genAnd
   18E8 90s01r83           6430 	mov	dptr,#_GLCD_WriteHeli_lcd_y_1_1
   18EB 74 3F              6431 	mov	a,#0x3F
   18ED 5A                 6432 	anl	a,r2
   18EE F0                 6433 	movx	@dptr,a
                           6434 ;	lcd.c:700: charToWrite -= 32;
                           6435 ;	genAssign
   18EF 90s01r81           6436 	mov	dptr,#_GLCD_WriteHeli_charToWrite_1_1
   18F2 E0                 6437 	movx	a,@dptr
                           6438 ;	genMinus
   18F3 FB                 6439 	mov	r3,a
                           6440 ;	Peephole 105	removed redundant mov
   18F4 24 E0              6441 	add	a,#0xe0
                           6442 ;	genAssign
   18F6 90s01r81           6443 	mov	dptr,#_GLCD_WriteHeli_charToWrite_1_1
   18F9 F0                 6444 	movx	@dptr,a
                           6445 ;	lcd.c:702: for(i = 0; i < 5; i++)
                           6446 ;	genAssign
   18FA 90s01r7F           6447 	mov	dptr,#_GLCD_WriteHeli_PARM_2
   18FD E0                 6448 	movx	a,@dptr
   18FE FB                 6449 	mov	r3,a
                           6450 ;	genAnd
   18FF 74 07              6451 	mov	a,#0x07
   1901 5B                 6452 	anl	a,r3
                           6453 ;	genOr
   1902 44 B8              6454 	orl	a,#0xB8
   1904 FB                 6455 	mov	r3,a
                           6456 ;	genAssign
   1905 90s01r81           6457 	mov	dptr,#_GLCD_WriteHeli_charToWrite_1_1
   1908 E0                 6458 	movx	a,@dptr
   1909 FC                 6459 	mov	r4,a
                           6460 ;	genMult
                           6461 ;	genMultOneByte
   190A C2 D5              6462 	clr	F0
   190C 75 F0 05           6463 	mov	b,#0x05
   190F EC                 6464 	mov	a,r4
   1910 30 E7 04           6465 	jnb	acc.7,00117$
   1913 B2 D5              6466 	cpl	F0
   1915 F4                 6467 	cpl	a
   1916 04                 6468 	inc	a
   1917                    6469 00117$:
   1917 A4                 6470 	mul	ab
   1918 30 D5 0A           6471 	jnb	F0,00118$
   191B F4                 6472 	cpl	a
   191C 24 01              6473 	add	a,#1
   191E C5 F0              6474 	xch	a,b
   1920 F4                 6475 	cpl	a
   1921 34 00              6476 	addc	a,#0
   1923 C5 F0              6477 	xch	a,b
   1925                    6478 00118$:
   1925 FC                 6479 	mov	r4,a
   1926 AD F0              6480 	mov	r5,b
                           6481 ;	genAssign
                           6482 ;	genAssign
   1928 7E 00              6483 	mov	r6,#0x00
   192A 7F 00              6484 	mov	r7,#0x00
   192C                    6485 00101$:
                           6486 ;	genCmpLt
                           6487 ;	genCmp
   192C C3                 6488 	clr	c
   192D EE                 6489 	mov	a,r6
   192E 94 05              6490 	subb	a,#0x05
   1930 EF                 6491 	mov	a,r7
   1931 64 80              6492 	xrl	a,#0x80
   1933 94 80              6493 	subb	a,#0x80
                           6494 ;	genIfxJump
   1935 40 01              6495 	jc	00119$
                           6496 ;	Peephole 251.a	replaced ljmp to ret with ret
   1937 22                 6497 	ret
   1938                    6498 00119$:
                           6499 ;	lcd.c:705: lcd_write_wait(lcd_chip, LCD_INST, LCD_YADDR(lcd_y));
                           6500 ;	genAssign
   1938 90s01r82           6501 	mov	dptr,#_GLCD_WriteHeli_lcd_chip_1_1
   193B E0                 6502 	movx	a,@dptr
   193C F8                 6503 	mov	r0,a
                           6504 ;	genAssign
   193D 90s01r83           6505 	mov	dptr,#_GLCD_WriteHeli_lcd_y_1_1
   1940 E0                 6506 	movx	a,@dptr
   1941 F9                 6507 	mov	r1,a
                           6508 ;	genAnd
   1942 74 3F              6509 	mov	a,#0x3F
   1944 59                 6510 	anl	a,r1
                           6511 ;	genOr
   1945 44 40              6512 	orl	a,#0x40
   1947 F9                 6513 	mov	r1,a
                           6514 ;	genAssign
   1948 90s00r08           6515 	mov	dptr,#_lcd_write_wait_PARM_2
                           6516 ;	Peephole 181	changed mov to clr
   194B E4                 6517 	clr	a
   194C F0                 6518 	movx	@dptr,a
                           6519 ;	genAssign
   194D 90s00r09           6520 	mov	dptr,#_lcd_write_wait_PARM_3
   1950 E9                 6521 	mov	a,r1
   1951 F0                 6522 	movx	@dptr,a
                           6523 ;	genCall
   1952 88 82              6524 	mov	dpl,r0
   1954 C0 02              6525 	push	ar2
   1956 C0 03              6526 	push	ar3
   1958 C0 04              6527 	push	ar4
   195A C0 05              6528 	push	ar5
   195C C0 06              6529 	push	ar6
   195E C0 07              6530 	push	ar7
   1960 C0 00              6531 	push	ar0
   1962 12s00rEF           6532 	lcall	_lcd_write_wait
   1965 D0 00              6533 	pop	ar0
   1967 D0 07              6534 	pop	ar7
   1969 D0 06              6535 	pop	ar6
   196B D0 05              6536 	pop	ar5
   196D D0 04              6537 	pop	ar4
   196F D0 03              6538 	pop	ar3
   1971 D0 02              6539 	pop	ar2
                           6540 ;	lcd.c:706: lcd_write_wait(lcd_chip, LCD_INST, LCD_XADDR(page));
                           6541 ;	genAssign
   1973 90s00r08           6542 	mov	dptr,#_lcd_write_wait_PARM_2
                           6543 ;	Peephole 181	changed mov to clr
   1976 E4                 6544 	clr	a
   1977 F0                 6545 	movx	@dptr,a
                           6546 ;	genAssign
   1978 90s00r09           6547 	mov	dptr,#_lcd_write_wait_PARM_3
   197B EB                 6548 	mov	a,r3
   197C F0                 6549 	movx	@dptr,a
                           6550 ;	genCall
   197D 88 82              6551 	mov	dpl,r0
   197F C0 02              6552 	push	ar2
   1981 C0 03              6553 	push	ar3
   1983 C0 04              6554 	push	ar4
   1985 C0 05              6555 	push	ar5
   1987 C0 06              6556 	push	ar6
   1989 C0 07              6557 	push	ar7
   198B C0 00              6558 	push	ar0
   198D 12s00rEF           6559 	lcall	_lcd_write_wait
   1990 D0 00              6560 	pop	ar0
   1992 D0 07              6561 	pop	ar7
   1994 D0 06              6562 	pop	ar6
   1996 D0 05              6563 	pop	ar5
   1998 D0 04              6564 	pop	ar4
   199A D0 03              6565 	pop	ar3
   199C D0 02              6566 	pop	ar2
                           6567 ;	lcd.c:707: lcd_write_wait(lcd_chip, LCD_DATA, font5x8[(charToWrite * 5 + i)]);
                           6568 ;	genIpush
   199E C0 03              6569 	push	ar3
                           6570 ;	genPlus
                           6571 ;	Peephole 236.g	used r6 instead of ar6
   19A0 EE                 6572 	mov	a,r6
                           6573 ;	Peephole 236.a	used r4 instead of ar4
   19A1 2C                 6574 	add	a,r4
   19A2 F9                 6575 	mov	r1,a
                           6576 ;	Peephole 236.g	used r7 instead of ar7
   19A3 EF                 6577 	mov	a,r7
                           6578 ;	Peephole 236.b	used r5 instead of ar5
   19A4 3D                 6579 	addc	a,r5
   19A5 FB                 6580 	mov	r3,a
                           6581 ;	genPlus
                           6582 ;	Peephole 236.g	used r1 instead of ar1
   19A6 E9                 6583 	mov	a,r1
   19A7 24r00              6584 	add	a,#_font5x8
   19A9 F5 82              6585 	mov	dpl,a
                           6586 ;	Peephole 236.g	used r3 instead of ar3
   19AB EB                 6587 	mov	a,r3
   19AC 34s00              6588 	addc	a,#(_font5x8 >> 8)
   19AE F5 83              6589 	mov	dph,a
                           6590 ;	genPointerGet
                           6591 ;	genCodePointerGet
   19B0 E4                 6592 	clr	a
   19B1 93                 6593 	movc	a,@a+dptr
   19B2 FB                 6594 	mov	r3,a
                           6595 ;	genAssign
   19B3 90s00r08           6596 	mov	dptr,#_lcd_write_wait_PARM_2
   19B6 74 01              6597 	mov	a,#0x01
   19B8 F0                 6598 	movx	@dptr,a
                           6599 ;	genAssign
   19B9 90s00r09           6600 	mov	dptr,#_lcd_write_wait_PARM_3
   19BC EB                 6601 	mov	a,r3
   19BD F0                 6602 	movx	@dptr,a
                           6603 ;	genCall
   19BE 88 82              6604 	mov	dpl,r0
   19C0 C0 02              6605 	push	ar2
   19C2 C0 03              6606 	push	ar3
   19C4 C0 04              6607 	push	ar4
   19C6 C0 05              6608 	push	ar5
   19C8 C0 06              6609 	push	ar6
   19CA C0 07              6610 	push	ar7
   19CC 12s00rEF           6611 	lcall	_lcd_write_wait
   19CF D0 07              6612 	pop	ar7
   19D1 D0 06              6613 	pop	ar6
   19D3 D0 05              6614 	pop	ar5
   19D5 D0 04              6615 	pop	ar4
   19D7 D0 03              6616 	pop	ar3
   19D9 D0 02              6617 	pop	ar2
                           6618 ;	lcd.c:709: lcd_chip = (++line & 0x40) ? 1 : 0;
                           6619 ;	genPlus
                           6620 ;     genPlusIncr
   19DB 0A                 6621 	inc	r2
                           6622 ;	genAnd
   19DC EA                 6623 	mov	a,r2
   19DD 54 40              6624 	anl	a,#0x40
                           6625 ;	genIpop
   19DF D0 03              6626 	pop	ar3
                           6627 ;	genIfx
                           6628 ;	genIfxJump
                           6629 ;	Peephole 108.c	removed ljmp by inverse jump logic
   19E1 60 04              6630 	jz	00109$
                           6631 ;	Peephole 300	removed redundant label 00120$
                           6632 ;	genAssign
   19E3 78 01              6633 	mov	r0,#0x01
                           6634 ;	Peephole 112.b	changed ljmp to sjmp
   19E5 80 02              6635 	sjmp	00110$
   19E7                    6636 00109$:
                           6637 ;	genAssign
   19E7 78 00              6638 	mov	r0,#0x00
   19E9                    6639 00110$:
                           6640 ;	genAssign
   19E9 90s01r82           6641 	mov	dptr,#_GLCD_WriteHeli_lcd_chip_1_1
   19EC E8                 6642 	mov	a,r0
   19ED F0                 6643 	movx	@dptr,a
                           6644 ;	lcd.c:710: lcd_y = (line & 0x3F);
                           6645 ;	genAnd
   19EE 90s01r83           6646 	mov	dptr,#_GLCD_WriteHeli_lcd_y_1_1
   19F1 74 3F              6647 	mov	a,#0x3F
   19F3 5A                 6648 	anl	a,r2
   19F4 F0                 6649 	movx	@dptr,a
                           6650 ;	lcd.c:702: for(i = 0; i < 5; i++)
                           6651 ;	genPlus
                           6652 ;     genPlusIncr
   19F5 0E                 6653 	inc	r6
   19F6 BE 00 01           6654 	cjne	r6,#0x00,00121$
   19F9 0F                 6655 	inc	r7
   19FA                    6656 00121$:
   19FA 02s19r2C           6657 	ljmp	00101$
                           6658 ;	Peephole 259.b	removed redundant label 00105$ and ret
                           6659 ;
                           6660 ;------------------------------------------------------------
                           6661 ;Allocation info for local variables in function 'GLCD_WriteString'
                           6662 ;------------------------------------------------------------
                           6663 ;page                      Allocated with name '_GLCD_WriteString_PARM_2'
                           6664 ;line                      Allocated with name '_GLCD_WriteString_PARM_3'
                           6665 ;invert                    Allocated with name '_GLCD_WriteString_PARM_4'
                           6666 ;stringToWrite             Allocated with name '_GLCD_WriteString_stringToWrite_1_1'
                           6667 ;i                         Allocated with name '_GLCD_WriteString_i_1_1'
                           6668 ;------------------------------------------------------------
                           6669 ;	lcd.c:719: void GLCD_WriteString(char * stringToWrite, unsigned char page, unsigned char line, unsigned char invert)
                           6670 ;	-----------------------------------------
                           6671 ;	 function GLCD_WriteString
                           6672 ;	-----------------------------------------
   19FD                    6673 _GLCD_WriteString:
                           6674 ;	genReceive
   19FD AA F0              6675 	mov	r2,b
   19FF AB 83              6676 	mov	r3,dph
   1A01 E5 82              6677 	mov	a,dpl
   1A03 90s01r87           6678 	mov	dptr,#_GLCD_WriteString_stringToWrite_1_1
   1A06 F0                 6679 	movx	@dptr,a
   1A07 A3                 6680 	inc	dptr
   1A08 EB                 6681 	mov	a,r3
   1A09 F0                 6682 	movx	@dptr,a
   1A0A A3                 6683 	inc	dptr
   1A0B EA                 6684 	mov	a,r2
   1A0C F0                 6685 	movx	@dptr,a
                           6686 ;	lcd.c:721: int i = 0;
                           6687 ;	genAssign
   1A0D 90s01r8A           6688 	mov	dptr,#_GLCD_WriteString_i_1_1
   1A10 E4                 6689 	clr	a
   1A11 F0                 6690 	movx	@dptr,a
   1A12 A3                 6691 	inc	dptr
   1A13 F0                 6692 	movx	@dptr,a
                           6693 ;	lcd.c:722: while(*stringToWrite)
                           6694 ;	genAssign
   1A14 90s01r86           6695 	mov	dptr,#_GLCD_WriteString_PARM_4
   1A17 E0                 6696 	movx	a,@dptr
   1A18 FA                 6697 	mov	r2,a
                           6698 ;	genAssign
   1A19 90s01r87           6699 	mov	dptr,#_GLCD_WriteString_stringToWrite_1_1
   1A1C E0                 6700 	movx	a,@dptr
   1A1D FB                 6701 	mov	r3,a
   1A1E A3                 6702 	inc	dptr
   1A1F E0                 6703 	movx	a,@dptr
   1A20 FC                 6704 	mov	r4,a
   1A21 A3                 6705 	inc	dptr
   1A22 E0                 6706 	movx	a,@dptr
   1A23 FD                 6707 	mov	r5,a
   1A24                    6708 00105$:
                           6709 ;	genPointerGet
                           6710 ;	genGenPointerGet
   1A24 8B 82              6711 	mov	dpl,r3
   1A26 8C 83              6712 	mov	dph,r4
   1A28 8D F0              6713 	mov	b,r5
   1A2A 12s00r00           6714 	lcall	__gptrget
                           6715 ;	genIfx
   1A2D FE                 6716 	mov	r6,a
                           6717 ;	Peephole 105	removed redundant mov
                           6718 ;	genIfxJump
   1A2E 70 03              6719 	jnz	00115$
   1A30 02s1ArBE           6720 	ljmp	00114$
   1A33                    6721 00115$:
                           6722 ;	lcd.c:724: GLCD_WriteChar(*stringToWrite++,page,line, invert);
                           6723 ;	genAssign
                           6724 ;	genPlus
                           6725 ;     genPlusIncr
   1A33 0B                 6726 	inc	r3
   1A34 BB 00 01           6727 	cjne	r3,#0x00,00116$
   1A37 0C                 6728 	inc	r4
   1A38                    6729 00116$:
                           6730 ;	genAssign
   1A38 90s01r87           6731 	mov	dptr,#_GLCD_WriteString_stringToWrite_1_1
   1A3B EB                 6732 	mov	a,r3
   1A3C F0                 6733 	movx	@dptr,a
   1A3D A3                 6734 	inc	dptr
   1A3E EC                 6735 	mov	a,r4
   1A3F F0                 6736 	movx	@dptr,a
   1A40 A3                 6737 	inc	dptr
   1A41 ED                 6738 	mov	a,r5
   1A42 F0                 6739 	movx	@dptr,a
                           6740 ;	genAssign
   1A43 90s01r84           6741 	mov	dptr,#_GLCD_WriteString_PARM_2
   1A46 E0                 6742 	movx	a,@dptr
   1A47 FF                 6743 	mov	r7,a
                           6744 ;	genAssign
   1A48 90s01r85           6745 	mov	dptr,#_GLCD_WriteString_PARM_3
   1A4B E0                 6746 	movx	a,@dptr
   1A4C F8                 6747 	mov	r0,a
                           6748 ;	genAssign
   1A4D 90s01r70           6749 	mov	dptr,#_GLCD_WriteChar_PARM_2
   1A50 EF                 6750 	mov	a,r7
   1A51 F0                 6751 	movx	@dptr,a
                           6752 ;	genAssign
   1A52 90s01r71           6753 	mov	dptr,#_GLCD_WriteChar_PARM_3
   1A55 E8                 6754 	mov	a,r0
   1A56 F0                 6755 	movx	@dptr,a
                           6756 ;	genAssign
   1A57 90s01r72           6757 	mov	dptr,#_GLCD_WriteChar_PARM_4
   1A5A EA                 6758 	mov	a,r2
   1A5B F0                 6759 	movx	@dptr,a
                           6760 ;	genCall
   1A5C 8E 82              6761 	mov	dpl,r6
   1A5E C0 02              6762 	push	ar2
   1A60 C0 03              6763 	push	ar3
   1A62 C0 04              6764 	push	ar4
   1A64 C0 05              6765 	push	ar5
   1A66 C0 07              6766 	push	ar7
   1A68 C0 00              6767 	push	ar0
   1A6A 12s15r3B           6768 	lcall	_GLCD_WriteChar
   1A6D D0 00              6769 	pop	ar0
   1A6F D0 07              6770 	pop	ar7
   1A71 D0 05              6771 	pop	ar5
   1A73 D0 04              6772 	pop	ar4
   1A75 D0 03              6773 	pop	ar3
   1A77 D0 02              6774 	pop	ar2
                           6775 ;	lcd.c:726: line += 6;
                           6776 ;	genPlus
   1A79 90s01r85           6777 	mov	dptr,#_GLCD_WriteString_PARM_3
                           6778 ;     genPlusIncr
   1A7C 74 06              6779 	mov	a,#0x06
                           6780 ;	Peephole 236.a	used r0 instead of ar0
   1A7E 28                 6781 	add	a,r0
   1A7F F0                 6782 	movx	@dptr,a
                           6783 ;	lcd.c:728: if(++i == 21)
                           6784 ;	genPlus
   1A80 90s01r8A           6785 	mov	dptr,#_GLCD_WriteString_i_1_1
   1A83 E0                 6786 	movx	a,@dptr
   1A84 24 01              6787 	add	a,#0x01
   1A86 F0                 6788 	movx	@dptr,a
   1A87 A3                 6789 	inc	dptr
   1A88 E0                 6790 	movx	a,@dptr
   1A89 34 00              6791 	addc	a,#0x00
   1A8B F0                 6792 	movx	@dptr,a
                           6793 ;	genAssign
   1A8C 90s01r8A           6794 	mov	dptr,#_GLCD_WriteString_i_1_1
   1A8F E0                 6795 	movx	a,@dptr
   1A90 FE                 6796 	mov	r6,a
   1A91 A3                 6797 	inc	dptr
   1A92 E0                 6798 	movx	a,@dptr
   1A93 F8                 6799 	mov	r0,a
                           6800 ;	genCmpEq
                           6801 ;	gencjneshort
                           6802 ;	Peephole 112.b	changed ljmp to sjmp
                           6803 ;	Peephole 198.a	optimized misc jump sequence
   1A94 BE 15 8D           6804 	cjne	r6,#0x15,00105$
   1A97 B8 00 8A           6805 	cjne	r0,#0x00,00105$
                           6806 ;	Peephole 200.b	removed redundant sjmp
                           6807 ;	Peephole 300	removed redundant label 00117$
                           6808 ;	Peephole 300	removed redundant label 00118$
                           6809 ;	lcd.c:732: if(++page == 8)
                           6810 ;	genPlus
   1A9A 90s01r84           6811 	mov	dptr,#_GLCD_WriteString_PARM_2
                           6812 ;     genPlusIncr
   1A9D 74 01              6813 	mov	a,#0x01
                           6814 ;	Peephole 236.a	used r7 instead of ar7
   1A9F 2F                 6815 	add	a,r7
   1AA0 F0                 6816 	movx	@dptr,a
                           6817 ;	genAssign
   1AA1 90s01r84           6818 	mov	dptr,#_GLCD_WriteString_PARM_2
   1AA4 E0                 6819 	movx	a,@dptr
   1AA5 FE                 6820 	mov	r6,a
                           6821 ;	genCmpEq
                           6822 ;	gencjneshort
                           6823 ;	Peephole 112.b	changed ljmp to sjmp
                           6824 ;	Peephole 198.b	optimized misc jump sequence
   1AA6 BE 08 05           6825 	cjne	r6,#0x08,00102$
                           6826 ;	Peephole 200.b	removed redundant sjmp
                           6827 ;	Peephole 300	removed redundant label 00119$
                           6828 ;	Peephole 300	removed redundant label 00120$
                           6829 ;	lcd.c:733: page = 0;
                           6830 ;	genAssign
   1AA9 90s01r84           6831 	mov	dptr,#_GLCD_WriteString_PARM_2
                           6832 ;	Peephole 181	changed mov to clr
   1AAC E4                 6833 	clr	a
   1AAD F0                 6834 	movx	@dptr,a
   1AAE                    6835 00102$:
                           6836 ;	lcd.c:735: line = 3;
                           6837 ;	genAssign
   1AAE 90s01r85           6838 	mov	dptr,#_GLCD_WriteString_PARM_3
   1AB1 74 03              6839 	mov	a,#0x03
   1AB3 F0                 6840 	movx	@dptr,a
                           6841 ;	lcd.c:736: i = 0;
                           6842 ;	genAssign
   1AB4 90s01r8A           6843 	mov	dptr,#_GLCD_WriteString_i_1_1
   1AB7 E4                 6844 	clr	a
   1AB8 F0                 6845 	movx	@dptr,a
   1AB9 A3                 6846 	inc	dptr
   1ABA F0                 6847 	movx	@dptr,a
   1ABB 02s1Ar24           6848 	ljmp	00105$
   1ABE                    6849 00114$:
                           6850 ;	genAssign
   1ABE 90s01r87           6851 	mov	dptr,#_GLCD_WriteString_stringToWrite_1_1
   1AC1 EB                 6852 	mov	a,r3
   1AC2 F0                 6853 	movx	@dptr,a
   1AC3 A3                 6854 	inc	dptr
   1AC4 EC                 6855 	mov	a,r4
   1AC5 F0                 6856 	movx	@dptr,a
   1AC6 A3                 6857 	inc	dptr
   1AC7 ED                 6858 	mov	a,r5
   1AC8 F0                 6859 	movx	@dptr,a
                           6860 ;	Peephole 300	removed redundant label 00108$
   1AC9 22                 6861 	ret
                           6862 ;------------------------------------------------------------
                           6863 ;Allocation info for local variables in function 'draw_pillar'
                           6864 ;------------------------------------------------------------
                           6865 ;bott_up                   Allocated with name '_draw_pillar_PARM_2'
                           6866 ;line                      Allocated with name '_draw_pillar_PARM_3'
                           6867 ;solid                     Allocated with name '_draw_pillar_PARM_4'
                           6868 ;len                       Allocated with name '_draw_pillar_len_1_1'
                           6869 ;i                         Allocated with name '_draw_pillar_i_1_1'
                           6870 ;------------------------------------------------------------
                           6871 ;	lcd.c:744: void draw_pillar(unsigned char len, unsigned char bott_up, int line, unsigned char solid)
                           6872 ;	-----------------------------------------
                           6873 ;	 function draw_pillar
                           6874 ;	-----------------------------------------
   1ACA                    6875 _draw_pillar:
                           6876 ;	genReceive
   1ACA E5 82              6877 	mov	a,dpl
   1ACC 90s01r90           6878 	mov	dptr,#_draw_pillar_len_1_1
   1ACF F0                 6879 	movx	@dptr,a
                           6880 ;	lcd.c:750: if(!solid)
                           6881 ;	genAssign
   1AD0 90s01r8F           6882 	mov	dptr,#_draw_pillar_PARM_4
   1AD3 E0                 6883 	movx	a,@dptr
                           6884 ;	genIfx
   1AD4 FA                 6885 	mov	r2,a
                           6886 ;	Peephole 105	removed redundant mov
                           6887 ;	genIfxJump
   1AD5 60 03              6888 	jz	00143$
   1AD7 02s1BrA6           6889 	ljmp	00108$
   1ADA                    6890 00143$:
                           6891 ;	lcd.c:753: if(bott_up)
                           6892 ;	genAssign
   1ADA 90s01r8C           6893 	mov	dptr,#_draw_pillar_PARM_2
   1ADD E0                 6894 	movx	a,@dptr
                           6895 ;	genIfx
   1ADE FB                 6896 	mov	r3,a
                           6897 ;	Peephole 105	removed redundant mov
                           6898 ;	genIfxJump
                           6899 ;	Peephole 108.c	removed ljmp by inverse jump logic
   1ADF 60 61              6900 	jz	00133$
                           6901 ;	Peephole 300	removed redundant label 00144$
                           6902 ;	lcd.c:756: for(i = 1; i < len + 1; i++)
                           6903 ;	genAssign
   1AE1 90s01r8D           6904 	mov	dptr,#_draw_pillar_PARM_3
   1AE4 E0                 6905 	movx	a,@dptr
   1AE5 FB                 6906 	mov	r3,a
   1AE6 A3                 6907 	inc	dptr
   1AE7 E0                 6908 	movx	a,@dptr
   1AE8 FC                 6909 	mov	r4,a
                           6910 ;	genAssign
   1AE9 90s01r90           6911 	mov	dptr,#_draw_pillar_len_1_1
   1AEC E0                 6912 	movx	a,@dptr
   1AED FD                 6913 	mov	r5,a
                           6914 ;	genAssign
   1AEE 7E 01              6915 	mov	r6,#0x01
   1AF0 7F 00              6916 	mov	r7,#0x00
   1AF2                    6917 00110$:
                           6918 ;	genCast
   1AF2 8D 00              6919 	mov	ar0,r5
   1AF4 79 00              6920 	mov	r1,#0x00
                           6921 ;	genPlus
                           6922 ;     genPlusIncr
   1AF6 08                 6923 	inc	r0
   1AF7 B8 00 01           6924 	cjne	r0,#0x00,00145$
   1AFA 09                 6925 	inc	r1
   1AFB                    6926 00145$:
                           6927 ;	genCmpLt
                           6928 ;	genCmp
   1AFB C3                 6929 	clr	c
   1AFC EE                 6930 	mov	a,r6
   1AFD 98                 6931 	subb	a,r0
   1AFE EF                 6932 	mov	a,r7
   1AFF 64 80              6933 	xrl	a,#0x80
   1B01 89 F0              6934 	mov	b,r1
   1B03 63 F0 80           6935 	xrl	b,#0x80
   1B06 95 F0              6936 	subb	a,b
                           6937 ;	genIfxJump
   1B08 40 01              6938 	jc	00146$
                           6939 ;	Peephole 251.a	replaced ljmp to ret with ret
   1B0A 22                 6940 	ret
   1B0B                    6941 00146$:
                           6942 ;	lcd.c:757: GLCD_WriteBrick(BRICK, i,line, solid);
                           6943 ;	genCast
   1B0B 90s01r76           6944 	mov	dptr,#_GLCD_WriteBrick_PARM_2
   1B0E EE                 6945 	mov	a,r6
   1B0F F0                 6946 	movx	@dptr,a
                           6947 ;	genAssign
   1B10 90s01r77           6948 	mov	dptr,#_GLCD_WriteBrick_PARM_3
   1B13 EB                 6949 	mov	a,r3
   1B14 F0                 6950 	movx	@dptr,a
   1B15 A3                 6951 	inc	dptr
   1B16 EC                 6952 	mov	a,r4
   1B17 F0                 6953 	movx	@dptr,a
                           6954 ;	genAssign
   1B18 90s01r79           6955 	mov	dptr,#_GLCD_WriteBrick_PARM_4
   1B1B EA                 6956 	mov	a,r2
   1B1C F0                 6957 	movx	@dptr,a
                           6958 ;	genCall
                           6959 ;	Peephole 182.b	used 16 bit load of dptr
   1B1D 90 01 E5           6960 	mov	dptr,#0x01E5
   1B20 C0 02              6961 	push	ar2
   1B22 C0 03              6962 	push	ar3
   1B24 C0 04              6963 	push	ar4
   1B26 C0 05              6964 	push	ar5
   1B28 C0 06              6965 	push	ar6
   1B2A C0 07              6966 	push	ar7
   1B2C 12s17r60           6967 	lcall	_GLCD_WriteBrick
   1B2F D0 07              6968 	pop	ar7
   1B31 D0 06              6969 	pop	ar6
   1B33 D0 05              6970 	pop	ar5
   1B35 D0 04              6971 	pop	ar4
   1B37 D0 03              6972 	pop	ar3
   1B39 D0 02              6973 	pop	ar2
                           6974 ;	lcd.c:756: for(i = 1; i < len + 1; i++)
                           6975 ;	genPlus
                           6976 ;     genPlusIncr
                           6977 ;	tail increment optimized (range 10)
   1B3B 0E                 6978 	inc	r6
   1B3C BE 00 B3           6979 	cjne	r6,#0x00,00110$
   1B3F 0F                 6980 	inc	r7
                           6981 ;	lcd.c:762: for(i = 6; i > 6 - len; i--)
                           6982 ;	Peephole 112.b	changed ljmp to sjmp
   1B40 80 B0              6983 	sjmp	00110$
   1B42                    6984 00133$:
                           6985 ;	genAssign
   1B42 90s01r8D           6986 	mov	dptr,#_draw_pillar_PARM_3
   1B45 E0                 6987 	movx	a,@dptr
   1B46 FB                 6988 	mov	r3,a
   1B47 A3                 6989 	inc	dptr
   1B48 E0                 6990 	movx	a,@dptr
   1B49 FC                 6991 	mov	r4,a
                           6992 ;	genAssign
   1B4A 90s01r90           6993 	mov	dptr,#_draw_pillar_len_1_1
   1B4D E0                 6994 	movx	a,@dptr
   1B4E FD                 6995 	mov	r5,a
                           6996 ;	genAssign
   1B4F 7E 06              6997 	mov	r6,#0x06
   1B51 7F 00              6998 	mov	r7,#0x00
   1B53                    6999 00114$:
                           7000 ;	genCast
   1B53 8D 00              7001 	mov	ar0,r5
   1B55 79 00              7002 	mov	r1,#0x00
                           7003 ;	genMinus
   1B57 74 06              7004 	mov	a,#0x06
   1B59 C3                 7005 	clr	c
                           7006 ;	Peephole 236.l	used r0 instead of ar0
   1B5A 98                 7007 	subb	a,r0
   1B5B F8                 7008 	mov	r0,a
                           7009 ;	Peephole 181	changed mov to clr
   1B5C E4                 7010 	clr	a
                           7011 ;	Peephole 236.l	used r1 instead of ar1
   1B5D 99                 7012 	subb	a,r1
   1B5E F9                 7013 	mov	r1,a
                           7014 ;	genCmpGt
                           7015 ;	genCmp
   1B5F C3                 7016 	clr	c
   1B60 E8                 7017 	mov	a,r0
   1B61 9E                 7018 	subb	a,r6
   1B62 E9                 7019 	mov	a,r1
   1B63 64 80              7020 	xrl	a,#0x80
   1B65 8F F0              7021 	mov	b,r7
   1B67 63 F0 80           7022 	xrl	b,#0x80
   1B6A 95 F0              7023 	subb	a,b
                           7024 ;	genIfxJump
   1B6C 40 01              7025 	jc	00147$
                           7026 ;	Peephole 251.a	replaced ljmp to ret with ret
   1B6E 22                 7027 	ret
   1B6F                    7028 00147$:
                           7029 ;	lcd.c:763: GLCD_WriteBrick(BRICK, i,line, solid);
                           7030 ;	genCast
   1B6F 90s01r76           7031 	mov	dptr,#_GLCD_WriteBrick_PARM_2
   1B72 EE                 7032 	mov	a,r6
   1B73 F0                 7033 	movx	@dptr,a
                           7034 ;	genAssign
   1B74 90s01r77           7035 	mov	dptr,#_GLCD_WriteBrick_PARM_3
   1B77 EB                 7036 	mov	a,r3
   1B78 F0                 7037 	movx	@dptr,a
   1B79 A3                 7038 	inc	dptr
   1B7A EC                 7039 	mov	a,r4
   1B7B F0                 7040 	movx	@dptr,a
                           7041 ;	genAssign
   1B7C 90s01r79           7042 	mov	dptr,#_GLCD_WriteBrick_PARM_4
   1B7F EA                 7043 	mov	a,r2
   1B80 F0                 7044 	movx	@dptr,a
                           7045 ;	genCall
                           7046 ;	Peephole 182.b	used 16 bit load of dptr
   1B81 90 01 E5           7047 	mov	dptr,#0x01E5
   1B84 C0 02              7048 	push	ar2
   1B86 C0 03              7049 	push	ar3
   1B88 C0 04              7050 	push	ar4
   1B8A C0 05              7051 	push	ar5
   1B8C C0 06              7052 	push	ar6
   1B8E C0 07              7053 	push	ar7
   1B90 12s17r60           7054 	lcall	_GLCD_WriteBrick
   1B93 D0 07              7055 	pop	ar7
   1B95 D0 06              7056 	pop	ar6
   1B97 D0 05              7057 	pop	ar5
   1B99 D0 04              7058 	pop	ar4
   1B9B D0 03              7059 	pop	ar3
   1B9D D0 02              7060 	pop	ar2
                           7061 ;	lcd.c:762: for(i = 6; i > 6 - len; i--)
                           7062 ;	genMinus
                           7063 ;	genMinusDec
                           7064 ;	tail decrement optimized (range 10)
   1B9F 1E                 7065 	dec	r6
   1BA0 BE FF B0           7066 	cjne	r6,#0xff,00114$
   1BA3 1F                 7067 	dec	r7
                           7068 ;	Peephole 112.b	changed ljmp to sjmp
   1BA4 80 AD              7069 	sjmp	00114$
   1BA6                    7070 00108$:
                           7071 ;	lcd.c:769: if(bott_up)
                           7072 ;	genAssign
   1BA6 90s01r8C           7073 	mov	dptr,#_draw_pillar_PARM_2
   1BA9 E0                 7074 	movx	a,@dptr
                           7075 ;	genIfx
   1BAA FB                 7076 	mov	r3,a
                           7077 ;	Peephole 105	removed redundant mov
                           7078 ;	genIfxJump
                           7079 ;	Peephole 108.c	removed ljmp by inverse jump logic
   1BAB 60 66              7080 	jz	00138$
                           7081 ;	Peephole 300	removed redundant label 00148$
                           7082 ;	lcd.c:772: for(i = 1; i < len + 1; i++)
                           7083 ;	genAssign
   1BAD 90s01r8D           7084 	mov	dptr,#_draw_pillar_PARM_3
   1BB0 E0                 7085 	movx	a,@dptr
   1BB1 FB                 7086 	mov	r3,a
   1BB2 A3                 7087 	inc	dptr
   1BB3 E0                 7088 	movx	a,@dptr
   1BB4 FC                 7089 	mov	r4,a
                           7090 ;	genPlus
                           7091 ;     genPlusIncr
   1BB5 0B                 7092 	inc	r3
   1BB6 BB 00 01           7093 	cjne	r3,#0x00,00149$
   1BB9 0C                 7094 	inc	r4
   1BBA                    7095 00149$:
                           7096 ;	genAssign
   1BBA 90s01r90           7097 	mov	dptr,#_draw_pillar_len_1_1
   1BBD E0                 7098 	movx	a,@dptr
   1BBE FD                 7099 	mov	r5,a
                           7100 ;	genAssign
   1BBF 7E 01              7101 	mov	r6,#0x01
   1BC1 7F 00              7102 	mov	r7,#0x00
   1BC3                    7103 00118$:
                           7104 ;	genCast
   1BC3 8D 00              7105 	mov	ar0,r5
   1BC5 79 00              7106 	mov	r1,#0x00
                           7107 ;	genPlus
                           7108 ;     genPlusIncr
   1BC7 08                 7109 	inc	r0
   1BC8 B8 00 01           7110 	cjne	r0,#0x00,00150$
   1BCB 09                 7111 	inc	r1
   1BCC                    7112 00150$:
                           7113 ;	genCmpLt
                           7114 ;	genCmp
   1BCC C3                 7115 	clr	c
   1BCD EE                 7116 	mov	a,r6
   1BCE 98                 7117 	subb	a,r0
   1BCF EF                 7118 	mov	a,r7
   1BD0 64 80              7119 	xrl	a,#0x80
   1BD2 89 F0              7120 	mov	b,r1
   1BD4 63 F0 80           7121 	xrl	b,#0x80
   1BD7 95 F0              7122 	subb	a,b
                           7123 ;	genIfxJump
   1BD9 40 01              7124 	jc	00151$
                           7125 ;	Peephole 251.a	replaced ljmp to ret with ret
   1BDB 22                 7126 	ret
   1BDC                    7127 00151$:
                           7128 ;	lcd.c:773: GLCD_WriteBrick(SOLID_BRICK, i,line + CLEAR_LINE, solid);
                           7129 ;	genCast
   1BDC 90s01r76           7130 	mov	dptr,#_GLCD_WriteBrick_PARM_2
   1BDF EE                 7131 	mov	a,r6
   1BE0 F0                 7132 	movx	@dptr,a
                           7133 ;	genAssign
   1BE1 90s01r77           7134 	mov	dptr,#_GLCD_WriteBrick_PARM_3
   1BE4 EB                 7135 	mov	a,r3
   1BE5 F0                 7136 	movx	@dptr,a
   1BE6 A3                 7137 	inc	dptr
   1BE7 EC                 7138 	mov	a,r4
   1BE8 F0                 7139 	movx	@dptr,a
                           7140 ;	genAssign
   1BE9 90s01r79           7141 	mov	dptr,#_GLCD_WriteBrick_PARM_4
   1BEC EA                 7142 	mov	a,r2
   1BED F0                 7143 	movx	@dptr,a
                           7144 ;	genCall
                           7145 ;	Peephole 182.b	used 16 bit load of dptr
   1BEE 90 01 EC           7146 	mov	dptr,#0x01EC
   1BF1 C0 02              7147 	push	ar2
   1BF3 C0 03              7148 	push	ar3
   1BF5 C0 04              7149 	push	ar4
   1BF7 C0 05              7150 	push	ar5
   1BF9 C0 06              7151 	push	ar6
   1BFB C0 07              7152 	push	ar7
   1BFD 12s17r60           7153 	lcall	_GLCD_WriteBrick
   1C00 D0 07              7154 	pop	ar7
   1C02 D0 06              7155 	pop	ar6
   1C04 D0 05              7156 	pop	ar5
   1C06 D0 04              7157 	pop	ar4
   1C08 D0 03              7158 	pop	ar3
   1C0A D0 02              7159 	pop	ar2
                           7160 ;	lcd.c:772: for(i = 1; i < len + 1; i++)
                           7161 ;	genPlus
                           7162 ;     genPlusIncr
                           7163 ;	tail increment optimized (range 10)
   1C0C 0E                 7164 	inc	r6
   1C0D BE 00 B3           7165 	cjne	r6,#0x00,00118$
   1C10 0F                 7166 	inc	r7
                           7167 ;	lcd.c:778: for(i = 6; i > 6 - len; i--)
                           7168 ;	Peephole 112.b	changed ljmp to sjmp
   1C11 80 B0              7169 	sjmp	00118$
   1C13                    7170 00138$:
                           7171 ;	genAssign
   1C13 90s01r8D           7172 	mov	dptr,#_draw_pillar_PARM_3
   1C16 E0                 7173 	movx	a,@dptr
   1C17 FB                 7174 	mov	r3,a
   1C18 A3                 7175 	inc	dptr
   1C19 E0                 7176 	movx	a,@dptr
   1C1A FC                 7177 	mov	r4,a
                           7178 ;	genPlus
                           7179 ;     genPlusIncr
   1C1B 0B                 7180 	inc	r3
   1C1C BB 00 01           7181 	cjne	r3,#0x00,00152$
   1C1F 0C                 7182 	inc	r4
   1C20                    7183 00152$:
                           7184 ;	genAssign
   1C20 90s01r90           7185 	mov	dptr,#_draw_pillar_len_1_1
   1C23 E0                 7186 	movx	a,@dptr
   1C24 FD                 7187 	mov	r5,a
                           7188 ;	genAssign
   1C25 7E 06              7189 	mov	r6,#0x06
   1C27 7F 00              7190 	mov	r7,#0x00
   1C29                    7191 00122$:
                           7192 ;	genCast
   1C29 8D 00              7193 	mov	ar0,r5
   1C2B 79 00              7194 	mov	r1,#0x00
                           7195 ;	genMinus
   1C2D 74 06              7196 	mov	a,#0x06
   1C2F C3                 7197 	clr	c
                           7198 ;	Peephole 236.l	used r0 instead of ar0
   1C30 98                 7199 	subb	a,r0
   1C31 F8                 7200 	mov	r0,a
                           7201 ;	Peephole 181	changed mov to clr
   1C32 E4                 7202 	clr	a
                           7203 ;	Peephole 236.l	used r1 instead of ar1
   1C33 99                 7204 	subb	a,r1
   1C34 F9                 7205 	mov	r1,a
                           7206 ;	genCmpGt
                           7207 ;	genCmp
   1C35 C3                 7208 	clr	c
   1C36 E8                 7209 	mov	a,r0
   1C37 9E                 7210 	subb	a,r6
   1C38 E9                 7211 	mov	a,r1
   1C39 64 80              7212 	xrl	a,#0x80
   1C3B 8F F0              7213 	mov	b,r7
   1C3D 63 F0 80           7214 	xrl	b,#0x80
   1C40 95 F0              7215 	subb	a,b
                           7216 ;	genIfxJump
                           7217 ;	Peephole 108.a	removed ljmp by inverse jump logic
   1C42 50 37              7218 	jnc	00126$
                           7219 ;	Peephole 300	removed redundant label 00153$
                           7220 ;	lcd.c:779: GLCD_WriteBrick(SOLID_BRICK, i,line + CLEAR_LINE, solid);
                           7221 ;	genCast
   1C44 90s01r76           7222 	mov	dptr,#_GLCD_WriteBrick_PARM_2
   1C47 EE                 7223 	mov	a,r6
   1C48 F0                 7224 	movx	@dptr,a
                           7225 ;	genAssign
   1C49 90s01r77           7226 	mov	dptr,#_GLCD_WriteBrick_PARM_3
   1C4C EB                 7227 	mov	a,r3
   1C4D F0                 7228 	movx	@dptr,a
   1C4E A3                 7229 	inc	dptr
   1C4F EC                 7230 	mov	a,r4
   1C50 F0                 7231 	movx	@dptr,a
                           7232 ;	genAssign
   1C51 90s01r79           7233 	mov	dptr,#_GLCD_WriteBrick_PARM_4
   1C54 EA                 7234 	mov	a,r2
   1C55 F0                 7235 	movx	@dptr,a
                           7236 ;	genCall
                           7237 ;	Peephole 182.b	used 16 bit load of dptr
   1C56 90 01 EC           7238 	mov	dptr,#0x01EC
   1C59 C0 02              7239 	push	ar2
   1C5B C0 03              7240 	push	ar3
   1C5D C0 04              7241 	push	ar4
   1C5F C0 05              7242 	push	ar5
   1C61 C0 06              7243 	push	ar6
   1C63 C0 07              7244 	push	ar7
   1C65 12s17r60           7245 	lcall	_GLCD_WriteBrick
   1C68 D0 07              7246 	pop	ar7
   1C6A D0 06              7247 	pop	ar6
   1C6C D0 05              7248 	pop	ar5
   1C6E D0 04              7249 	pop	ar4
   1C70 D0 03              7250 	pop	ar3
   1C72 D0 02              7251 	pop	ar2
                           7252 ;	lcd.c:778: for(i = 6; i > 6 - len; i--)
                           7253 ;	genMinus
                           7254 ;	genMinusDec
                           7255 ;	tail decrement optimized (range 10)
   1C74 1E                 7256 	dec	r6
   1C75 BE FF B1           7257 	cjne	r6,#0xff,00122$
   1C78 1F                 7258 	dec	r7
                           7259 ;	Peephole 112.b	changed ljmp to sjmp
   1C79 80 AE              7260 	sjmp	00122$
   1C7B                    7261 00126$:
   1C7B 22                 7262 	ret
                           7263 ;------------------------------------------------------------
                           7264 ;Allocation info for local variables in function 'delay_ms'
                           7265 ;------------------------------------------------------------
                           7266 ;num_ms                    Allocated with name '_delay_ms_num_ms_1_1'
                           7267 ;i                         Allocated with name '_delay_ms_i_1_1'
                           7268 ;j                         Allocated with name '_delay_ms_j_1_1'
                           7269 ;k                         Allocated with name '_delay_ms_k_1_1'
                           7270 ;------------------------------------------------------------
                           7271 ;	lcd.c:786: void delay_ms(int num_ms)
                           7272 ;	-----------------------------------------
                           7273 ;	 function delay_ms
                           7274 ;	-----------------------------------------
   1C7C                    7275 _delay_ms:
                           7276 ;	genReceive
   1C7C AA 83              7277 	mov	r2,dph
   1C7E E5 82              7278 	mov	a,dpl
   1C80 90s01r91           7279 	mov	dptr,#_delay_ms_num_ms_1_1
   1C83 F0                 7280 	movx	@dptr,a
   1C84 A3                 7281 	inc	dptr
   1C85 EA                 7282 	mov	a,r2
   1C86 F0                 7283 	movx	@dptr,a
                           7284 ;	lcd.c:790: unsigned int k = 0;
                           7285 ;	genAssign
   1C87 90s01r93           7286 	mov	dptr,#_delay_ms_k_1_1
   1C8A E4                 7287 	clr	a
   1C8B F0                 7288 	movx	@dptr,a
   1C8C A3                 7289 	inc	dptr
   1C8D F0                 7290 	movx	@dptr,a
                           7291 ;	lcd.c:793: for(i = 0; i < num_ms; i++)
                           7292 ;	genAssign
   1C8E 90s01r91           7293 	mov	dptr,#_delay_ms_num_ms_1_1
   1C91 E0                 7294 	movx	a,@dptr
   1C92 FA                 7295 	mov	r2,a
   1C93 A3                 7296 	inc	dptr
   1C94 E0                 7297 	movx	a,@dptr
   1C95 FB                 7298 	mov	r3,a
                           7299 ;	genAssign
   1C96 7C 00              7300 	mov	r4,#0x00
   1C98 7D 00              7301 	mov	r5,#0x00
   1C9A                    7302 00104$:
                           7303 ;	genCmpLt
                           7304 ;	genCmp
   1C9A C3                 7305 	clr	c
   1C9B EC                 7306 	mov	a,r4
   1C9C 9A                 7307 	subb	a,r2
   1C9D ED                 7308 	mov	a,r5
   1C9E 9B                 7309 	subb	a,r3
                           7310 ;	genIfxJump
                           7311 ;	Peephole 108.a	removed ljmp by inverse jump logic
   1C9F 50 2A              7312 	jnc	00108$
                           7313 ;	Peephole 300	removed redundant label 00116$
                           7314 ;	lcd.c:796: for(j = 0; j < 83; j++)
                           7315 ;	genAssign
   1CA1 90s01r93           7316 	mov	dptr,#_delay_ms_k_1_1
   1CA4 E0                 7317 	movx	a,@dptr
   1CA5 FE                 7318 	mov	r6,a
   1CA6 A3                 7319 	inc	dptr
   1CA7 E0                 7320 	movx	a,@dptr
   1CA8 FF                 7321 	mov	r7,a
                           7322 ;	genAssign
   1CA9 78 53              7323 	mov	r0,#0x53
   1CAB 79 00              7324 	mov	r1,#0x00
   1CAD                    7325 00103$:
                           7326 ;	lcd.c:799: __asm nop __endasm;
                           7327 ;	genInline
   1CAD 00                 7328 	 nop 
                           7329 ;	lcd.c:800: k++;
                           7330 ;	genPlus
                           7331 ;     genPlusIncr
   1CAE 0E                 7332 	inc	r6
   1CAF BE 00 01           7333 	cjne	r6,#0x00,00117$
   1CB2 0F                 7334 	inc	r7
   1CB3                    7335 00117$:
                           7336 ;	genMinus
                           7337 ;	genMinusDec
   1CB3 18                 7338 	dec	r0
   1CB4 B8 FF 01           7339 	cjne	r0,#0xff,00118$
   1CB7 19                 7340 	dec	r1
   1CB8                    7341 00118$:
                           7342 ;	lcd.c:796: for(j = 0; j < 83; j++)
                           7343 ;	genIfx
   1CB8 E8                 7344 	mov	a,r0
   1CB9 49                 7345 	orl	a,r1
                           7346 ;	genIfxJump
                           7347 ;	Peephole 108.b	removed ljmp by inverse jump logic
   1CBA 70 F1              7348 	jnz	00103$
                           7349 ;	Peephole 300	removed redundant label 00119$
                           7350 ;	lcd.c:793: for(i = 0; i < num_ms; i++)
                           7351 ;	genAssign
   1CBC 90s01r93           7352 	mov	dptr,#_delay_ms_k_1_1
   1CBF EE                 7353 	mov	a,r6
   1CC0 F0                 7354 	movx	@dptr,a
   1CC1 A3                 7355 	inc	dptr
   1CC2 EF                 7356 	mov	a,r7
   1CC3 F0                 7357 	movx	@dptr,a
                           7358 ;	genPlus
                           7359 ;     genPlusIncr
   1CC4 0C                 7360 	inc	r4
                           7361 ;	Peephole 112.b	changed ljmp to sjmp
                           7362 ;	Peephole 243	avoided branch to sjmp
   1CC5 BC 00 D2           7363 	cjne	r4,#0x00,00104$
   1CC8 0D                 7364 	inc	r5
                           7365 ;	Peephole 300	removed redundant label 00120$
   1CC9 80 CF              7366 	sjmp	00104$
   1CCB                    7367 00108$:
   1CCB 22                 7368 	ret
                           7369 ;------------------------------------------------------------
                           7370 ;Allocation info for local variables in function 'rand'
                           7371 ;------------------------------------------------------------
                           7372 ;max_num                   Allocated with name '_rand_PARM_2'
                           7373 ;min_num                   Allocated with name '_rand_min_num_1_1'
                           7374 ;bits                      Allocated with name '_rand_bits_1_1'
                           7375 ;LFSR                      Allocated with name '_rand_LFSR_1_1'
                           7376 ;------------------------------------------------------------
                           7377 ;	lcd.c:810: unsigned int rand(int min_num, int max_num)
                           7378 ;	-----------------------------------------
                           7379 ;	 function rand
                           7380 ;	-----------------------------------------
   1CCC                    7381 _rand:
                           7382 ;	genReceive
   1CCC AA 83              7383 	mov	r2,dph
   1CCE E5 82              7384 	mov	a,dpl
   1CD0 90s01r97           7385 	mov	dptr,#_rand_min_num_1_1
   1CD3 F0                 7386 	movx	@dptr,a
   1CD4 A3                 7387 	inc	dptr
   1CD5 EA                 7388 	mov	a,r2
   1CD6 F0                 7389 	movx	@dptr,a
                           7390 ;	lcd.c:814: bits  = ((LFSR >> 0) ^ (LFSR >> 2) ^ (LFSR >> 3) ^ (LFSR >> 5) ) & 1;
                           7391 ;	genAssign
   1CD7 90s01r99           7392 	mov	dptr,#_rand_LFSR_1_1
   1CDA E0                 7393 	movx	a,@dptr
   1CDB FA                 7394 	mov	r2,a
   1CDC A3                 7395 	inc	dptr
   1CDD E0                 7396 	movx	a,@dptr
   1CDE FB                 7397 	mov	r3,a
                           7398 ;	genRightShift
                           7399 ;	genRightShiftLiteral
   1CDF 8B 05              7400 	mov	ar5,r3
   1CE1 8A 04              7401 	mov	ar4,r2
                           7402 ;	genRightShift
                           7403 ;	genRightShiftLiteral
                           7404 ;	genrshTwo
   1CE3 8A 06              7405 	mov	ar6,r2
   1CE5 EB                 7406 	mov	a,r3
   1CE6 C3                 7407 	clr	c
   1CE7 13                 7408 	rrc	a
   1CE8 CE                 7409 	xch	a,r6
   1CE9 13                 7410 	rrc	a
   1CEA CE                 7411 	xch	a,r6
   1CEB C3                 7412 	clr	c
   1CEC 13                 7413 	rrc	a
   1CED CE                 7414 	xch	a,r6
   1CEE 13                 7415 	rrc	a
   1CEF CE                 7416 	xch	a,r6
   1CF0 FF                 7417 	mov	r7,a
                           7418 ;	genXor
   1CF1 EE                 7419 	mov	a,r6
   1CF2 62 04              7420 	xrl	ar4,a
   1CF4 EF                 7421 	mov	a,r7
   1CF5 62 05              7422 	xrl	ar5,a
                           7423 ;	genRightShift
                           7424 ;	genRightShiftLiteral
                           7425 ;	genrshTwo
   1CF7 8A 06              7426 	mov	ar6,r2
   1CF9 EB                 7427 	mov	a,r3
   1CFA C4                 7428 	swap	a
   1CFB 23                 7429 	rl	a
   1CFC CE                 7430 	xch	a,r6
   1CFD C4                 7431 	swap	a
   1CFE 23                 7432 	rl	a
   1CFF 54 1F              7433 	anl	a,#0x1f
   1D01 6E                 7434 	xrl	a,r6
   1D02 CE                 7435 	xch	a,r6
   1D03 54 1F              7436 	anl	a,#0x1f
   1D05 CE                 7437 	xch	a,r6
   1D06 6E                 7438 	xrl	a,r6
   1D07 CE                 7439 	xch	a,r6
   1D08 FF                 7440 	mov	r7,a
                           7441 ;	genXor
   1D09 EE                 7442 	mov	a,r6
   1D0A 62 04              7443 	xrl	ar4,a
   1D0C EF                 7444 	mov	a,r7
   1D0D 62 05              7445 	xrl	ar5,a
                           7446 ;	genRightShift
                           7447 ;	genRightShiftLiteral
                           7448 ;	genrshTwo
   1D0F 8A 06              7449 	mov	ar6,r2
   1D11 EB                 7450 	mov	a,r3
   1D12 C4                 7451 	swap	a
   1D13 03                 7452 	rr	a
   1D14 CE                 7453 	xch	a,r6
   1D15 C4                 7454 	swap	a
   1D16 03                 7455 	rr	a
   1D17 54 07              7456 	anl	a,#0x07
   1D19 6E                 7457 	xrl	a,r6
   1D1A CE                 7458 	xch	a,r6
   1D1B 54 07              7459 	anl	a,#0x07
   1D1D CE                 7460 	xch	a,r6
   1D1E 6E                 7461 	xrl	a,r6
   1D1F CE                 7462 	xch	a,r6
   1D20 FF                 7463 	mov	r7,a
                           7464 ;	genXor
   1D21 EE                 7465 	mov	a,r6
   1D22 62 04              7466 	xrl	ar4,a
   1D24 EF                 7467 	mov	a,r7
   1D25 62 05              7468 	xrl	ar5,a
                           7469 ;	genAnd
   1D27 53 04 01           7470 	anl	ar4,#0x01
   1D2A 7D 00              7471 	mov	r5,#0x00
                           7472 ;	lcd.c:815: LFSR =  (LFSR >> 1) | (bits << 15);
                           7473 ;	genRightShift
                           7474 ;	genRightShiftLiteral
                           7475 ;	genrshTwo
   1D2C EB                 7476 	mov	a,r3
   1D2D C3                 7477 	clr	c
   1D2E 13                 7478 	rrc	a
   1D2F CA                 7479 	xch	a,r2
   1D30 13                 7480 	rrc	a
   1D31 CA                 7481 	xch	a,r2
   1D32 FB                 7482 	mov	r3,a
                           7483 ;	genLeftShift
                           7484 ;	genLeftShiftLiteral
                           7485 ;	genlshTwo
   1D33 EC                 7486 	mov	a,r4
   1D34 03                 7487 	rr	a
   1D35 54 80              7488 	anl	a,#0x80
   1D37 FD                 7489 	mov	r5,a
   1D38 7C 00              7490 	mov	r4,#0x00
                           7491 ;	genOr
   1D3A 90s01r99           7492 	mov	dptr,#_rand_LFSR_1_1
   1D3D EC                 7493 	mov	a,r4
   1D3E 4A                 7494 	orl	a,r2
   1D3F F0                 7495 	movx	@dptr,a
   1D40 ED                 7496 	mov	a,r5
   1D41 4B                 7497 	orl	a,r3
   1D42 A3                 7498 	inc	dptr
   1D43 F0                 7499 	movx	@dptr,a
                           7500 ;	lcd.c:817: return (LFSR % (max_num - min_num)) + min_num;
                           7501 ;	genAssign
   1D44 90s01r97           7502 	mov	dptr,#_rand_min_num_1_1
   1D47 E0                 7503 	movx	a,@dptr
   1D48 FA                 7504 	mov	r2,a
   1D49 A3                 7505 	inc	dptr
   1D4A E0                 7506 	movx	a,@dptr
   1D4B FB                 7507 	mov	r3,a
                           7508 ;	genAssign
   1D4C 90s01r95           7509 	mov	dptr,#_rand_PARM_2
   1D4F E0                 7510 	movx	a,@dptr
   1D50 FC                 7511 	mov	r4,a
   1D51 A3                 7512 	inc	dptr
   1D52 E0                 7513 	movx	a,@dptr
   1D53 FD                 7514 	mov	r5,a
                           7515 ;	genMinus
   1D54 EC                 7516 	mov	a,r4
   1D55 C3                 7517 	clr	c
                           7518 ;	Peephole 236.l	used r2 instead of ar2
   1D56 9A                 7519 	subb	a,r2
   1D57 FC                 7520 	mov	r4,a
   1D58 ED                 7521 	mov	a,r5
                           7522 ;	Peephole 236.l	used r3 instead of ar3
   1D59 9B                 7523 	subb	a,r3
   1D5A FD                 7524 	mov	r5,a
                           7525 ;	genAssign
   1D5B 90s01r99           7526 	mov	dptr,#_rand_LFSR_1_1
   1D5E E0                 7527 	movx	a,@dptr
   1D5F FE                 7528 	mov	r6,a
   1D60 A3                 7529 	inc	dptr
   1D61 E0                 7530 	movx	a,@dptr
   1D62 FF                 7531 	mov	r7,a
                           7532 ;	genAssign
   1D63 90s00r00           7533 	mov	dptr,#__moduint_PARM_2
   1D66 EC                 7534 	mov	a,r4
   1D67 F0                 7535 	movx	@dptr,a
   1D68 A3                 7536 	inc	dptr
   1D69 ED                 7537 	mov	a,r5
   1D6A F0                 7538 	movx	@dptr,a
                           7539 ;	genCall
   1D6B 8E 82              7540 	mov	dpl,r6
   1D6D 8F 83              7541 	mov	dph,r7
   1D6F C0 02              7542 	push	ar2
   1D71 C0 03              7543 	push	ar3
   1D73 12s00r00           7544 	lcall	__moduint
   1D76 E5 82              7545 	mov	a,dpl
   1D78 85 83 F0           7546 	mov	b,dph
   1D7B D0 03              7547 	pop	ar3
   1D7D D0 02              7548 	pop	ar2
                           7549 ;	genPlus
                           7550 ;	Peephole 236.a	used r2 instead of ar2
   1D7F 2A                 7551 	add	a,r2
   1D80 FA                 7552 	mov	r2,a
                           7553 ;	Peephole 236.g	used r3 instead of ar3
   1D81 EB                 7554 	mov	a,r3
   1D82 35 F0              7555 	addc	a,b
                           7556 ;	genRet
                           7557 ;	Peephole 234.b	loading dph directly from a(ccumulator), r3 not set
   1D84 8A 82              7558 	mov	dpl,r2
   1D86 F5 83              7559 	mov	dph,a
                           7560 ;	Peephole 300	removed redundant label 00101$
   1D88 22                 7561 	ret
                           7562 	.area CSEG    (CODE)
                           7563 	.area CONST   (CODE)
   0000                    7564 _font5x8:
   0000 00                 7565 	.db #0x00
   0001 00                 7566 	.db #0x00
   0002 00                 7567 	.db #0x00
   0003 00                 7568 	.db #0x00
   0004 00                 7569 	.db #0x00
   0005 00                 7570 	.db #0x00
   0006 00                 7571 	.db #0x00
   0007 5F                 7572 	.db #0x5F
   0008 00                 7573 	.db #0x00
   0009 00                 7574 	.db #0x00
   000A 00                 7575 	.db #0x00
   000B 07                 7576 	.db #0x07
   000C 00                 7577 	.db #0x00
   000D 07                 7578 	.db #0x07
   000E 00                 7579 	.db #0x00
   000F 14                 7580 	.db #0x14
   0010 7F                 7581 	.db #0x7F
   0011 14                 7582 	.db #0x14
   0012 7F                 7583 	.db #0x7F
   0013 14                 7584 	.db #0x14
   0014 24                 7585 	.db #0x24
   0015 2A                 7586 	.db #0x2A
   0016 7F                 7587 	.db #0x7F
   0017 2A                 7588 	.db #0x2A
   0018 12                 7589 	.db #0x12
   0019 23                 7590 	.db #0x23
   001A 13                 7591 	.db #0x13
   001B 08                 7592 	.db #0x08
   001C 64                 7593 	.db #0x64
   001D 62                 7594 	.db #0x62
   001E 36                 7595 	.db #0x36
   001F 49                 7596 	.db #0x49
   0020 55                 7597 	.db #0x55
   0021 22                 7598 	.db #0x22
   0022 50                 7599 	.db #0x50
   0023 00                 7600 	.db #0x00
   0024 05                 7601 	.db #0x05
   0025 03                 7602 	.db #0x03
   0026 00                 7603 	.db #0x00
   0027 00                 7604 	.db #0x00
   0028 00                 7605 	.db #0x00
   0029 1C                 7606 	.db #0x1C
   002A 22                 7607 	.db #0x22
   002B 41                 7608 	.db #0x41
   002C 00                 7609 	.db #0x00
   002D 00                 7610 	.db #0x00
   002E 41                 7611 	.db #0x41
   002F 22                 7612 	.db #0x22
   0030 1C                 7613 	.db #0x1C
   0031 00                 7614 	.db #0x00
   0032 08                 7615 	.db #0x08
   0033 2A                 7616 	.db #0x2A
   0034 1C                 7617 	.db #0x1C
   0035 2A                 7618 	.db #0x2A
   0036 08                 7619 	.db #0x08
   0037 08                 7620 	.db #0x08
   0038 08                 7621 	.db #0x08
   0039 3E                 7622 	.db #0x3E
   003A 08                 7623 	.db #0x08
   003B 08                 7624 	.db #0x08
   003C 00                 7625 	.db #0x00
   003D 50                 7626 	.db #0x50
   003E 30                 7627 	.db #0x30
   003F 00                 7628 	.db #0x00
   0040 00                 7629 	.db #0x00
   0041 08                 7630 	.db #0x08
   0042 08                 7631 	.db #0x08
   0043 08                 7632 	.db #0x08
   0044 08                 7633 	.db #0x08
   0045 08                 7634 	.db #0x08
   0046 00                 7635 	.db #0x00
   0047 30                 7636 	.db #0x30
   0048 30                 7637 	.db #0x30
   0049 00                 7638 	.db #0x00
   004A 00                 7639 	.db #0x00
   004B 20                 7640 	.db #0x20
   004C 10                 7641 	.db #0x10
   004D 08                 7642 	.db #0x08
   004E 04                 7643 	.db #0x04
   004F 02                 7644 	.db #0x02
   0050 3E                 7645 	.db #0x3E
   0051 51                 7646 	.db #0x51
   0052 49                 7647 	.db #0x49
   0053 45                 7648 	.db #0x45
   0054 3E                 7649 	.db #0x3E
   0055 00                 7650 	.db #0x00
   0056 42                 7651 	.db #0x42
   0057 7F                 7652 	.db #0x7F
   0058 40                 7653 	.db #0x40
   0059 00                 7654 	.db #0x00
   005A 42                 7655 	.db #0x42
   005B 61                 7656 	.db #0x61
   005C 51                 7657 	.db #0x51
   005D 49                 7658 	.db #0x49
   005E 46                 7659 	.db #0x46
   005F 21                 7660 	.db #0x21
   0060 41                 7661 	.db #0x41
   0061 45                 7662 	.db #0x45
   0062 4B                 7663 	.db #0x4B
   0063 31                 7664 	.db #0x31
   0064 18                 7665 	.db #0x18
   0065 14                 7666 	.db #0x14
   0066 12                 7667 	.db #0x12
   0067 7F                 7668 	.db #0x7F
   0068 10                 7669 	.db #0x10
   0069 27                 7670 	.db #0x27
   006A 45                 7671 	.db #0x45
   006B 45                 7672 	.db #0x45
   006C 45                 7673 	.db #0x45
   006D 39                 7674 	.db #0x39
   006E 3C                 7675 	.db #0x3C
   006F 4A                 7676 	.db #0x4A
   0070 49                 7677 	.db #0x49
   0071 49                 7678 	.db #0x49
   0072 30                 7679 	.db #0x30
   0073 01                 7680 	.db #0x01
   0074 71                 7681 	.db #0x71
   0075 09                 7682 	.db #0x09
   0076 05                 7683 	.db #0x05
   0077 03                 7684 	.db #0x03
   0078 36                 7685 	.db #0x36
   0079 49                 7686 	.db #0x49
   007A 49                 7687 	.db #0x49
   007B 49                 7688 	.db #0x49
   007C 36                 7689 	.db #0x36
   007D 06                 7690 	.db #0x06
   007E 49                 7691 	.db #0x49
   007F 49                 7692 	.db #0x49
   0080 29                 7693 	.db #0x29
   0081 1E                 7694 	.db #0x1E
   0082 00                 7695 	.db #0x00
   0083 36                 7696 	.db #0x36
   0084 36                 7697 	.db #0x36
   0085 00                 7698 	.db #0x00
   0086 00                 7699 	.db #0x00
   0087 00                 7700 	.db #0x00
   0088 56                 7701 	.db #0x56
   0089 36                 7702 	.db #0x36
   008A 00                 7703 	.db #0x00
   008B 00                 7704 	.db #0x00
   008C 00                 7705 	.db #0x00
   008D 08                 7706 	.db #0x08
   008E 14                 7707 	.db #0x14
   008F 22                 7708 	.db #0x22
   0090 41                 7709 	.db #0x41
   0091 14                 7710 	.db #0x14
   0092 14                 7711 	.db #0x14
   0093 14                 7712 	.db #0x14
   0094 14                 7713 	.db #0x14
   0095 14                 7714 	.db #0x14
   0096 41                 7715 	.db #0x41
   0097 22                 7716 	.db #0x22
   0098 14                 7717 	.db #0x14
   0099 08                 7718 	.db #0x08
   009A 00                 7719 	.db #0x00
   009B 02                 7720 	.db #0x02
   009C 01                 7721 	.db #0x01
   009D 51                 7722 	.db #0x51
   009E 09                 7723 	.db #0x09
   009F 06                 7724 	.db #0x06
   00A0 32                 7725 	.db #0x32
   00A1 49                 7726 	.db #0x49
   00A2 79                 7727 	.db #0x79
   00A3 41                 7728 	.db #0x41
   00A4 3E                 7729 	.db #0x3E
   00A5 7E                 7730 	.db #0x7E
   00A6 11                 7731 	.db #0x11
   00A7 11                 7732 	.db #0x11
   00A8 11                 7733 	.db #0x11
   00A9 7E                 7734 	.db #0x7E
   00AA 7F                 7735 	.db #0x7F
   00AB 49                 7736 	.db #0x49
   00AC 49                 7737 	.db #0x49
   00AD 49                 7738 	.db #0x49
   00AE 36                 7739 	.db #0x36
   00AF 3E                 7740 	.db #0x3E
   00B0 41                 7741 	.db #0x41
   00B1 41                 7742 	.db #0x41
   00B2 41                 7743 	.db #0x41
   00B3 22                 7744 	.db #0x22
   00B4 7F                 7745 	.db #0x7F
   00B5 41                 7746 	.db #0x41
   00B6 41                 7747 	.db #0x41
   00B7 22                 7748 	.db #0x22
   00B8 1C                 7749 	.db #0x1C
   00B9 7F                 7750 	.db #0x7F
   00BA 49                 7751 	.db #0x49
   00BB 49                 7752 	.db #0x49
   00BC 49                 7753 	.db #0x49
   00BD 41                 7754 	.db #0x41
   00BE 7F                 7755 	.db #0x7F
   00BF 09                 7756 	.db #0x09
   00C0 09                 7757 	.db #0x09
   00C1 01                 7758 	.db #0x01
   00C2 01                 7759 	.db #0x01
   00C3 3E                 7760 	.db #0x3E
   00C4 41                 7761 	.db #0x41
   00C5 41                 7762 	.db #0x41
   00C6 51                 7763 	.db #0x51
   00C7 32                 7764 	.db #0x32
   00C8 7F                 7765 	.db #0x7F
   00C9 08                 7766 	.db #0x08
   00CA 08                 7767 	.db #0x08
   00CB 08                 7768 	.db #0x08
   00CC 7F                 7769 	.db #0x7F
   00CD 00                 7770 	.db #0x00
   00CE 41                 7771 	.db #0x41
   00CF 7F                 7772 	.db #0x7F
   00D0 41                 7773 	.db #0x41
   00D1 00                 7774 	.db #0x00
   00D2 20                 7775 	.db #0x20
   00D3 40                 7776 	.db #0x40
   00D4 41                 7777 	.db #0x41
   00D5 3F                 7778 	.db #0x3F
   00D6 01                 7779 	.db #0x01
   00D7 7F                 7780 	.db #0x7F
   00D8 08                 7781 	.db #0x08
   00D9 14                 7782 	.db #0x14
   00DA 22                 7783 	.db #0x22
   00DB 41                 7784 	.db #0x41
   00DC 7F                 7785 	.db #0x7F
   00DD 40                 7786 	.db #0x40
   00DE 40                 7787 	.db #0x40
   00DF 40                 7788 	.db #0x40
   00E0 40                 7789 	.db #0x40
   00E1 7F                 7790 	.db #0x7F
   00E2 02                 7791 	.db #0x02
   00E3 04                 7792 	.db #0x04
   00E4 02                 7793 	.db #0x02
   00E5 7F                 7794 	.db #0x7F
   00E6 7F                 7795 	.db #0x7F
   00E7 04                 7796 	.db #0x04
   00E8 08                 7797 	.db #0x08
   00E9 10                 7798 	.db #0x10
   00EA 7F                 7799 	.db #0x7F
   00EB 3E                 7800 	.db #0x3E
   00EC 41                 7801 	.db #0x41
   00ED 41                 7802 	.db #0x41
   00EE 41                 7803 	.db #0x41
   00EF 3E                 7804 	.db #0x3E
   00F0 7F                 7805 	.db #0x7F
   00F1 09                 7806 	.db #0x09
   00F2 09                 7807 	.db #0x09
   00F3 09                 7808 	.db #0x09
   00F4 06                 7809 	.db #0x06
   00F5 3E                 7810 	.db #0x3E
   00F6 41                 7811 	.db #0x41
   00F7 51                 7812 	.db #0x51
   00F8 21                 7813 	.db #0x21
   00F9 5E                 7814 	.db #0x5E
   00FA 7F                 7815 	.db #0x7F
   00FB 09                 7816 	.db #0x09
   00FC 19                 7817 	.db #0x19
   00FD 29                 7818 	.db #0x29
   00FE 46                 7819 	.db #0x46
   00FF 46                 7820 	.db #0x46
   0100 49                 7821 	.db #0x49
   0101 49                 7822 	.db #0x49
   0102 49                 7823 	.db #0x49
   0103 31                 7824 	.db #0x31
   0104 01                 7825 	.db #0x01
   0105 01                 7826 	.db #0x01
   0106 7F                 7827 	.db #0x7F
   0107 01                 7828 	.db #0x01
   0108 01                 7829 	.db #0x01
   0109 3F                 7830 	.db #0x3F
   010A 40                 7831 	.db #0x40
   010B 40                 7832 	.db #0x40
   010C 40                 7833 	.db #0x40
   010D 3F                 7834 	.db #0x3F
   010E 1F                 7835 	.db #0x1F
   010F 20                 7836 	.db #0x20
   0110 40                 7837 	.db #0x40
   0111 20                 7838 	.db #0x20
   0112 1F                 7839 	.db #0x1F
   0113 7F                 7840 	.db #0x7F
   0114 20                 7841 	.db #0x20
   0115 18                 7842 	.db #0x18
   0116 20                 7843 	.db #0x20
   0117 7F                 7844 	.db #0x7F
   0118 63                 7845 	.db #0x63
   0119 14                 7846 	.db #0x14
   011A 08                 7847 	.db #0x08
   011B 14                 7848 	.db #0x14
   011C 63                 7849 	.db #0x63
   011D 03                 7850 	.db #0x03
   011E 04                 7851 	.db #0x04
   011F 78                 7852 	.db #0x78
   0120 04                 7853 	.db #0x04
   0121 03                 7854 	.db #0x03
   0122 61                 7855 	.db #0x61
   0123 51                 7856 	.db #0x51
   0124 49                 7857 	.db #0x49
   0125 45                 7858 	.db #0x45
   0126 43                 7859 	.db #0x43
   0127 00                 7860 	.db #0x00
   0128 00                 7861 	.db #0x00
   0129 7F                 7862 	.db #0x7F
   012A 41                 7863 	.db #0x41
   012B 41                 7864 	.db #0x41
   012C 02                 7865 	.db #0x02
   012D 04                 7866 	.db #0x04
   012E 08                 7867 	.db #0x08
   012F 10                 7868 	.db #0x10
   0130 20                 7869 	.db #0x20
   0131 41                 7870 	.db #0x41
   0132 41                 7871 	.db #0x41
   0133 7F                 7872 	.db #0x7F
   0134 00                 7873 	.db #0x00
   0135 00                 7874 	.db #0x00
   0136 04                 7875 	.db #0x04
   0137 02                 7876 	.db #0x02
   0138 01                 7877 	.db #0x01
   0139 02                 7878 	.db #0x02
   013A 04                 7879 	.db #0x04
   013B 40                 7880 	.db #0x40
   013C 40                 7881 	.db #0x40
   013D 40                 7882 	.db #0x40
   013E 40                 7883 	.db #0x40
   013F 40                 7884 	.db #0x40
   0140 00                 7885 	.db #0x00
   0141 01                 7886 	.db #0x01
   0142 02                 7887 	.db #0x02
   0143 04                 7888 	.db #0x04
   0144 00                 7889 	.db #0x00
   0145 20                 7890 	.db #0x20
   0146 54                 7891 	.db #0x54
   0147 54                 7892 	.db #0x54
   0148 54                 7893 	.db #0x54
   0149 78                 7894 	.db #0x78
   014A 7F                 7895 	.db #0x7F
   014B 48                 7896 	.db #0x48
   014C 44                 7897 	.db #0x44
   014D 44                 7898 	.db #0x44
   014E 38                 7899 	.db #0x38
   014F 38                 7900 	.db #0x38
   0150 44                 7901 	.db #0x44
   0151 44                 7902 	.db #0x44
   0152 44                 7903 	.db #0x44
   0153 20                 7904 	.db #0x20
   0154 38                 7905 	.db #0x38
   0155 44                 7906 	.db #0x44
   0156 44                 7907 	.db #0x44
   0157 48                 7908 	.db #0x48
   0158 7F                 7909 	.db #0x7F
   0159 38                 7910 	.db #0x38
   015A 54                 7911 	.db #0x54
   015B 54                 7912 	.db #0x54
   015C 54                 7913 	.db #0x54
   015D 18                 7914 	.db #0x18
   015E 08                 7915 	.db #0x08
   015F 7E                 7916 	.db #0x7E
   0160 09                 7917 	.db #0x09
   0161 01                 7918 	.db #0x01
   0162 02                 7919 	.db #0x02
   0163 08                 7920 	.db #0x08
   0164 14                 7921 	.db #0x14
   0165 54                 7922 	.db #0x54
   0166 54                 7923 	.db #0x54
   0167 3C                 7924 	.db #0x3C
   0168 7F                 7925 	.db #0x7F
   0169 08                 7926 	.db #0x08
   016A 04                 7927 	.db #0x04
   016B 04                 7928 	.db #0x04
   016C 78                 7929 	.db #0x78
   016D 00                 7930 	.db #0x00
   016E 44                 7931 	.db #0x44
   016F 7D                 7932 	.db #0x7D
   0170 40                 7933 	.db #0x40
   0171 00                 7934 	.db #0x00
   0172 20                 7935 	.db #0x20
   0173 40                 7936 	.db #0x40
   0174 44                 7937 	.db #0x44
   0175 3D                 7938 	.db #0x3D
   0176 00                 7939 	.db #0x00
   0177 00                 7940 	.db #0x00
   0178 7F                 7941 	.db #0x7F
   0179 10                 7942 	.db #0x10
   017A 28                 7943 	.db #0x28
   017B 44                 7944 	.db #0x44
   017C 00                 7945 	.db #0x00
   017D 41                 7946 	.db #0x41
   017E 7F                 7947 	.db #0x7F
   017F 40                 7948 	.db #0x40
   0180 00                 7949 	.db #0x00
   0181 7C                 7950 	.db #0x7C
   0182 04                 7951 	.db #0x04
   0183 18                 7952 	.db #0x18
   0184 04                 7953 	.db #0x04
   0185 78                 7954 	.db #0x78
   0186 7C                 7955 	.db #0x7C
   0187 08                 7956 	.db #0x08
   0188 04                 7957 	.db #0x04
   0189 04                 7958 	.db #0x04
   018A 78                 7959 	.db #0x78
   018B 38                 7960 	.db #0x38
   018C 44                 7961 	.db #0x44
   018D 44                 7962 	.db #0x44
   018E 44                 7963 	.db #0x44
   018F 38                 7964 	.db #0x38
   0190 7C                 7965 	.db #0x7C
   0191 14                 7966 	.db #0x14
   0192 14                 7967 	.db #0x14
   0193 14                 7968 	.db #0x14
   0194 08                 7969 	.db #0x08
   0195 08                 7970 	.db #0x08
   0196 14                 7971 	.db #0x14
   0197 14                 7972 	.db #0x14
   0198 18                 7973 	.db #0x18
   0199 7C                 7974 	.db #0x7C
   019A 7C                 7975 	.db #0x7C
   019B 08                 7976 	.db #0x08
   019C 04                 7977 	.db #0x04
   019D 04                 7978 	.db #0x04
   019E 08                 7979 	.db #0x08
   019F 48                 7980 	.db #0x48
   01A0 54                 7981 	.db #0x54
   01A1 54                 7982 	.db #0x54
   01A2 54                 7983 	.db #0x54
   01A3 20                 7984 	.db #0x20
   01A4 04                 7985 	.db #0x04
   01A5 3F                 7986 	.db #0x3F
   01A6 44                 7987 	.db #0x44
   01A7 40                 7988 	.db #0x40
   01A8 20                 7989 	.db #0x20
   01A9 3C                 7990 	.db #0x3C
   01AA 40                 7991 	.db #0x40
   01AB 40                 7992 	.db #0x40
   01AC 20                 7993 	.db #0x20
   01AD 7C                 7994 	.db #0x7C
   01AE 1C                 7995 	.db #0x1C
   01AF 20                 7996 	.db #0x20
   01B0 40                 7997 	.db #0x40
   01B1 20                 7998 	.db #0x20
   01B2 1C                 7999 	.db #0x1C
   01B3 3C                 8000 	.db #0x3C
   01B4 40                 8001 	.db #0x40
   01B5 30                 8002 	.db #0x30
   01B6 40                 8003 	.db #0x40
   01B7 3C                 8004 	.db #0x3C
   01B8 44                 8005 	.db #0x44
   01B9 28                 8006 	.db #0x28
   01BA 10                 8007 	.db #0x10
   01BB 28                 8008 	.db #0x28
   01BC 44                 8009 	.db #0x44
   01BD 0C                 8010 	.db #0x0C
   01BE 50                 8011 	.db #0x50
   01BF 50                 8012 	.db #0x50
   01C0 50                 8013 	.db #0x50
   01C1 3C                 8014 	.db #0x3C
   01C2 44                 8015 	.db #0x44
   01C3 64                 8016 	.db #0x64
   01C4 54                 8017 	.db #0x54
   01C5 4C                 8018 	.db #0x4C
   01C6 44                 8019 	.db #0x44
   01C7 00                 8020 	.db #0x00
   01C8 08                 8021 	.db #0x08
   01C9 36                 8022 	.db #0x36
   01CA 41                 8023 	.db #0x41
   01CB 00                 8024 	.db #0x00
   01CC 00                 8025 	.db #0x00
   01CD 00                 8026 	.db #0x00
   01CE 7F                 8027 	.db #0x7F
   01CF 00                 8028 	.db #0x00
   01D0 00                 8029 	.db #0x00
   01D1 00                 8030 	.db #0x00
   01D2 41                 8031 	.db #0x41
   01D3 36                 8032 	.db #0x36
   01D4 08                 8033 	.db #0x08
   01D5 00                 8034 	.db #0x00
   01D6 08                 8035 	.db #0x08
   01D7 08                 8036 	.db #0x08
   01D8 2A                 8037 	.db #0x2A
   01D9 1C                 8038 	.db #0x1C
   01DA 08                 8039 	.db #0x08
   01DB 08                 8040 	.db #0x08
   01DC 1C                 8041 	.db #0x1C
   01DD 2A                 8042 	.db #0x2A
   01DE 08                 8043 	.db #0x08
   01DF 08                 8044 	.db #0x08
   01E0 00                 8045 	.db #0x00
   01E1 3A                 8046 	.db #0x3A
   01E2 3E                 8047 	.db #0x3E
   01E3 3A                 8048 	.db #0x3A
   01E4 00                 8049 	.db #0x00
   01E5 FF                 8050 	.db #0xFF
   01E6 00                 8051 	.db #0x00
   01E7 00                 8052 	.db #0x00
   01E8 00                 8053 	.db #0x00
   01E9 00                 8054 	.db #0x00
   01EA 00                 8055 	.db #0x00
   01EB FF                 8056 	.db #0xFF
   01EC 00                 8057 	.db #0x00
   01ED 00                 8058 	.db #0x00
   01EE 00                 8059 	.db #0x00
   01EF 00                 8060 	.db #0x00
   01F0 00                 8061 	.db #0x00
                           8062 	.area XINIT   (CODE)
